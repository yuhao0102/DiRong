!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALGMODEL_NAME_PREFIX	Parallel_MGT/compset_communicators_info_mgt.h	37;"	d
ANNOTATION_MGT_H	Utils/annotation_mgt.h	11;"	d
API_ID_COMP_MGT_END_COMP_REG	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_END_COMP_REG,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_COMP_ID	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_COMP_ID,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_COMP_LOG_FILE_DEVICE	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_COMP_LOG_FILE_DEVICE,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_COMP_LOG_FILE_NAME	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_COMP_LOG_FILE_NAME,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_COMP_PROC_GLOBAL_ID	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_COMP_PROC_GLOBAL_ID,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_CURRENT_PROC_ID_IN_COMP	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_CURRENT_PROC_ID_IN_COMP,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_LOCAL_COMP_FULL_NAME	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_LOCAL_COMP_FULL_NAME,$/;"	e	enum:__anon1
API_ID_COMP_MGT_GET_NUM_PROC_IN_COMP	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_GET_NUM_PROC_IN_COMP,$/;"	e	enum:__anon1
API_ID_COMP_MGT_IS_COMP_TYPE_COUPLED	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_IS_COMP_TYPE_COUPLED,$/;"	e	enum:__anon1
API_ID_COMP_MGT_IS_CURRENT_PROC_IN_COMP	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_IS_CURRENT_PROC_IN_COMP,$/;"	e	enum:__anon1
API_ID_COMP_MGT_REG_COMP	Driver/CCPL_api_mgt.h	/^    API_ID_COMP_MGT_REG_COMP,$/;"	e	enum:__anon1
API_ID_COUPLING_GEN_EXTERNAL	Driver/CCPL_api_mgt.h	/^    API_ID_COUPLING_GEN_EXTERNAL,$/;"	e	enum:__anon1
API_ID_COUPLING_GEN_FAMILY	Driver/CCPL_api_mgt.h	/^    API_ID_COUPLING_GEN_FAMILY,$/;"	e	enum:__anon1
API_ID_COUPLING_GEN_GET_COMPS	Driver/CCPL_api_mgt.h	/^    API_ID_COUPLING_GEN_GET_COMPS$/;"	e	enum:__anon1
API_ID_COUPLING_GEN_INDIVIDUAL	Driver/CCPL_api_mgt.h	/^    API_ID_COUPLING_GEN_INDIVIDUAL,$/;"	e	enum:__anon1
API_ID_DECOMP_MGT_REG_DECOMP	Driver/CCPL_api_mgt.h	/^    API_ID_DECOMP_MGT_REG_DECOMP,$/;"	e	enum:__anon1
API_ID_FIELD_MGT_REG_FIELD_INST	Driver/CCPL_api_mgt.h	/^    API_ID_FIELD_MGT_REG_FIELD_INST,$/;"	e	enum:__anon1
API_ID_FIELD_MGT_REG_IO_FIELD_from_BUFFER	Driver/CCPL_api_mgt.h	/^    API_ID_FIELD_MGT_REG_IO_FIELD_from_BUFFER,$/;"	e	enum:__anon1
API_ID_FIELD_MGT_REG_IO_FIELD_from_INST	Driver/CCPL_api_mgt.h	/^    API_ID_FIELD_MGT_REG_IO_FIELD_from_INST,$/;"	e	enum:__anon1
API_ID_FIELD_MGT_REG_IO_FIELDs_from_INSTs	Driver/CCPL_api_mgt.h	/^    API_ID_FIELD_MGT_REG_IO_FIELDs_from_INSTs,$/;"	e	enum:__anon1
API_ID_FINALIZE	Driver/CCPL_api_mgt.h	/^    API_ID_FINALIZE,$/;"	e	enum:__anon1
API_ID_GRID_MGT_CMP_GRID_VIA_REMOTE	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_CMP_GRID_VIA_REMOTE,$/;"	e	enum:__anon1
API_ID_GRID_MGT_GET_GRID_ID	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_GET_GRID_ID,$/;"	e	enum:__anon1
API_ID_GRID_MGT_GET_GRID_SIZE	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_GET_GRID_SIZE,$/;"	e	enum:__anon1
API_ID_GRID_MGT_GET_H2D_GRID_AREA_FROM_WGTS	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_GET_H2D_GRID_AREA_FROM_WGTS,$/;"	e	enum:__anon1
API_ID_GRID_MGT_GET_H2D_GRID_DATA	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_GET_H2D_GRID_DATA,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_1D_GRID_ONLINE	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_1D_GRID_ONLINE,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_GRID_VIA_COR	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_GRID_VIA_COR,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_GRID_VIA_LOCAL	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_GRID_VIA_LOCAL,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_H2D_GRID_VIA_COMP	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_H2D_GRID_VIA_COMP,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_H2D_GRID_VIA_FILE	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_H2D_GRID_VIA_FILE,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_H2D_GRID_VIA_GLOBAL_DATA	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_H2D_GRID_VIA_GLOBAL_DATA,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_H2D_GRID_VIA_LOCAL_DATA	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_H2D_GRID_VIA_LOCAL_DATA,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_MD_GRID_VIA_MULTI_GRIDS	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_MD_GRID_VIA_MULTI_GRIDS,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_MID_POINT_GRID	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_MID_POINT_GRID,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_V1D_GRID_NO_DATA	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_V1D_GRID_NO_DATA,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_V1D_HYBRID_GRID_VIA_MODEL	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_V1D_HYBRID_GRID_VIA_MODEL,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_V1D_SIGMA_GRID_VIA_MODEL	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_V1D_SIGMA_GRID_VIA_MODEL,$/;"	e	enum:__anon1
API_ID_GRID_MGT_REG_V1D_Z_GRID_VIA_MODEL	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_REG_V1D_Z_GRID_VIA_MODEL,$/;"	e	enum:__anon1
API_ID_GRID_MGT_SET_3D_GRID_3D_VERT_FLD	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_SET_3D_GRID_3D_VERT_FLD,$/;"	e	enum:__anon1
API_ID_GRID_MGT_SET_3D_GRID_DYN_BOT_FLD	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_SET_3D_GRID_DYN_BOT_FLD,$/;"	e	enum:__anon1
API_ID_GRID_MGT_SET_3D_GRID_EXTERNAL_BOT_FLD	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_SET_3D_GRID_EXTERNAL_BOT_FLD,$/;"	e	enum:__anon1
API_ID_GRID_MGT_SET_3D_GRID_STATIC_BOT_FLD	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_SET_3D_GRID_STATIC_BOT_FLD,$/;"	e	enum:__anon1
API_ID_GRID_MGT_SET_GRID_DATA	Driver/CCPL_api_mgt.h	/^    API_ID_GRID_MGT_SET_GRID_DATA,$/;"	e	enum:__anon1
API_ID_INTERFACE_CHECK_IMPORT_FIELD_CONNECTED	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_CHECK_IMPORT_FIELD_CONNECTED,$/;"	e	enum:__anon1
API_ID_INTERFACE_EXECUTE_WITH_ID	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_EXECUTE_WITH_ID,$/;"	e	enum:__anon1
API_ID_INTERFACE_EXECUTE_WITH_NAME	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_EXECUTE_WITH_NAME,$/;"	e	enum:__anon1
API_ID_INTERFACE_GET_SENDER_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_GET_SENDER_TIME,$/;"	e	enum:__anon1
API_ID_INTERFACE_REG_EXPORT	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_REG_EXPORT,$/;"	e	enum:__anon1
API_ID_INTERFACE_REG_FRAC_REMAP	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_REG_FRAC_REMAP,$/;"	e	enum:__anon1
API_ID_INTERFACE_REG_IMPORT	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_REG_IMPORT,$/;"	e	enum:__anon1
API_ID_INTERFACE_REG_NORMAL_REMAP	Driver/CCPL_api_mgt.h	/^    API_ID_INTERFACE_REG_NORMAL_REMAP,$/;"	e	enum:__anon1
API_ID_REPORT_ERROR	Driver/CCPL_api_mgt.h	/^    API_ID_REPORT_ERROR,$/;"	e	enum:__anon1
API_ID_REPORT_LOG	Driver/CCPL_api_mgt.h	/^    API_ID_REPORT_LOG,$/;"	e	enum:__anon1
API_ID_REPORT_PROGRESS	Driver/CCPL_api_mgt.h	/^    API_ID_REPORT_PROGRESS,$/;"	e	enum:__anon1
API_ID_RESTART_MGT_GET_SETTING	Driver/CCPL_api_mgt.h	/^    API_ID_RESTART_MGT_GET_SETTING,$/;"	e	enum:__anon1
API_ID_RESTART_MGT_IS_TIMER_ON	Driver/CCPL_api_mgt.h	/^    API_ID_RESTART_MGT_IS_TIMER_ON,$/;"	e	enum:__anon1
API_ID_RESTART_MGT_READ_ALL	Driver/CCPL_api_mgt.h	/^    API_ID_RESTART_MGT_READ_ALL,$/;"	e	enum:__anon1
API_ID_RESTART_MGT_READ_INTERFACE	Driver/CCPL_api_mgt.h	/^    API_ID_RESTART_MGT_READ_INTERFACE,$/;"	e	enum:__anon1
API_ID_RESTART_MGT_START_READ_IO	Driver/CCPL_api_mgt.h	/^    API_ID_RESTART_MGT_START_READ_IO,$/;"	e	enum:__anon1
API_ID_RESTART_MGT_WRITE_IO	Driver/CCPL_api_mgt.h	/^    API_ID_RESTART_MGT_WRITE_IO,$/;"	e	enum:__anon1
API_ID_TIME_MGT_ADVANCE_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_ADVANCE_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_CHECK_CURRENT_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_CHECK_CURRENT_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_DEFINE_COMPLEX_TIMER	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_DEFINE_COMPLEX_TIMER,$/;"	e	enum:__anon1
API_ID_TIME_MGT_DEFINE_SINGLE_TIMER	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_DEFINE_SINGLE_TIMER,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_CURRENT_CAL_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_CURRENT_CAL_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_CURRENT_DATE	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_CURRENT_DATE,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_CURRENT_NUM_DAYS_IN_YEAR	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_CURRENT_NUM_DAYS_IN_YEAR,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_CURRENT_SECOND	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_CURRENT_SECOND,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_CURRENT_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_CURRENT_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_CURRENT_YEAR	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_CURRENT_YEAR,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_ELAPSED_DAYS_FROM_REF	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_ELAPSED_DAYS_FROM_REF,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_ELAPSED_DAYS_FROM_START	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_ELAPSED_DAYS_FROM_START,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_NORMAL_TIME_STEP	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_NORMAL_TIME_STEP,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_NUM_CURRENT_STEP	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_NUM_CURRENT_STEP,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_NUM_TOTAL_STEPS	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_NUM_TOTAL_STEPS,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_PREVIOUS_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_PREVIOUS_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_START_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_START_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_GET_STOP_TIME	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_GET_STOP_TIME,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_END_CURRENT_DAY	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_END_CURRENT_DAY,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_END_CURRENT_MONTH	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_END_CURRENT_MONTH,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_FIRST_RESTART_STEP	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_FIRST_RESTART_STEP,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_FIRST_STEP	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_FIRST_STEP,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_MODEL_LAST_STEP	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_MODEL_LAST_STEP,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_MODEL_RUN_ENDED	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_MODEL_RUN_ENDED,$/;"	e	enum:__anon1
API_ID_TIME_MGT_IS_TIMER_ON	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_IS_TIMER_ON,$/;"	e	enum:__anon1
API_ID_TIME_MGT_RESET_TIME_TO_START	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_RESET_TIME_TO_START,$/;"	e	enum:__anon1
API_ID_TIME_MGT_SET_NORMAL_TIME_STEP	Driver/CCPL_api_mgt.h	/^    API_ID_TIME_MGT_SET_NORMAL_TIME_STEP,$/;"	e	enum:__anon1
AREA_GF	CoR/cor_cpl_interface.h	20;"	d
Accept	XML/tinyxml.cxx	/^bool TiXmlComment::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlComment
Accept	XML/tinyxml.cxx	/^bool TiXmlDeclaration::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDeclaration
Accept	XML/tinyxml.cxx	/^bool TiXmlDocument::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDocument
Accept	XML/tinyxml.cxx	/^bool TiXmlElement::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlElement
Accept	XML/tinyxml.cxx	/^bool TiXmlText::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlText
Accept	XML/tinyxml.cxx	/^bool TiXmlUnknown::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlUnknown
Add	XML/tinyxml.cxx	/^void TiXmlAttributeSet::Add( TiXmlAttribute* addMe )$/;"	f	class:TiXmlAttributeSet
Annotation_mgt	Utils/annotation_mgt.cxx	/^Annotation_mgt::Annotation_mgt()$/;"	f	class:Annotation_mgt
Annotation_mgt	Utils/annotation_mgt.h	/^class Annotation_mgt$/;"	c
Attribute	XML/tinyxml.cxx	/^const char* TiXmlElement::Attribute( const char* name ) const$/;"	f	class:TiXmlElement
Attribute	XML/tinyxml.cxx	/^const char* TiXmlElement::Attribute( const char* name, double* d ) const$/;"	f	class:TiXmlElement
Attribute	XML/tinyxml.cxx	/^const char* TiXmlElement::Attribute( const char* name, int* line) const$/;"	f	class:TiXmlElement
Attribute	XML/tinyxml.cxx	/^const std::string* TiXmlElement::Attribute( const std::string& name ) const$/;"	f	class:TiXmlElement
Attribute	XML/tinyxml.cxx	/^const std::string* TiXmlElement::Attribute( const std::string& name, double* d ) const$/;"	f	class:TiXmlElement
Attribute	XML/tinyxml.cxx	/^const std::string* TiXmlElement::Attribute( const std::string& name, int* i ) const$/;"	f	class:TiXmlElement
BOTTOM_FIELD_VARIATION_DYNAMIC	Data_MGT/original_grid_mgt.h	21;"	d
BOTTOM_FIELD_VARIATION_EXTERNAL	Data_MGT/original_grid_mgt.h	22;"	d
BOTTOM_FIELD_VARIATION_STATIC	Data_MGT/original_grid_mgt.h	20;"	d
BOTTOM_FIELD_VARIATION_UNSET	Data_MGT/original_grid_mgt.h	19;"	d
BUF_MARK_AVERAGED_INNER	Data_MGT/memory_mgt.h	20;"	d
BUF_MARK_AVERAGED_INTER	Data_MGT/memory_mgt.h	21;"	d
BUF_MARK_DATATYPE_TRANS	Data_MGT/memory_mgt.h	23;"	d
BUF_MARK_DATA_TRANSFER	Data_MGT/memory_mgt.h	24;"	d
BUF_MARK_GATHER	Data_MGT/memory_mgt.h	27;"	d
BUF_MARK_GRID_FIELD	Data_MGT/memory_mgt.h	19;"	d
BUF_MARK_IO_FIELD_MIRROR	Data_MGT/memory_mgt.h	26;"	d
BUF_MARK_IO_FIELD_REG	Data_MGT/memory_mgt.h	25;"	d
BUF_MARK_REMAP_DATATYPE_TRANS_DST	Data_MGT/memory_mgt.h	31;"	d
BUF_MARK_REMAP_DATATYPE_TRANS_SRC	Data_MGT/memory_mgt.h	30;"	d
BUF_MARK_REMAP_FRAC	Data_MGT/memory_mgt.h	29;"	d
BUF_MARK_REMAP_NORMAL	Data_MGT/memory_mgt.h	28;"	d
BUF_MARK_UNIT_TRANS	Data_MGT/memory_mgt.h	22;"	d
Blank	XML/tinyxmlparser.cxx	/^bool TiXmlText::Blank() const$/;"	f	class:TiXmlText
CCPL_API_MGT	Driver/CCPL_api_mgt.h	11;"	d
CCPL_NAME_STR_LEN	Utils/common_utils.h	14;"	d
CCPL_NULL_COMM	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, public  :: CCPL_NULL_COMM /;"	v	module:CCPL_interface_mod
CCPL_NULL_INT	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, public  :: CCPL_NULL_INT /;"	v	module:CCPL_interface_mod
CCPL_NULL_INT	Utils/execution_report.h	30;"	d
CCPL_NULL_LONG	Utils/execution_report.h	31;"	d
CCPL_TAG_CPL	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, public  :: CCPL_TAG_CPL /;"	v	module:CCPL_interface_mod
CCPL_TAG_CPL_REST	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, public  :: CCPL_TAG_CPL_REST /;"	v	module:CCPL_interface_mod
CCPL_TAG_REST	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, public  :: CCPL_TAG_REST /;"	v	module:CCPL_interface_mod
CCPL_abort	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_abort(/;"	s	module:CCPL_interface_mod
CCPL_advance_time	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_advance_time(/;"	s	module:CCPL_interface_mod
CCPL_allreduce_real16	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_allreduce_real16(/;"	s	module:CCPL_interface_mod
CCPL_check_current_time	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_check_current_time(/;"	s	module:CCPL_interface_mod
CCPL_check_is_import_field_connected	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_check_is_import_field_connected(/;"	f	module:CCPL_interface_mod
CCPL_define_complex_timer	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_define_complex_timer(/;"	f	module:CCPL_interface_mod
CCPL_define_single_timer	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_define_single_timer(/;"	f	module:CCPL_interface_mod
CCPL_do_external_coupling_generation	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_do_external_coupling_generation(/;"	s	module:CCPL_interface_mod
CCPL_do_family_coupling_generation	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_do_family_coupling_generation(/;"	s	module:CCPL_interface_mod
CCPL_do_individual_coupling_generation	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_do_individual_coupling_generation(/;"	s	module:CCPL_interface_mod
CCPL_do_restart_write_IO	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_do_restart_write_IO(/;"	s	module:CCPL_interface_mod
CCPL_end_coupling_configuration	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_end_coupling_configuration(/;"	s	module:CCPL_interface_mod
CCPL_execute_interface_using_id	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_execute_interface_using_id(/;"	f	module:CCPL_interface_mod
CCPL_execute_interface_using_name	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_execute_interface_using_name(/;"	f	module:CCPL_interface_mod
CCPL_finalize	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_finalize(/;"	s	module:CCPL_interface_mod
CCPL_get_H2D_grid_double_area_in_remapping_wgts	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_get_H2D_grid_double_area_in_remapping_wgts(/;"	f	module:CCPL_interface_mod
CCPL_get_H2D_grid_double_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_H2D_grid_double_data(/;"	s	module:CCPL_interface_mod
CCPL_get_H2D_grid_float_area_in_remapping_wgts	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_get_H2D_grid_float_area_in_remapping_wgts(/;"	f	module:CCPL_interface_mod
CCPL_get_H2D_grid_float_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_H2D_grid_float_data(/;"	s	module:CCPL_interface_mod
CCPL_get_H2D_grid_integer_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_H2D_grid_integer_data(/;"	s	module:CCPL_interface_mod
CCPL_get_comp_log_file_device	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_comp_log_file_device(/;"	f	module:CCPL_interface_mod
CCPL_get_comp_log_file_name	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_get_comp_log_file_name(/;"	f	module:CCPL_interface_mod
CCPL_get_component_id	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_component_id(/;"	f	module:CCPL_interface_mod
CCPL_get_component_process_global_id	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_component_process_global_id(/;"	f	module:CCPL_interface_mod
CCPL_get_configurable_comps_full_names	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_configurable_comps_full_names(/;"	s	module:CCPL_interface_mod
CCPL_get_current_date	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_current_date(/;"	f	module:CCPL_interface_mod
CCPL_get_current_num_days_in_year	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_current_num_days_in_year(/;"	f	module:CCPL_interface_mod
CCPL_get_current_process_id_in_component	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_current_process_id_in_component(/;"	f	module:CCPL_interface_mod
CCPL_get_current_second	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_current_second(/;"	f	module:CCPL_interface_mod
CCPL_get_current_time	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_current_time(/;"	s	module:CCPL_interface_mod
CCPL_get_current_year	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_current_year(/;"	f	module:CCPL_interface_mod
CCPL_get_double_current_calendar_time	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_double_current_calendar_time(/;"	s	module:CCPL_interface_mod
CCPL_get_float_current_calendar_time	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_float_current_calendar_time(/;"	s	module:CCPL_interface_mod
CCPL_get_grid_id	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_grid_id(/;"	f	module:CCPL_interface_mod
CCPL_get_grid_size	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_grid_size(/;"	f	module:CCPL_interface_mod
CCPL_get_import_fields_sender_time	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_import_fields_sender_time(/;"	s	module:CCPL_interface_mod
CCPL_get_local_comp_full_name	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_local_comp_full_name(/;"	s	module:CCPL_interface_mod
CCPL_get_normal_time_step	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_normal_time_step(/;"	f	module:CCPL_interface_mod
CCPL_get_num_elapsed_days_from_reference	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_num_elapsed_days_from_reference(/;"	s	module:CCPL_interface_mod
CCPL_get_num_elapsed_days_from_start	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_num_elapsed_days_from_start(/;"	s	module:CCPL_interface_mod
CCPL_get_num_process_in_component	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_get_num_process_in_component(/;"	f	module:CCPL_interface_mod
CCPL_get_number_of_current_step	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_number_of_current_step(/;"	f	module:CCPL_interface_mod
CCPL_get_number_of_total_steps	Driver/c_coupler_interface_mod.F90	/^ integer FUNCTION CCPL_get_number_of_total_steps(/;"	f	module:CCPL_interface_mod
CCPL_get_previous_time	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_previous_time(/;"	s	module:CCPL_interface_mod
CCPL_get_restart_setting	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_get_restart_setting(/;"	s	module:CCPL_interface_mod
CCPL_get_start_time	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_start_time(/;"	s	module:CCPL_interface_mod
CCPL_get_stop_time	Driver/c_coupler_interface_mod.F90	/^ SUBROUTINE CCPL_get_stop_time(/;"	s	module:CCPL_interface_mod
CCPL_interface_mod	Driver/c_coupler_interface_mod.F90	/^ MODULE CCPL_interface_mod$/;"	m
CCPL_is_comp_type_coupled	Driver/c_coupler_interface_mod.F90	/^   LOGICAL FUNCTION CCPL_is_comp_type_coupled(/;"	f	module:CCPL_interface_mod
CCPL_is_current_process_in_component	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_is_current_process_in_component(/;"	f	module:CCPL_interface_mod
CCPL_is_end_current_day	Driver/c_coupler_interface_mod.F90	/^ logical FUNCTION CCPL_is_end_current_day(/;"	f	module:CCPL_interface_mod
CCPL_is_end_current_month	Driver/c_coupler_interface_mod.F90	/^ logical FUNCTION CCPL_is_end_current_month(/;"	f	module:CCPL_interface_mod
CCPL_is_first_restart_step	Driver/c_coupler_interface_mod.F90	/^ logical FUNCTION CCPL_is_first_restart_step(/;"	f	module:CCPL_interface_mod
CCPL_is_first_step	Driver/c_coupler_interface_mod.F90	/^ logical FUNCTION CCPL_is_first_step(/;"	f	module:CCPL_interface_mod
CCPL_is_last_step_of_model_run	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_is_last_step_of_model_run(/;"	f	module:CCPL_interface_mod
CCPL_is_model_run_ended	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_is_model_run_ended(/;"	f	module:CCPL_interface_mod
CCPL_is_restart_timer_on	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_is_restart_timer_on(/;"	f	module:CCPL_interface_mod
CCPL_is_timer_on	Driver/c_coupler_interface_mod.F90	/^   logical FUNCTION CCPL_is_timer_on(/;"	f	module:CCPL_interface_mod
CCPL_platform_log_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char CCPL_platform_log_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
CCPL_register_CoR_defined_grid	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_CoR_defined_grid(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_from_another_component	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_from_another_component(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_global_online_C1D_M1D_double	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_global_online_C1D_M1D_double(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_global_online_C1D_M1D_float	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_global_online_C1D_M1D_float(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_global_online_C2D_M2D_double	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_global_online_C2D_M2D_double(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_global_online_C2D_M2D_float	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_global_online_C2D_M2D_float(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_local_online_double	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_local_online_double(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_local_online_float	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_local_online_float(/;"	f	module:CCPL_interface_mod
CCPL_register_H2D_grid_via_file	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_H2D_grid_via_file(/;"	f	module:CCPL_interface_mod
CCPL_register_IO_field_from_field_instance	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_IO_field_from_field_instance(/;"	s	module:CCPL_interface_mod
CCPL_register_IO_fields_from_field_instances	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_IO_fields_from_field_instances(/;"	s	module:CCPL_interface_mod
CCPL_register_MD_grid_via_multi_grids	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_MD_grid_via_multi_grids(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_HYBRID_grid_via_double_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_HYBRID_grid_via_double_data(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_HYBRID_grid_via_float_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_HYBRID_grid_via_float_data(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_SIGMA_grid_via_double_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_SIGMA_grid_via_double_data(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_SIGMA_grid_via_float_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_SIGMA_grid_via_float_data(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_Z_grid_via_double_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_Z_grid_via_double_data(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_Z_grid_via_float_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_Z_grid_via_float_data(/;"	f	module:CCPL_interface_mod
CCPL_register_V1D_grid_without_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_V1D_grid_without_data(/;"	f	module:CCPL_interface_mod
CCPL_register_component	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_component(/;"	f	module:CCPL_interface_mod
CCPL_register_export_interface	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_export_interface(/;"	f	module:CCPL_interface_mod
CCPL_register_import_interface	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_import_interface(/;"	f	module:CCPL_interface_mod
CCPL_register_mid_point_grid	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_mid_point_grid(/;"	s	module:CCPL_interface_mod
CCPL_register_model_double_0D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_double_0D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_double_1D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_double_1D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_double_2D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_double_2D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_double_3D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_double_3D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_double_4D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_double_4D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_float_0D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_float_0D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_float_1D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_float_1D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_float_2D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_float_2D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_float_3D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_float_3D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_float_4D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_float_4D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_integer_0D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_integer_0D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_integer_1D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_integer_1D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_integer_2D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_integer_2D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_integer_3D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_integer_3D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_model_integer_4D_data	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_model_integer_4D_data(/;"	f	module:CCPL_interface_mod
CCPL_register_new_IO_field_double_0D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_double_0D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_double_1D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_double_1D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_double_2D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_double_2D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_double_3D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_double_3D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_double_4D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_double_4D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_float_0D_data	Driver/c_coupler_interface_mod.F90	/^   subroutine CCPL_register_new_IO_field_float_0D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_float_1D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_float_1D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_float_2D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_float_2D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_float_3D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_float_3D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_float_4D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_float_4D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_integer_0D_data	Driver/c_coupler_interface_mod.F90	/^   subroutine CCPL_register_new_IO_field_integer_0D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_integer_1D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_integer_1D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_integer_2D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_integer_2D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_integer_3D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_integer_3D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_new_IO_field_integer_4D_data	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_register_new_IO_field_integer_4D_data(/;"	s	module:CCPL_interface_mod
CCPL_register_normal_parallel_decomp	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_normal_parallel_decomp(/;"	f	module:CCPL_interface_mod
CCPL_register_normal_remap_interface	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_normal_remap_interface(/;"	f	module:CCPL_interface_mod
CCPL_register_remap_interface_with_double_frac	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_remap_interface_with_double_frac(/;"	f	module:CCPL_interface_mod
CCPL_register_remap_interface_with_float_frac	Driver/c_coupler_interface_mod.F90	/^   integer FUNCTION CCPL_register_remap_interface_with_float_frac(/;"	f	module:CCPL_interface_mod
CCPL_report_error	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_report_error(/;"	s	module:CCPL_interface_mod
CCPL_report_log	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_report_log(/;"	s	module:CCPL_interface_mod
CCPL_report_progress	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_report_progress(/;"	s	module:CCPL_interface_mod
CCPL_reset_current_time_to_start_time	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_reset_current_time_to_start_time(/;"	s	module:CCPL_interface_mod
CCPL_restart_read_fields_all	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_restart_read_fields_all(/;"	s	module:CCPL_interface_mod
CCPL_restart_read_fields_interface	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_restart_read_fields_interface(/;"	s	module:CCPL_interface_mod
CCPL_set_3D_grid_3D_vertical_coord_field	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_set_3D_grid_3D_vertical_coord_field(/;"	s	module:CCPL_interface_mod
CCPL_set_3D_grid_constant_surface_field	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_set_3D_grid_constant_surface_field(/;"	s	module:CCPL_interface_mod
CCPL_set_3D_grid_external_surface_field	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_set_3D_grid_external_surface_field(/;"	s	module:CCPL_interface_mod
CCPL_set_3D_grid_variable_surface_field	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_set_3D_grid_variable_surface_field(/;"	s	module:CCPL_interface_mod
CCPL_set_normal_time_step	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_set_normal_time_step(/;"	s	module:CCPL_interface_mod
CCPL_start_restart_read_IO	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE CCPL_start_restart_read_IO(/;"	s	module:CCPL_interface_mod
CDATA	XML/tinyxml.h	/^	bool CDATA() const				{ return cdata; }$/;"	f	class:TiXmlText
COMMON_UTILS	Utils/common_utils.h	11;"	d
COMM_MGT_H	Parallel_MGT/compset_communicators_info_mgt.h	11;"	d
COMP_GATHER_FIELD	Parallel_MGT/fields_gather_scatter_mgt.h	11;"	d
COMP_TYPE_ACTIVE_COUPLED	Parallel_MGT/compset_communicators_info_mgt.h	24;"	d
COMP_TYPE_ATM	Parallel_MGT/compset_communicators_info_mgt.h	26;"	d
COMP_TYPE_ATM_CHEM	Parallel_MGT/compset_communicators_info_mgt.h	28;"	d
COMP_TYPE_CPL	Parallel_MGT/compset_communicators_info_mgt.h	25;"	d
COMP_TYPE_GLC	Parallel_MGT/compset_communicators_info_mgt.h	27;"	d
COMP_TYPE_LND	Parallel_MGT/compset_communicators_info_mgt.h	30;"	d
COMP_TYPE_OCN	Parallel_MGT/compset_communicators_info_mgt.h	29;"	d
COMP_TYPE_PSEUDO_COUPLED	Parallel_MGT/compset_communicators_info_mgt.h	23;"	d
COMP_TYPE_ROOT	Parallel_MGT/compset_communicators_info_mgt.h	34;"	d
COMP_TYPE_RUNOFF	Parallel_MGT/compset_communicators_info_mgt.h	33;"	d
COMP_TYPE_SEA_ICE	Parallel_MGT/compset_communicators_info_mgt.h	31;"	d
COMP_TYPE_WAVE	Parallel_MGT/compset_communicators_info_mgt.h	32;"	d
COORD_BOUND_ACYCLIC	CoR/remap_grid_mgt.h	19;"	d
COORD_BOUND_CYCLIC	CoR/remap_grid_mgt.h	18;"	d
COORD_LABEL_LAT	CoR/remap_grid_class.h	32;"	d
COORD_LABEL_LEV	CoR/remap_grid_class.h	34;"	d
COORD_LABEL_LON	CoR/remap_grid_class.h	33;"	d
COORD_LABEL_TIME	CoR/remap_grid_class.h	35;"	d
COORD_LABEL_TRACER	CoR/remap_grid_class.h	36;"	d
COORD_UNIT_DEGREES	CoR/remap_grid_class.h	38;"	d
COORD_UNIT_RADIANS	CoR/remap_grid_class.h	37;"	d
COR_CPL_INTERFACE	CoR/cor_cpl_interface.h	11;"	d
COR_GLOBAL_DATA	CoR/cor_global_data.h	11;"	d
COUPLING_GENERATOR_H	Runtime_MGT/coupling_generator.h	14;"	d
COUPLING_INTERFACE_H	Driver/coupling_interface.h	11;"	d
COUPLING_INTERFACE_MARK_EXPORT	Runtime_MGT/inout_interface_mgt.h	/^    COUPLING_INTERFACE_MARK_EXPORT,$/;"	e	enum:__anon2
COUPLING_INTERFACE_MARK_FRAC_REMAP	Runtime_MGT/inout_interface_mgt.h	/^    COUPLING_INTERFACE_MARK_FRAC_REMAP$/;"	e	enum:__anon2
COUPLING_INTERFACE_MARK_IMPORT	Runtime_MGT/inout_interface_mgt.h	/^    COUPLING_INTERFACE_MARK_IMPORT = 0,$/;"	e	enum:__anon2
COUPLING_INTERFACE_MARK_NORMAL_REMAP	Runtime_MGT/inout_interface_mgt.h	/^    COUPLING_INTERFACE_MARK_NORMAL_REMAP,$/;"	e	enum:__anon2
COUPLING_TIME_MGT	Driver/timer_mgt.h	11;"	d
CStr	XML/tinyxml.h	/^	const char* CStr()								{ return buffer.c_str(); }$/;"	f	class:TiXmlPrinter
Cell	CoR/delaunay_voronoi.h	/^struct Cell$/;"	s
Child	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::Child( const char* value, int count ) const$/;"	f	class:TiXmlHandle
Child	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::Child( int count ) const$/;"	f	class:TiXmlHandle
Child	XML/tinyxml.h	/^	TiXmlHandle Child( const std::string& _value, int index ) const			{ return Child( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle
ChildElement	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::ChildElement( const char* value, int count ) const$/;"	f	class:TiXmlHandle
ChildElement	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::ChildElement( int count ) const$/;"	f	class:TiXmlHandle
ChildElement	XML/tinyxml.h	/^	TiXmlHandle ChildElement( const std::string& _value, int index ) const	{ return ChildElement( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle
Clear	XML/tinyxml.cxx	/^void TiXmlNode::Clear()$/;"	f	class:TiXmlNode
Clear	XML/tinyxml.h	/^	void Clear()		{ row = col = -1; }$/;"	f	struct:TiXmlCursor
ClearError	XML/tinyxml.h	/^	void ClearError()						{	error = false; $/;"	f	class:TiXmlDocument
ClearThis	XML/tinyxml.cxx	/^void TiXmlElement::ClearThis()$/;"	f	class:TiXmlElement
Clone	XML/tinyxml.cxx	/^TiXmlNode* TiXmlComment::Clone() const$/;"	f	class:TiXmlComment
Clone	XML/tinyxml.cxx	/^TiXmlNode* TiXmlDeclaration::Clone() const$/;"	f	class:TiXmlDeclaration
Clone	XML/tinyxml.cxx	/^TiXmlNode* TiXmlDocument::Clone() const$/;"	f	class:TiXmlDocument
Clone	XML/tinyxml.cxx	/^TiXmlNode* TiXmlElement::Clone() const$/;"	f	class:TiXmlElement
Clone	XML/tinyxml.cxx	/^TiXmlNode* TiXmlText::Clone() const$/;"	f	class:TiXmlText
Clone	XML/tinyxml.cxx	/^TiXmlNode* TiXmlUnknown::Clone() const$/;"	f	class:TiXmlUnknown
CoR_grids	Data_MGT/original_grid_mgt.h	/^        Remap_mgt *CoR_grids;$/;"	m	class:Original_grid_mgt
CoR_script_name	Data_MGT/original_grid_mgt.h	/^        char CoR_script_name[NAME_STR_SIZE];$/;"	m	class:Original_grid_mgt
Column	XML/tinyxml.h	/^	int Column() const		{ return location.col + 1; }	\/\/\/< See Row()$/;"	f	class:TiXmlBase
Comp_comm_group_mgt_mgr	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_mgr::Comp_comm_group_mgt_mgr(const char *executable_name)$/;"	f	class:Comp_comm_group_mgt_mgr
Comp_comm_group_mgt_mgr	Parallel_MGT/compset_communicators_info_mgt.h	/^class Comp_comm_group_mgt_mgr$/;"	c
Comp_comm_group_mgt_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node::Comp_comm_group_mgt_node(TiXmlElement *XML_element, const char *specified_full_name, const char *XML_file_name)$/;"	f	class:Comp_comm_group_mgt_node
Comp_comm_group_mgt_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node::Comp_comm_group_mgt_node(const char *comp_name, const char *comp_type, int comp_id, Comp_comm_group_mgt_node *parent, MPI_Comm &comm, bool enabled_in_parent_coupling_gen, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_node
Comp_comm_group_mgt_node	Parallel_MGT/compset_communicators_info_mgt.h	/^class Comp_comm_group_mgt_node$/;"	c
Component_IO_output_procedures	Data_MGT/IO_field_mgt.cxx	/^Component_IO_output_procedures::Component_IO_output_procedures(int comp_id, const char *xml_file_name, bool synchronized_IO)$/;"	f	class:Component_IO_output_procedures
Component_IO_output_procedures	Data_MGT/IO_field_mgt.h	/^class Component_IO_output_procedures$/;"	c
Component_import_interfaces_configuration	Runtime_MGT/coupling_generator.cxx	/^Component_import_interfaces_configuration::Component_import_interfaces_configuration(int host_comp_id, const char *comp_full_name, Inout_interface_mgt *interface_mgr, bool check_comp_existence)$/;"	f	class:Component_import_interfaces_configuration
Component_import_interfaces_configuration	Runtime_MGT/coupling_generator.h	/^class Component_import_interfaces_configuration$/;"	c
Components_IO_output_procedures_mgt	Data_MGT/IO_field_mgt.h	/^        Components_IO_output_procedures_mgt() {}$/;"	f	class:Components_IO_output_procedures_mgt
Components_IO_output_procedures_mgt	Data_MGT/IO_field_mgt.h	/^class Components_IO_output_procedures_mgt$/;"	c
Components_time_mgt	Driver/timer_mgt.h	/^        Components_time_mgt() {}$/;"	f	class:Components_time_mgt
Components_time_mgt	Driver/timer_mgt.h	/^class Components_time_mgt$/;"	c
Connection_coupling_procedure	Runtime_MGT/inout_interface_mgt.cxx	/^Connection_coupling_procedure::Connection_coupling_procedure(Inout_interface *inout_interface, Coupling_connection *coupling_connection)$/;"	f	class:Connection_coupling_procedure
Connection_coupling_procedure	Runtime_MGT/inout_interface_mgt.h	/^class Connection_coupling_procedure$/;"	c
Connection_field_time_info	Runtime_MGT/inout_interface_mgt.cxx	/^Connection_field_time_info::Connection_field_time_info(Inout_interface *inout_interface, Coupling_timer *timer, int time_step_in_second, int current_year, int current_month, int current_day, int current_second, int inst_or_aver)$/;"	f	class:Connection_field_time_info
Connection_field_time_info	Runtime_MGT/inout_interface_mgt.h	/^class Connection_field_time_info$/;"	c
ConvertUTF32ToUTF8	XML/tinyxmlparser.cxx	/^void TiXmlBase::ConvertUTF32ToUTF8( unsigned long input, char* output, int* length )$/;"	f	class:TiXmlBase
CopyTo	XML/tinyxml.cxx	/^void TiXmlComment::CopyTo( TiXmlComment* target ) const$/;"	f	class:TiXmlComment
CopyTo	XML/tinyxml.cxx	/^void TiXmlDeclaration::CopyTo( TiXmlDeclaration* target ) const$/;"	f	class:TiXmlDeclaration
CopyTo	XML/tinyxml.cxx	/^void TiXmlDocument::CopyTo( TiXmlDocument* target ) const$/;"	f	class:TiXmlDocument
CopyTo	XML/tinyxml.cxx	/^void TiXmlElement::CopyTo( TiXmlElement* target ) const$/;"	f	class:TiXmlElement
CopyTo	XML/tinyxml.cxx	/^void TiXmlNode::CopyTo( TiXmlNode* target ) const$/;"	f	class:TiXmlNode
CopyTo	XML/tinyxml.cxx	/^void TiXmlText::CopyTo( TiXmlText* target ) const$/;"	f	class:TiXmlText
CopyTo	XML/tinyxml.cxx	/^void TiXmlUnknown::CopyTo( TiXmlUnknown* target ) const$/;"	f	class:TiXmlUnknown
Coupling_connection	Runtime_MGT/coupling_generator.cxx	/^Coupling_connection::Coupling_connection(int id)$/;"	f	class:Coupling_connection
Coupling_connection	Runtime_MGT/coupling_generator.h	/^class Coupling_connection$/;"	c
Coupling_generator	Runtime_MGT/coupling_generator.h	/^        Coupling_generator() { latest_connection_id = 1; import_field_index_lookup_table = NULL; export_field_index_lookup_table = NULL; }$/;"	f	class:Coupling_generator
Coupling_generator	Runtime_MGT/coupling_generator.h	/^class Coupling_generator$/;"	c
Coupling_timer	Driver/timer_mgt.cxx	/^Coupling_timer::Coupling_timer(const char *array_buffer, long &buffer_content_iter, int comp_id, bool report_check, bool &successful)$/;"	f	class:Coupling_timer
Coupling_timer	Driver/timer_mgt.cxx	/^Coupling_timer::Coupling_timer(int comp_id, int timer_id, Coupling_timer *existing_timer)$/;"	f	class:Coupling_timer
Coupling_timer	Driver/timer_mgt.cxx	/^Coupling_timer::Coupling_timer(int comp_id, int timer_id, const char *freq_unit, int freq_count, int local_lag_count, int remote_lag_count, const char *annotation)$/;"	f	class:Coupling_timer
Coupling_timer	Driver/timer_mgt.cxx	/^Coupling_timer::Coupling_timer(int comp_id, int timer_id, int *children_timers_id, int num_children_timers, int or_or_and, const char *annotation)$/;"	f	class:Coupling_timer
Coupling_timer	Driver/timer_mgt.h	/^class Coupling_timer$/;"	c
Cursor	XML/tinyxmlparser.cxx	/^	const TiXmlCursor& Cursor() const	{ return cursor; }$/;"	f	class:TiXmlParsingData
DATAINST_NAME_PREFIX	Parallel_MGT/compset_communicators_info_mgt.h	36;"	d
DATAMODEL_NAME_PREFIX	Parallel_MGT/compset_communicators_info_mgt.h	35;"	d
DATA_TYPE_BOOL	CoR/cor_global_data.h	31;"	d
DATA_TYPE_CHAR	CoR/cor_global_data.h	32;"	d
DATA_TYPE_DOUBLE	CoR/cor_global_data.h	29;"	d
DATA_TYPE_FLOAT	CoR/cor_global_data.h	30;"	d
DATA_TYPE_INT	CoR/cor_global_data.h	34;"	d
DATA_TYPE_LONG	CoR/cor_global_data.h	33;"	d
DATA_TYPE_SHORT	CoR/cor_global_data.h	35;"	d
DATA_TYPE_STRING	CoR/cor_global_data.h	36;"	d
DEBUG	XML/tinyxml.h	46;"	d
DECOMP_GRID_MGT	Parallel_MGT/decomp_grid_mgt.h	11;"	d
DECOMP_INFO	Parallel_MGT/decomp_info_mgt.h	11;"	d
DEFAULT_FILL_VALUE	CoR/cor_global_data.h	40;"	d
DEGREE_TO_RADIAN	CoR/remap_common_utils.h	14;"	d
DICTIONARY_H	Utils/dictionary.h	11;"	d
Decomp_grid_info	Parallel_MGT/decomp_grid_mgt.cxx	/^Decomp_grid_info::Decomp_grid_info(int decomp_id, Remap_grid_class *original_grid)$/;"	f	class:Decomp_grid_info
Decomp_grid_info	Parallel_MGT/decomp_grid_mgt.h	/^class Decomp_grid_info$/;"	c
Decomp_grid_mgt	Parallel_MGT/decomp_grid_mgt.h	/^        Decomp_grid_mgt() {}$/;"	f	class:Decomp_grid_mgt
Decomp_grid_mgt	Parallel_MGT/decomp_grid_mgt.h	/^class Decomp_grid_mgt$/;"	c
Decomp_info	Parallel_MGT/decomp_info_mgt.cxx	/^Decomp_info::Decomp_info(const char *decomp_name, int decomp_id, int host_comp_id, int grid_id, int num_local_cells, const int *cell_indexes_in_decomp, const char *annotation, bool registered)$/;"	f	class:Decomp_info
Decomp_info	Parallel_MGT/decomp_info_mgt.h	/^class Decomp_info$/;"	c
Decomp_info_mgt	Parallel_MGT/decomp_info_mgt.h	/^        Decomp_info_mgt() {}$/;"	f	class:Decomp_info_mgt
Decomp_info_mgt	Parallel_MGT/decomp_info_mgt.h	/^class Decomp_info_mgt$/;"	c
Delaunay_Voronoi	CoR/delaunay_voronoi.cxx	/^Delaunay_Voronoi::Delaunay_Voronoi(int num_points, double *lat_values, double *lon_values, bool is_global_grid,$/;"	f	class:Delaunay_Voronoi
Delaunay_Voronoi	CoR/delaunay_voronoi.h	/^class Delaunay_Voronoi$/;"	c
Dictionary	Utils/dictionary.h	/^Dictionary<T>::Dictionary(int size)$/;"	f	class:Dictionary
Dictionary	Utils/dictionary.h	/^class Dictionary$/;"	c
Dictionary_node	Utils/dictionary.h	/^struct Dictionary_node {$/;"	s
DoIndent	XML/tinyxml.h	/^	void DoIndent()	{$/;"	f	class:TiXmlPrinter
DoLineBreak	XML/tinyxml.h	/^	void DoLineBreak() {$/;"	f	class:TiXmlPrinter
DoubleValue	XML/tinyxml.cxx	/^double  TiXmlAttribute::DoubleValue() const$/;"	f	class:TiXmlAttribute
EDGE_TYPE_GREAT_ARC	CoR/grid_cell_search.h	19;"	d
EDGE_TYPE_LATLON	CoR/grid_cell_search.h	18;"	d
EDGE_TYPE_XY	CoR/grid_cell_search.h	20;"	d
ENSEMBLE_MGT_H	Runtime_MGT/ensemble_mgt.h	11;"	d
EXECUTION_REPORT	Utils/execution_report.h	13;"	d
EXECUTION_REPORT_ERROR_OPTIONALLY	Utils/execution_report.h	15;"	d
EXECUTION_REPORT_H	Utils/execution_report.h	11;"	d
EXECUTION_REPORT_LOG	Utils/execution_report.h	14;"	d
Edge	CoR/delaunay_voronoi.cxx	/^Edge::Edge(Point *head, Point *tail) $/;"	f	class:Edge
Edge	CoR/delaunay_voronoi.h	/^class Edge$/;"	c
Element	XML/tinyxml.h	/^	TiXmlElement* Element() const	{ return ToElement(); }$/;"	f	class:TiXmlHandle
EncodeString	XML/tinyxml.cxx	/^void TiXmlBase::EncodeString( const TIXML_STRING& str, TIXML_STRING* outString )$/;"	f	class:TiXmlBase
Encoding	XML/tinyxml.h	/^	const char *Encoding() const		{ return encoding.c_str (); }$/;"	f	class:TiXmlDeclaration
Ensemble_mgt	Runtime_MGT/ensemble_mgt.cxx	/^Ensemble_mgt::Ensemble_mgt()$/;"	f	class:Ensemble_mgt
Ensemble_mgt	Runtime_MGT/ensemble_mgt.h	/^class Ensemble_mgt$/;"	c
Entity	XML/tinyxml.h	/^	struct Entity$/;"	s	class:TiXmlBase
Error	XML/tinyxml.h	/^	bool Error() const						{ return error; }$/;"	f	class:TiXmlDocument
ErrorCol	XML/tinyxml.h	/^	int ErrorCol() const	{ return errorLocation.col+1; }	\/\/\/< The column where the error occured. See ErrorRow()$/;"	f	class:TiXmlDocument
ErrorDesc	XML/tinyxml.h	/^	const char * ErrorDesc() const	{ return errorDesc.c_str (); }$/;"	f	class:TiXmlDocument
ErrorId	XML/tinyxml.h	/^	int ErrorId()	const				{ return errorId; }$/;"	f	class:TiXmlDocument
ErrorRow	XML/tinyxml.h	/^	int ErrorRow() const	{ return errorLocation.row+1; }$/;"	f	class:TiXmlDocument
FIELD_0_DIM	Data_MGT/field_info_mgt.h	17;"	d
FIELD_2_DIM	Data_MGT/field_info_mgt.h	18;"	d
FIELD_3_DIM	Data_MGT/field_info_mgt.h	20;"	d
FIELD_4_DIM	Data_MGT/field_info_mgt.h	21;"	d
FIELD_MGT	Data_MGT/field_info_mgt.h	11;"	d
FIELD_NECESSITY_NECESSARY	Runtime_MGT/inout_interface_mgt.h	31;"	d
FIELD_NECESSITY_OPTIONAL	Runtime_MGT/inout_interface_mgt.h	32;"	d
FIELD_V1_DIM	Data_MGT/field_info_mgt.h	19;"	d
FILE_TYPE_BINARY	CoR/io_basis.h	15;"	d
FILE_TYPE_NETCDF	CoR/io_basis.h	14;"	d
FILL_VALUE_LABEL	CoR/cor_global_data.h	38;"	d
FREQUENCY_UNIT_DAY	Driver/timer_mgt.h	18;"	d
FREQUENCY_UNIT_DAYS	Driver/timer_mgt.h	25;"	d
FREQUENCY_UNIT_HOUR	Driver/timer_mgt.h	17;"	d
FREQUENCY_UNIT_HOURS	Driver/timer_mgt.h	24;"	d
FREQUENCY_UNIT_MINUTE	Driver/timer_mgt.h	16;"	d
FREQUENCY_UNIT_MINUTES	Driver/timer_mgt.h	23;"	d
FREQUENCY_UNIT_MONTH	Driver/timer_mgt.h	19;"	d
FREQUENCY_UNIT_MONTHS	Driver/timer_mgt.h	26;"	d
FREQUENCY_UNIT_NDAY	Driver/timer_mgt.h	32;"	d
FREQUENCY_UNIT_NDAYS	Driver/timer_mgt.h	39;"	d
FREQUENCY_UNIT_NHOUR	Driver/timer_mgt.h	31;"	d
FREQUENCY_UNIT_NHOURS	Driver/timer_mgt.h	38;"	d
FREQUENCY_UNIT_NMINUTE	Driver/timer_mgt.h	30;"	d
FREQUENCY_UNIT_NMINUTES	Driver/timer_mgt.h	37;"	d
FREQUENCY_UNIT_NMONTH	Driver/timer_mgt.h	33;"	d
FREQUENCY_UNIT_NMONTHS	Driver/timer_mgt.h	40;"	d
FREQUENCY_UNIT_NSECOND	Driver/timer_mgt.h	29;"	d
FREQUENCY_UNIT_NSECONDS	Driver/timer_mgt.h	36;"	d
FREQUENCY_UNIT_NSTEP	Driver/timer_mgt.h	28;"	d
FREQUENCY_UNIT_NSTEPS	Driver/timer_mgt.h	35;"	d
FREQUENCY_UNIT_NYEAR	Driver/timer_mgt.h	34;"	d
FREQUENCY_UNIT_NYEARS	Driver/timer_mgt.h	41;"	d
FREQUENCY_UNIT_SECOND	Driver/timer_mgt.h	15;"	d
FREQUENCY_UNIT_SECONDS	Driver/timer_mgt.h	22;"	d
FREQUENCY_UNIT_STEP	Driver/timer_mgt.h	14;"	d
FREQUENCY_UNIT_STEPS	Driver/timer_mgt.h	21;"	d
FREQUENCY_UNIT_YEAR	Driver/timer_mgt.h	20;"	d
FREQUENCY_UNIT_YEARS	Driver/timer_mgt.h	27;"	d
FUNCIION_WORD_LEV_COORD_FROM_HYBRID	CoR/parse_special_words.h	39;"	d
FUNCIION_WORD_LEV_COORD_FROM_SIGMA	CoR/parse_special_words.h	38;"	d
FUNCIION_WORD_SET_LEV_GRID_SIGMA_INFO	CoR/parse_special_words.h	40;"	d
FUNCTION_WORD_ADD_AREA_BOUND	CoR/parse_special_words.h	28;"	d
FUNCTION_WORD_ADD_BIN_FILE	CoR/parse_special_words.h	24;"	d
FUNCTION_WORD_ADD_GRID_AREA	CoR/parse_special_words.h	27;"	d
FUNCTION_WORD_ADD_NC_FILE	CoR/parse_special_words.h	23;"	d
FUNCTION_WORD_ALLOC_FIELD	CoR/parse_special_words.h	42;"	d
FUNCTION_WORD_COMBINE_GRIDS	CoR/parse_special_words.h	29;"	d
FUNCTION_WORD_COMBINE_OPERATORS	CoR/parse_special_words.h	31;"	d
FUNCTION_WORD_COMPUTE_OCN_MASK	CoR/parse_special_words.h	49;"	d
FUNCTION_WORD_COMPUTE_REMAP_WEIGHTS	CoR/parse_special_words.h	47;"	d
FUNCTION_WORD_EVALUATE_ERROR	CoR/parse_special_words.h	46;"	d
FUNCTION_WORD_EXTRACT_MASK	CoR/parse_special_words.h	48;"	d
FUNCTION_WORD_FSPAN	CoR/parse_special_words.h	44;"	d
FUNCTION_WORD_GEN_TEST_DATA	CoR/parse_special_words.h	45;"	d
FUNCTION_WORD_ISPAN	CoR/parse_special_words.h	43;"	d
FUNCTION_WORD_NEW_1D_GRID	CoR/parse_special_words.h	25;"	d
FUNCTION_WORD_NEW_OPERATOR	CoR/parse_special_words.h	30;"	d
FUNCTION_WORD_NEW_PARTIAL_GRID	CoR/parse_special_words.h	26;"	d
FUNCTION_WORD_READ_DATA	CoR/parse_special_words.h	41;"	d
FUNCTION_WORD_READ_FIELD	CoR/parse_special_words.h	36;"	d
FUNCTION_WORD_READ_REMAP_WEIGHTS	CoR/parse_special_words.h	33;"	d
FUNCTION_WORD_REMAP	CoR/parse_special_words.h	34;"	d
FUNCTION_WORD_SET_BOUNDARY	CoR/parse_special_words.h	37;"	d
FUNCTION_WORD_SET_OPERATOR_PARA	CoR/parse_special_words.h	50;"	d
FUNCTION_WORD_WRITE_FIELD	CoR/parse_special_words.h	35;"	d
FUNCTION_WORD_WRITE_REMAP_WEIGHTS	CoR/parse_special_words.h	32;"	d
Field_info_mgt	Data_MGT/field_info_mgt.cxx	/^Field_info_mgt::Field_info_mgt()$/;"	f	class:Field_info_mgt
Field_info_mgt	Data_MGT/field_info_mgt.h	/^class Field_info_mgt$/;"	c
Field_mem_info	Data_MGT/memory_mgt.cxx	/^Field_mem_info::Field_mem_info(const char *field_name, int decomp_id, int comp_or_grid_id, $/;"	f	class:Field_mem_info
Field_mem_info	Data_MGT/memory_mgt.h	/^class Field_mem_info$/;"	c
Fields_gather_scatter_mgt	Parallel_MGT/fields_gather_scatter_mgt.h	/^        Fields_gather_scatter_mgt() {}$/;"	f	class:Fields_gather_scatter_mgt
Fields_gather_scatter_mgt	Parallel_MGT/fields_gather_scatter_mgt.h	/^class Fields_gather_scatter_mgt$/;"	c
Find	XML/tinyxml.cxx	/^TiXmlAttribute* TiXmlAttributeSet::Find( const char* name ) const$/;"	f	class:TiXmlAttributeSet
Find	XML/tinyxml.cxx	/^TiXmlAttribute* TiXmlAttributeSet::Find( const std::string& name ) const$/;"	f	class:TiXmlAttributeSet
FindOrCreate	XML/tinyxml.cxx	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const char* _name )$/;"	f	class:TiXmlAttributeSet
FindOrCreate	XML/tinyxml.cxx	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const std::string& _name )$/;"	f	class:TiXmlAttributeSet
First	XML/tinyxml.h	/^	TiXmlAttribute* First()					{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
First	XML/tinyxml.h	/^	const TiXmlAttribute* First()	const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
FirstAttribute	XML/tinyxml.h	/^	TiXmlAttribute* FirstAttribute() 				{ return attributeSet.First(); }$/;"	f	class:TiXmlElement
FirstAttribute	XML/tinyxml.h	/^	const TiXmlAttribute* FirstAttribute() const	{ return attributeSet.First(); }		\/\/\/< Access the first attribute in this element.$/;"	f	class:TiXmlElement
FirstChild	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::FirstChild( const char * value ) const$/;"	f	class:TiXmlHandle
FirstChild	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::FirstChild() const$/;"	f	class:TiXmlHandle
FirstChild	XML/tinyxml.cxx	/^const TiXmlNode* TiXmlNode::FirstChild( const char * _value ) const$/;"	f	class:TiXmlNode
FirstChild	XML/tinyxml.h	/^	TiXmlHandle FirstChild( const std::string& _value ) const				{ return FirstChild( _value.c_str() ); }$/;"	f	class:TiXmlHandle
FirstChild	XML/tinyxml.h	/^	TiXmlNode* FirstChild( const char * _value ) {$/;"	f	class:TiXmlNode
FirstChild	XML/tinyxml.h	/^	TiXmlNode* FirstChild( const std::string& _value )				{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChild	XML/tinyxml.h	/^	TiXmlNode* FirstChild()						{ return firstChild; }$/;"	f	class:TiXmlNode
FirstChild	XML/tinyxml.h	/^	const TiXmlNode* FirstChild( const std::string& _value ) const	{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChild	XML/tinyxml.h	/^	const TiXmlNode* FirstChild()	const		{ return firstChild; }	\/\/\/< The first child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
FirstChildElement	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::FirstChildElement( const char * value ) const$/;"	f	class:TiXmlHandle
FirstChildElement	XML/tinyxml.cxx	/^TiXmlHandle TiXmlHandle::FirstChildElement() const$/;"	f	class:TiXmlHandle
FirstChildElement	XML/tinyxml.cxx	/^const TiXmlElement* TiXmlNode::FirstChildElement( const char * _value ) const$/;"	f	class:TiXmlNode
FirstChildElement	XML/tinyxml.cxx	/^const TiXmlElement* TiXmlNode::FirstChildElement() const$/;"	f	class:TiXmlNode
FirstChildElement	XML/tinyxml.h	/^	TiXmlElement* FirstChildElement( const char * _value ) {$/;"	f	class:TiXmlNode
FirstChildElement	XML/tinyxml.h	/^	TiXmlElement* FirstChildElement( const std::string& _value )				{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChildElement	XML/tinyxml.h	/^	TiXmlElement* FirstChildElement() {$/;"	f	class:TiXmlNode
FirstChildElement	XML/tinyxml.h	/^	TiXmlHandle FirstChildElement( const std::string& _value ) const		{ return FirstChildElement( _value.c_str() ); }$/;"	f	class:TiXmlHandle
FirstChildElement	XML/tinyxml.h	/^	const TiXmlElement* FirstChildElement( const std::string& _value ) const	{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
GLOBAL_DATA	Driver/global_data.h	11;"	d
GRID_AREA_LABEL	CoR/remap_grid_class.h	26;"	d
GRID_BOUNDARY_LABEL	CoR/remap_grid_class.h	21;"	d
GRID_CELL_SEARCH_ENGINE	CoR/grid_cell_search.h	9;"	d
GRID_CENTER_LABEL	CoR/remap_grid_class.h	22;"	d
GRID_FIELD_ATTRIBUTE_UNIT	CoR/remap_grid_class.h	39;"	d
GRID_LATS_GF	CoR/cor_cpl_interface.h	16;"	d
GRID_LONS_GF	CoR/cor_cpl_interface.h	17;"	d
GRID_MASK_LABEL	CoR/remap_grid_class.h	25;"	d
GRID_NUM_VERTEX_LABEL	CoR/remap_grid_class.h	24;"	d
GRID_VERTEX_LABEL	CoR/remap_grid_class.h	23;"	d
GROWTH_FACTOR	Utils/dictionary.h	23;"	d
Gather_scatter_rearrange_info	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Gather_scatter_rearrange_info::Gather_scatter_rearrange_info(Field_mem_info *local_field)$/;"	f	class:Gather_scatter_rearrange_info
Gather_scatter_rearrange_info	Parallel_MGT/fields_gather_scatter_mgt.h	/^class Gather_scatter_rearrange_info$/;"	c
GetChar	XML/tinyxml.h	/^	inline static const char* GetChar( const char* p, char* _value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
GetDocument	XML/tinyxml.cxx	/^const TiXmlDocument* TiXmlNode::GetDocument() const$/;"	f	class:TiXmlNode
GetDocument	XML/tinyxml.h	/^	TiXmlDocument* GetDocument() {$/;"	f	class:TiXmlNode
GetEntity	XML/tinyxmlparser.cxx	/^const char* TiXmlBase::GetEntity( const char* p, char* value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
GetText	XML/tinyxml.cxx	/^const char* TiXmlElement::GetText() const$/;"	f	class:TiXmlElement
GetUserData	XML/tinyxml.h	/^	const void* GetUserData() const 		{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
GetUserData	XML/tinyxml.h	/^	void* GetUserData()						{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
H2D_grid_cell_cartesian_coord	CoR/grid_cell_search.cxx	/^H2D_grid_cell_cartesian_coord::H2D_grid_cell_cartesian_coord()$/;"	f	class:H2D_grid_cell_cartesian_coord
H2D_grid_cell_cartesian_coord	CoR/grid_cell_search.h	/^struct H2D_grid_cell_cartesian_coord$/;"	s
H2D_grid_cell_search_cell	CoR/grid_cell_search.cxx	/^H2D_grid_cell_search_cell::H2D_grid_cell_search_cell(int cell_index, double center_lon, double center_lat, bool mask, $/;"	f	class:H2D_grid_cell_search_cell
H2D_grid_cell_search_cell	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_cell() {}$/;"	f	class:H2D_grid_cell_search_cell
H2D_grid_cell_search_cell	CoR/grid_cell_search.h	/^class H2D_grid_cell_search_cell$/;"	c
H2D_grid_cell_search_engine	CoR/grid_cell_search.cxx	/^H2D_grid_cell_search_engine::H2D_grid_cell_search_engine(const Remap_grid_class *remap_grid, const double *center_lons, const double *center_lats, const bool *masks, $/;"	f	class:H2D_grid_cell_search_engine
H2D_grid_cell_search_engine	CoR/grid_cell_search.h	/^class H2D_grid_cell_search_engine$/;"	c
H2D_grid_cell_search_tile	CoR/grid_cell_search.cxx	/^H2D_grid_cell_search_tile::H2D_grid_cell_search_tile(int num_cells, H2D_grid_cell_search_cell **cells, H2D_grid_cell_search_cell **cells_buffer, $/;"	f	class:H2D_grid_cell_search_tile
H2D_grid_cell_search_tile	CoR/grid_cell_search.h	/^class H2D_grid_cell_search_tile$/;"	c
H2D_grid_decomp_mask	CoR/remap_operator_basis.cxx	/^bool *H2D_grid_decomp_mask = NULL;$/;"	v
H2D_remapping_algorithm	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification *H2D_remapping_algorithm;$/;"	m	class:Remapping_setting
H2D_remapping_wgt_file_container	Runtime_MGT/remapping_configuration_mgt.h	/^        H2D_remapping_wgt_file_container() {}$/;"	f	class:H2D_remapping_wgt_file_container
H2D_remapping_wgt_file_container	Runtime_MGT/remapping_configuration_mgt.h	/^class H2D_remapping_wgt_file_container$/;"	c
H2D_remapping_wgt_file_info	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info::H2D_remapping_wgt_file_info(const char *array, long *buffer_content_iter)$/;"	f	class:H2D_remapping_wgt_file_info
H2D_remapping_wgt_file_info	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info::H2D_remapping_wgt_file_info(const char *wgt_file_name)$/;"	f	class:H2D_remapping_wgt_file_info
H2D_remapping_wgt_file_info	Runtime_MGT/remapping_configuration_mgt.h	/^class H2D_remapping_wgt_file_info$/;"	c
H2D_remapping_wgt_file_mgr	Runtime_MGT/remapping_configuration_mgt.h	/^        H2D_remapping_wgt_file_mgt *H2D_remapping_wgt_file_mgr;$/;"	m	class:Remapping_setting
H2D_remapping_wgt_file_mgt	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_mgt::H2D_remapping_wgt_file_mgt(TiXmlElement *XML_element, const char *XML_file_name)$/;"	f	class:H2D_remapping_wgt_file_mgt
H2D_remapping_wgt_file_mgt	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_mgt::H2D_remapping_wgt_file_mgt(const char *array, long *buffer_content_iter)$/;"	f	class:H2D_remapping_wgt_file_mgt
H2D_remapping_wgt_file_mgt	Runtime_MGT/remapping_configuration_mgt.h	/^        H2D_remapping_wgt_file_mgt() { }$/;"	f	class:H2D_remapping_wgt_file_mgt
H2D_remapping_wgt_file_mgt	Runtime_MGT/remapping_configuration_mgt.h	/^class H2D_remapping_wgt_file_mgt$/;"	c
H2D_remapping_wgt_files	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<H2D_remapping_wgt_file_info*> H2D_remapping_wgt_files;$/;"	m	class:H2D_remapping_wgt_file_container
H2D_remapping_wgt_files	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<H2D_remapping_wgt_file_info*> H2D_remapping_wgt_files;$/;"	m	class:H2D_remapping_wgt_file_mgt
H2D_runtime_remapping_weights	Runtime_MGT/coupling_generator.h	/^    Runtime_remapping_weights *H2D_runtime_remapping_weights;$/;"	m	struct:V3D_grid_bottom_field_coupling_info
H2D_sub_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *H2D_sub_CoR_grid;$/;"	m	class:Original_grid_info
H2D_sub_grid_order	Data_MGT/original_grid_mgt.h	/^        int H2D_sub_grid_order;$/;"	m	class:Original_grid_info
I2	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, private :: I2 /;"	v	module:CCPL_interface_mod
I4	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, private :: I4 /;"	v	module:CCPL_interface_mod
I8	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, private :: I8 /;"	v	module:CCPL_interface_mod
INITIAL_SIZE	Utils/dictionary.h	22;"	d
INOUT_INTERFACE_MGT_H	Runtime_MGT/inout_interface_mgt.h	11;"	d
INTERCHANGE_BLOCK_SIZE	CoR/remap_statement_operand.h	17;"	d
INTERFACE_SOURCE_IO_OUTPUT	Runtime_MGT/inout_interface_mgt.h	28;"	d
INTERFACE_SOURCE_IO_WRITE	Runtime_MGT/inout_interface_mgt.h	29;"	d
INTERFACE_SOURCE_REGISTER	Runtime_MGT/inout_interface_mgt.h	27;"	d
IO_BASIS	CoR/io_basis.h	11;"	d
IO_BINARY	CoR/io_binary.h	11;"	d
IO_FIELD_MGT	Data_MGT/IO_field_mgt.h	11;"	d
IO_MGT	CoR/io_mgt.h	11;"	d
IO_NETCDF	CoR/io_netcdf.h	12;"	d
IO_basis	CoR/io_basis.h	/^        IO_basis(){}$/;"	f	class:IO_basis
IO_basis	CoR/io_basis.h	/^class IO_basis$/;"	c
IO_binary	CoR/io_binary.cxx	/^IO_binary::IO_binary(const char *object_name, const char *file_name, const char *format)$/;"	f	class:IO_binary
IO_binary	CoR/io_binary.h	/^class IO_binary: public IO_basis$/;"	c
IO_field	Data_MGT/IO_field_mgt.cxx	/^IO_field::IO_field(int IO_field_id, int comp_or_grid_id, int decomp_id, int field_size, void *data_buffer, const char * field_IO_name, const char *long_name, const char *unit, const char *data_type, const char * annotation)$/;"	f	class:IO_field
IO_field	Data_MGT/IO_field_mgt.cxx	/^IO_field::IO_field(int IO_field_id, int field_instance_id, const char *field_IO_name, const char *annotation)$/;"	f	class:IO_field
IO_field	Data_MGT/IO_field_mgt.h	/^class IO_field$/;"	c
IO_field_id	Data_MGT/IO_field_mgt.h	/^        int IO_field_id;$/;"	m	class:IO_field
IO_field_mgt	Data_MGT/IO_field_mgt.h	/^        IO_field_mgt() {}$/;"	f	class:IO_field_mgt
IO_field_mgt	Data_MGT/IO_field_mgt.h	/^class IO_field_mgt$/;"	c
IO_fields	Data_MGT/IO_field_mgt.h	/^        std::vector<IO_field*> IO_fields;$/;"	m	class:IO_field_mgt
IO_fields	Data_MGT/IO_field_mgt.h	/^        std::vector<IO_field*> IO_fields;$/;"	m	class:IO_output_procedure
IO_fields_mgr	Driver/global_data.cxx	/^IO_field_mgt *IO_fields_mgr = NULL;$/;"	v
IO_mgt	CoR/io_mgt.h	/^        IO_mgt() {}$/;"	f	class:IO_mgt
IO_mgt	CoR/io_mgt.h	/^class IO_mgt$/;"	c
IO_netcdf	CoR/io_netcdf.cxx	/^IO_netcdf::IO_netcdf(const char *object_name, const char *file_name, const char *format, bool io_with_time_info)$/;"	f	class:IO_netcdf
IO_netcdf	CoR/io_netcdf.cxx	/^IO_netcdf::IO_netcdf(int ncfile_id)$/;"	f	class:IO_netcdf
IO_netcdf	CoR/io_netcdf.h	/^class IO_netcdf: public IO_basis$/;"	c
IO_objects	CoR/io_mgt.h	/^        std::vector<IO_basis*> IO_objects;$/;"	m	class:IO_mgt
IO_output_procedure	Data_MGT/IO_field_mgt.cxx	/^IO_output_procedure::IO_output_procedure(int comp_id, int procedure_id, Coupling_timer *default_field_timer, Coupling_timer *default_file_timer, bool synchronized_IO)$/;"	f	class:IO_output_procedure
IO_output_procedure	Data_MGT/IO_field_mgt.h	/^class IO_output_procedure$/;"	c
IO_output_procedures	Data_MGT/IO_field_mgt.h	/^        std::vector<IO_output_procedure*> IO_output_procedures;$/;"	m	class:Component_IO_output_procedures
IS_TIME_UNIT_DAY	Driver/timer_mgt.h	58;"	d
IS_TIME_UNIT_HOUR	Driver/timer_mgt.h	57;"	d
IS_TIME_UNIT_MINUTE	Driver/timer_mgt.h	56;"	d
IS_TIME_UNIT_MONTH	Driver/timer_mgt.h	59;"	d
IS_TIME_UNIT_SECOND	Driver/timer_mgt.h	55;"	d
IS_TIME_UNIT_STEP	Driver/timer_mgt.h	54;"	d
IS_TIME_UNIT_YEAR	Driver/timer_mgt.h	60;"	d
Identify	XML/tinyxmlparser.cxx	/^TiXmlNode* TiXmlNode::Identify( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlNode
Import_direction_setting	Runtime_MGT/coupling_generator.cxx	/^Import_direction_setting::Import_direction_setting(int host_comp_id, Import_interface_configuration *interface_configuration, const char *comp_full_name, const char *interface_name, TiXmlElement *redirection_element, const char *XML_file_name, std::vector<const char*> &interface_fields_name, int *fields_count, bool check_comp_existence)$/;"	f	class:Import_direction_setting
Import_direction_setting	Runtime_MGT/coupling_generator.h	/^class Import_direction_setting$/;"	c
Import_interface_configuration	Runtime_MGT/coupling_generator.cxx	/^Import_interface_configuration::Import_interface_configuration(int host_comp_id, const char *comp_full_name, const char *interface_name, TiXmlElement *interface_element, const char *XML_file_name, Inout_interface_mgt *all_interfaces_mgr, bool check_comp_existence)$/;"	f	class:Import_interface_configuration
Import_interface_configuration	Runtime_MGT/coupling_generator.h	/^class Import_interface_configuration$/;"	c
Indent	XML/tinyxml.h	/^	const char* Indent()							{ return indent.c_str(); }$/;"	f	class:TiXmlPrinter
Initialize	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::Initialize(int ensemble_member_id, int have_random_seed_for_perturbation, int root_random_seed_for_perturbation, const char *perturbation_type)$/;"	f	class:Ensemble_mgt
Inout_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface::Inout_interface(const char *interface_name, int interface_id, int interface_type, int num_fields, int *field_ids, int array_size, int timer_id, int inst_or_aver, const char *field_ids_parameter_name, const char *annotation, int API_id, int interface_source, bool is_child_interface)$/;"	f	class:Inout_interface
Inout_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface::Inout_interface(const char *interface_name, int interface_id, int num_fields, int *field_ids_src, int *field_ids_dst, int timer_id, int inst_or_aver, int array_size_src, int array_size_dst, const char *API_label, const char *annotation)$/;"	f	class:Inout_interface
Inout_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface::Inout_interface(const char *temp_array_buffer, long &buffer_content_iter)$/;"	f	class:Inout_interface
Inout_interface	Runtime_MGT/inout_interface_mgt.h	/^class Inout_interface$/;"	c
Inout_interface_mgt	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface_mgt::Inout_interface_mgt(const char *temp_array_buffer, long buffer_content_iter)$/;"	f	class:Inout_interface_mgt
Inout_interface_mgt	Runtime_MGT/inout_interface_mgt.h	/^        Inout_interface_mgt() {}$/;"	f	class:Inout_interface_mgt
Inout_interface_mgt	Runtime_MGT/inout_interface_mgt.h	/^class Inout_interface_mgt$/;"	c
InsertAfterChild	XML/tinyxml.cxx	/^TiXmlNode* TiXmlNode::InsertAfterChild( TiXmlNode* afterThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertBeforeChild	XML/tinyxml.cxx	/^TiXmlNode* TiXmlNode::InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertEndChild	XML/tinyxml.cxx	/^TiXmlNode* TiXmlNode::InsertEndChild( const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
IntValue	XML/tinyxml.cxx	/^int TiXmlAttribute::IntValue() const$/;"	f	class:TiXmlAttribute
Interface_field_info	Runtime_MGT/coupling_generator.h	/^struct Interface_field_info$/;"	s
IsAlpha	XML/tinyxmlparser.cxx	/^\/*static*\/ int TiXmlBase::IsAlpha( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase
IsAlphaNum	XML/tinyxmlparser.cxx	/^\/*static*\/ int TiXmlBase::IsAlphaNum( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase
IsWhiteSpace	XML/tinyxml.h	/^	inline static bool IsWhiteSpace( char c )		$/;"	f	class:TiXmlBase
IsWhiteSpace	XML/tinyxml.h	/^	inline static bool IsWhiteSpace( int c )$/;"	f	class:TiXmlBase
IsWhiteSpaceCondensed	XML/tinyxml.h	/^	static bool IsWhiteSpaceCondensed()						{ return condenseWhiteSpace; }$/;"	f	class:TiXmlBase
IterateChildren	XML/tinyxml.cxx	/^const TiXmlNode* TiXmlNode::IterateChildren( const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	XML/tinyxml.cxx	/^const TiXmlNode* TiXmlNode::IterateChildren( const char * val, const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	XML/tinyxml.h	/^	TiXmlNode* IterateChildren( const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode
IterateChildren	XML/tinyxml.h	/^	TiXmlNode* IterateChildren( const char * _value, const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode
IterateChildren	XML/tinyxml.h	/^	TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) {	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
IterateChildren	XML/tinyxml.h	/^	const TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) const	{	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LAT_GF	CoR/cor_cpl_interface.h	18;"	d
LOG_BUFFER_MAX_CONTENT_SIZE	Parallel_MGT/compset_communicators_info_mgt.cxx	23;"	d	file:
LOG_BUFFER_MAX_SIZE	Parallel_MGT/compset_communicators_info_mgt.cxx	22;"	d	file:
LON_GF	CoR/cor_cpl_interface.h	19;"	d
Last	XML/tinyxml.h	/^	TiXmlAttribute* Last()					{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
Last	XML/tinyxml.h	/^	const TiXmlAttribute* Last() const		{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
LastAttribute	XML/tinyxml.h	/^	TiXmlAttribute* LastAttribute()					{ return attributeSet.Last(); }$/;"	f	class:TiXmlElement
LastAttribute	XML/tinyxml.h	/^	const TiXmlAttribute* LastAttribute()	const 	{ return attributeSet.Last(); }		\/\/\/< Access the last attribute in this element.$/;"	f	class:TiXmlElement
LastChild	XML/tinyxml.cxx	/^const TiXmlNode* TiXmlNode::LastChild( const char * _value ) const$/;"	f	class:TiXmlNode
LastChild	XML/tinyxml.h	/^	TiXmlNode* LastChild( const char * _value ) {$/;"	f	class:TiXmlNode
LastChild	XML/tinyxml.h	/^	TiXmlNode* LastChild( const std::string& _value )				{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LastChild	XML/tinyxml.h	/^	TiXmlNode* LastChild()	{ return lastChild; }$/;"	f	class:TiXmlNode
LastChild	XML/tinyxml.h	/^	const TiXmlNode* LastChild( const std::string& _value ) const	{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LastChild	XML/tinyxml.h	/^	const TiXmlNode* LastChild() const	{ return lastChild; }		\/\/\/ The last child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
LineBreak	XML/tinyxml.h	/^	const char* LineBreak()							{ return lineBreak.c_str(); }$/;"	f	class:TiXmlPrinter
LinkEndChild	XML/tinyxml.cxx	/^TiXmlNode* TiXmlNode::LinkEndChild( TiXmlNode* node )$/;"	f	class:TiXmlNode
LoadFile	XML/tinyxml.cxx	/^bool TiXmlDocument::LoadFile( FILE* file, MPI_Comm comm, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	XML/tinyxml.cxx	/^bool TiXmlDocument::LoadFile( MPI_Comm comm, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	XML/tinyxml.cxx	/^bool TiXmlDocument::LoadFile( const char* _filename, MPI_Comm comm, TiXmlEncoding encoding)$/;"	f	class:TiXmlDocument
LoadFile	XML/tinyxml.h	/^	bool LoadFile( const std::string& filename, MPI_Comm comm = MPI_COMM_NULL, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )			\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument
MASK_GF	CoR/cor_cpl_interface.h	21;"	d
MAX_ENTITY_LENGTH	XML/tinyxml.h	/^		MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlBase::__anon5
MAX_LOAD_FACTOR	Utils/dictionary.h	24;"	d
MAX_NUM_CELLS_IN_TILE	CoR/grid_cell_search.h	16;"	d
MEM_MGT	Data_MGT/memory_mgt.h	11;"	d
MISS_VALUE_LABEL	CoR/cor_global_data.h	39;"	d
MULTIPLIER	Utils/dictionary.h	25;"	d
Memory_mgt	Data_MGT/memory_mgt.h	/^        Memory_mgt() {}$/;"	f	class:Memory_mgt
Memory_mgt	Data_MGT/memory_mgt.h	/^class Memory_mgt$/;"	c
NAME_STR_SIZE	Utils/common_utils.h	13;"	d
NULL_COORD_VALUE	CoR/remap_grid_class.h	30;"	d
NUM_DAYS_PER_LEAP_YEAR	Driver/timer_mgt.h	51;"	d
NUM_DAYS_PER_NONLEAP_YEAR	Driver/timer_mgt.h	50;"	d
NUM_ENTITY	XML/tinyxml.h	/^		NUM_ENTITY = 5,$/;"	e	enum:TiXmlBase::__anon5
NUM_MONTH_PER_YEAR	Driver/timer_mgt.h	49;"	d
Name	XML/tinyxml.h	/^	const char*		Name()  const		{ return name.c_str(); }		\/\/\/< Return the name of this attribute.$/;"	f	class:TiXmlAttribute
NameTStr	XML/tinyxml.h	/^	const TIXML_STRING& NameTStr() const { return name; }$/;"	f	class:TiXmlAttribute
Next	XML/tinyxml.cxx	/^const TiXmlAttribute* TiXmlAttribute::Next() const$/;"	f	class:TiXmlAttribute
Next	XML/tinyxml.h	/^	TiXmlAttribute* Next() {$/;"	f	class:TiXmlAttribute
NextSibling	XML/tinyxml.cxx	/^const TiXmlNode* TiXmlNode::NextSibling( const char * _value ) const $/;"	f	class:TiXmlNode
NextSibling	XML/tinyxml.h	/^	TiXmlNode* NextSibling( const char* _next ) {$/;"	f	class:TiXmlNode
NextSibling	XML/tinyxml.h	/^	TiXmlNode* NextSibling( const std::string& _value) 					{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSibling	XML/tinyxml.h	/^	TiXmlNode* NextSibling()							{ return next; }$/;"	f	class:TiXmlNode
NextSibling	XML/tinyxml.h	/^	const TiXmlNode* NextSibling( const std::string& _value) const		{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSibling	XML/tinyxml.h	/^	const TiXmlNode* NextSibling() const				{ return next; }$/;"	f	class:TiXmlNode
NextSiblingElement	XML/tinyxml.cxx	/^const TiXmlElement* TiXmlNode::NextSiblingElement( const char * _value ) const$/;"	f	class:TiXmlNode
NextSiblingElement	XML/tinyxml.cxx	/^const TiXmlElement* TiXmlNode::NextSiblingElement() const$/;"	f	class:TiXmlNode
NextSiblingElement	XML/tinyxml.h	/^	TiXmlElement* NextSiblingElement( const char *_next ) {$/;"	f	class:TiXmlNode
NextSiblingElement	XML/tinyxml.h	/^	TiXmlElement* NextSiblingElement( const std::string& _value)				{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSiblingElement	XML/tinyxml.h	/^	TiXmlElement* NextSiblingElement() {$/;"	f	class:TiXmlNode
NextSiblingElement	XML/tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const std::string& _value) const	{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NoChildren	XML/tinyxml.h	/^	bool NoChildren() const						{ return !firstChild; }$/;"	f	class:TiXmlNode
Node	XML/tinyxml.h	/^	TiXmlNode* Node() const			{ return ToNode(); } $/;"	f	class:TiXmlHandle
NodeType	XML/tinyxml.h	/^	enum NodeType$/;"	g	class:TiXmlNode
OBJECT_TYPE_FIELD_DATA	CoR/parse_special_words.h	54;"	d
OBJECT_TYPE_GRID	CoR/parse_special_words.h	53;"	d
OBJECT_TYPE_IO	CoR/parse_special_words.h	52;"	d
OBJECT_TYPE_PREFIX_H	Driver/object_type_prefix.h	11;"	d
OBJECT_TYPE_REMAP_OPERATOR	CoR/parse_special_words.h	55;"	d
OBJECT_TYPE_REMAP_STRATEGY	CoR/parse_special_words.h	56;"	d
OBJECT_TYPE_REMAP_WEIGHTS	CoR/parse_special_words.h	57;"	d
ORIGINAL_GRID_MGT	Data_MGT/original_grid_mgt.h	11;"	d
Original_grid_info	Data_MGT/original_grid_mgt.cxx	/^Original_grid_info::Original_grid_info(int comp_id, int grid_id, const char *grid_name, const char *annotation, Remap_grid_class *original_CoR_grid, bool model_registration)$/;"	f	class:Original_grid_info
Original_grid_info	Data_MGT/original_grid_mgt.h	/^class Original_grid_info$/;"	c
Original_grid_mgt	Data_MGT/original_grid_mgt.cxx	/^Original_grid_mgt::Original_grid_mgt()$/;"	f	class:Original_grid_mgt
Original_grid_mgt	Data_MGT/original_grid_mgt.h	/^class Original_grid_mgt$/;"	c
PARSE_SPECIAL_WORDS	CoR/parse_special_words.h	11;"	d
PARTIAL_AREA_BOUND_TYPE_INDEX	CoR/remap_grid_class.h	28;"	d
PARTIAL_AREA_BOUND_TYPE_VALUE	CoR/remap_grid_class.h	29;"	d
PERFORMANCE_TIMING_MGT_H	Parallel_MGT/performance_timing_mgt.h	11;"	d
PI	CoR/remap_grid_class.h	27;"	d
Parent	XML/tinyxml.h	/^	TiXmlNode* Parent()							{ return parent; }$/;"	f	class:TiXmlNode
Parent	XML/tinyxml.h	/^	const TiXmlNode* Parent() const				{ return parent; }$/;"	f	class:TiXmlNode
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlAttribute::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlAttribute
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlComment::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlComment
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlDeclaration::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )$/;"	f	class:TiXmlDeclaration
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlDocument::Parse( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlElement::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlText::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlText
Parse	XML/tinyxmlparser.cxx	/^const char* TiXmlUnknown::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlUnknown
Partial_area	CoR/remap_grid_class.h	/^struct Partial_area$/;"	s
Partial_area_bound	CoR/remap_grid_class.h	/^struct Partial_area_bound$/;"	s
Performance_timing_mgt	Parallel_MGT/performance_timing_mgt.h	/^        Performance_timing_mgt(int comp_id) { this->comp_id = comp_id; }$/;"	f	class:Performance_timing_mgt
Performance_timing_mgt	Parallel_MGT/performance_timing_mgt.h	/^class Performance_timing_mgt$/;"	c
Performance_timing_unit	Parallel_MGT/performance_timing_mgt.cxx	/^Performance_timing_unit::Performance_timing_unit(int comp_id, int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword)$/;"	f	class:Performance_timing_unit
Performance_timing_unit	Parallel_MGT/performance_timing_mgt.h	/^class Performance_timing_unit$/;"	c
Point	CoR/delaunay_voronoi.cxx	/^Point::Point(const Point *pt1, const Point *pt2)$/;"	f	class:Point
Point	CoR/delaunay_voronoi.cxx	/^Point::Point(double lat, double lon, int id)$/;"	f	class:Point
Point	CoR/delaunay_voronoi.h	/^class Point$/;"	c
Previous	XML/tinyxml.cxx	/^const TiXmlAttribute* TiXmlAttribute::Previous() const$/;"	f	class:TiXmlAttribute
Previous	XML/tinyxml.h	/^	TiXmlAttribute* Previous() {$/;"	f	class:TiXmlAttribute
PreviousSibling	XML/tinyxml.cxx	/^const TiXmlNode* TiXmlNode::PreviousSibling( const char * _value ) const$/;"	f	class:TiXmlNode
PreviousSibling	XML/tinyxml.h	/^	TiXmlNode* PreviousSibling( const char *_prev ) {$/;"	f	class:TiXmlNode
PreviousSibling	XML/tinyxml.h	/^	TiXmlNode* PreviousSibling( const std::string& _value ) 			{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
PreviousSibling	XML/tinyxml.h	/^	TiXmlNode* PreviousSibling()						{ return prev; }$/;"	f	class:TiXmlNode
PreviousSibling	XML/tinyxml.h	/^	const TiXmlNode* PreviousSibling( const std::string& _value ) const	{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
PreviousSibling	XML/tinyxml.h	/^	const TiXmlNode* PreviousSibling() const			{ return prev; }$/;"	f	class:TiXmlNode
Print	XML/tinyxml.cxx	/^void TiXmlAttribute::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlAttribute
Print	XML/tinyxml.cxx	/^void TiXmlComment::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlComment
Print	XML/tinyxml.cxx	/^void TiXmlDeclaration::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlDeclaration
Print	XML/tinyxml.cxx	/^void TiXmlDocument::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDocument
Print	XML/tinyxml.cxx	/^void TiXmlElement::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlElement
Print	XML/tinyxml.cxx	/^void TiXmlText::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlText
Print	XML/tinyxml.cxx	/^void TiXmlUnknown::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlUnknown
Print	XML/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlAttribute
Print	XML/tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlDeclaration
Print	XML/tinyxml.h	/^	void Print() const						{ Print( stdout, 0 ); }$/;"	f	class:TiXmlDocument
QUICK_SORTHRESH	CoR/quick_sort.h	14;"	d
QUICK_SORT_H	CoR/quick_sort.h	11;"	d
QueryBoolAttribute	XML/tinyxml.cxx	/^int TiXmlElement::QueryBoolAttribute( const char* name, bool* bval ) const$/;"	f	class:TiXmlElement
QueryDoubleAttribute	XML/tinyxml.cxx	/^int TiXmlElement::QueryDoubleAttribute( const char* name, double* dval ) const$/;"	f	class:TiXmlElement
QueryDoubleAttribute	XML/tinyxml.cxx	/^int TiXmlElement::QueryDoubleAttribute( const std::string& name, double* dval ) const$/;"	f	class:TiXmlElement
QueryDoubleValue	XML/tinyxml.cxx	/^int TiXmlAttribute::QueryDoubleValue( double* dval ) const$/;"	f	class:TiXmlAttribute
QueryFloatAttribute	XML/tinyxml.h	/^	int QueryFloatAttribute( const char* name, float* _value ) const {$/;"	f	class:TiXmlElement
QueryIntAttribute	XML/tinyxml.cxx	/^int TiXmlElement::QueryIntAttribute( const char* name, int* ival ) const$/;"	f	class:TiXmlElement
QueryIntAttribute	XML/tinyxml.cxx	/^int TiXmlElement::QueryIntAttribute( const std::string& name, int* ival ) const$/;"	f	class:TiXmlElement
QueryIntValue	XML/tinyxml.cxx	/^int TiXmlAttribute::QueryIntValue( int* ival ) const$/;"	f	class:TiXmlAttribute
QueryStringAttribute	XML/tinyxml.h	/^	int QueryStringAttribute( const char* name, std::string* _value ) const {$/;"	f	class:TiXmlElement
QueryUnsignedAttribute	XML/tinyxml.cxx	/^int TiXmlElement::QueryUnsignedAttribute( const char* name, unsigned* value ) const$/;"	f	class:TiXmlElement
QueryValueAttribute	XML/tinyxml.h	/^	int QueryValueAttribute( const std::string& name, std::string* outValue ) const$/;"	f	class:TiXmlElement
QueryValueAttribute	XML/tinyxml.h	/^	template< typename T > int QueryValueAttribute( const std::string& name, T* outValue ) const$/;"	f	class:TiXmlElement
R16	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, private :: R16 /;"	v	module:CCPL_interface_mod
R4	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, private :: R4 /;"	v	module:CCPL_interface_mod
R8	Driver/c_coupler_interface_mod.F90	/^   integer, parameter, private :: R8 /;"	v	module:CCPL_interface_mod
RADIAN_TO_DEGREE	CoR/remap_common_utils.h	15;"	d
RADIX_SORT_H	CoR/radix_sort.h	11;"	d
REG_FIELD_TAG_CPL	Data_MGT/memory_mgt.h	35;"	d
REG_FIELD_TAG_IO	Data_MGT/memory_mgt.h	37;"	d
REG_FIELD_TAG_NONE	Data_MGT/memory_mgt.h	34;"	d
REG_FIELD_TAG_REST	Data_MGT/memory_mgt.h	36;"	d
REMAPPING_CONFIGURATION_MGT	Runtime_MGT/remapping_configuration_mgt.h	11;"	d
REMAP_ALGORITHM_TYPE_H2D	Runtime_MGT/remapping_configuration_mgt.h	14;"	d
REMAP_ALGORITHM_TYPE_T1D	Runtime_MGT/remapping_configuration_mgt.h	16;"	d
REMAP_ALGORITHM_TYPE_V1D	Runtime_MGT/remapping_configuration_mgt.h	15;"	d
REMAP_COMMON_UTILS	CoR/remap_common_utils.h	11;"	d
REMAP_FIELD_DATA_CLASS	CoR/remap_grid_data_class.h	11;"	d
REMAP_GRID_CLASS	CoR/remap_grid_class.h	11;"	d
REMAP_GRID_DATA_MGT	CoR/remap_grid_data_mgt.h	11;"	d
REMAP_GRID_MGT	CoR/remap_grid_mgt.h	11;"	d
REMAP_MGT	CoR/remap_mgt.h	11;"	d
REMAP_OPERATOR_1D_BASIS	CoR/remap_operator_1D_basis.h	11;"	d
REMAP_OPERATOR_BASIS	CoR/remap_operator_basis.h	11;"	d
REMAP_OPERATOR_BILINEAR	CoR/remap_operator_bilinear.h	11;"	d
REMAP_OPERATOR_CONSERV_2D	CoR/remap_operator_conserv_2D.h	11;"	d
REMAP_OPERATOR_C_INTERFACE	CoR/remap_operator_c_interface.h	11;"	d
REMAP_OPERATOR_DISTWGT	CoR/remap_operator_distwgt.h	11;"	d
REMAP_OPERATOR_GRID_H	CoR/remap_operator_grid.h	11;"	d
REMAP_OPERATOR_LINEAR	CoR/remap_operator_linear.h	11;"	d
REMAP_OPERATOR_MGT	CoR/remap_operator_mgt.h	11;"	d
REMAP_OPERATOR_NAME_BILINEAR	CoR/remap_operator_basis.h	20;"	d
REMAP_OPERATOR_NAME_CONSERV_2D	CoR/remap_operator_basis.h	21;"	d
REMAP_OPERATOR_NAME_DISTWGT	CoR/remap_operator_basis.h	23;"	d
REMAP_OPERATOR_NAME_LINEAR	CoR/remap_operator_basis.h	24;"	d
REMAP_OPERATOR_NAME_REGRID	CoR/remap_operator_basis.h	26;"	d
REMAP_OPERATOR_NAME_SMOOTH	CoR/remap_operator_basis.h	25;"	d
REMAP_OPERATOR_NAME_SPLINE_1D	CoR/remap_operator_basis.h	22;"	d
REMAP_OPERATOR_REGRID	CoR/remap_operator_regrid.h	11;"	d
REMAP_OPERATOR_SMOOTH	CoR/remap_operator_smooth.h	11;"	d
REMAP_OPERATOR_SPLINE_1D	CoR/remap_operator_spline_1D.h	11;"	d
REMAP_PARSER	CoR/remap_parser.h	11;"	d
REMAP_STATEMENT_OPERAND	CoR/remap_statement_operand.h	11;"	d
REMAP_STRATEGY_CLASS	CoR/remap_strategy_class.h	11;"	d
REMAP_STRATEGY_MGT	CoR/remap_strategy_mgt.h	11;"	d
REMAP_UTILS_NEAREST_POINTS_H	CoR/remap_utils_nearest_points.h	11;"	d
REMAP_WEIGHT_OF_STRATEGY_CLASS_H	CoR/remap_weight_of_strategy_class.h	11;"	d
REMAP_WEIGHT_OF_STRATEGY_MGT_H	CoR/remap_weight_of_strategy_mgt.h	11;"	d
REMAP_WEIGHT_SPARSE_MATRIX_H	CoR/remap_weight_sparse_matrix.h	11;"	d
REPORT_CONSTANTLY	Utils/execution_report.h	26;"	d
REPORT_ERROR	Utils/execution_report.h	22;"	d
REPORT_EXTERNAL_LOG	Utils/execution_report.h	27;"	d
REPORT_LOG	Utils/execution_report.h	23;"	d
REPORT_PROGRESS	Utils/execution_report.h	25;"	d
REPORT_WARNING	Utils/execution_report.h	24;"	d
RESERVED_WORD_ANNOTATION	CoR/parse_special_words.h	21;"	d
RESERVED_WORD_ATTRIBUTE	CoR/parse_special_words.h	20;"	d
RESERVED_WORD_COMMA	CoR/parse_special_words.h	19;"	d
RESERVED_WORD_EQUAL	CoR/parse_special_words.h	16;"	d
RESERVED_WORD_LEFT_BRACKET	CoR/parse_special_words.h	17;"	d
RESERVED_WORD_QUOTE_MARK	CoR/parse_special_words.h	15;"	d
RESERVED_WORD_RIGHT_BRACKET	CoR/parse_special_words.h	18;"	d
RESTART_BUF_TYPE_INTERFACE	Data_MGT/restart_mgt.h	15;"	d
RESTART_BUF_TYPE_TIME	Data_MGT/restart_mgt.h	14;"	d
RESTART_MGT_H	Data_MGT/restart_mgt.h	11;"	d
ROUTER_MGT_H	Parallel_MGT/routing_info_mgt.h	13;"	d
ROUTER_RECV	Parallel_MGT/routing_info_mgt.cxx	25;"	d	file:
ROUTER_SEND	Parallel_MGT/routing_info_mgt.cxx	24;"	d	file:
RUNTIME_CUMULATE_AVERAGE_ALGORITHM	Runtime_MGT/runtime_cumulate_average_algorithm.h	11;"	d
RUNTIME_DATATYPE_TRANSFORMER	Runtime_MGT/runtime_datatype_transformer.h	10;"	d
RUNTIME_REMAP	Runtime_MGT/runtime_remap_algorithm.h	11;"	d
RUNTIME_REMAPPING_WEIGHTS_MGT_H	Runtime_MGT/runtime_remapping_weights_mgt.h	12;"	d
RUNTIME_REMAP_FUNCTION	CoR/runtime_remap_function.h	11;"	d
RUNTIME_TRANS	Runtime_MGT/runtime_trans_algorithm.h	13;"	d
RUNTYPE_BRANCH	Driver/timer_mgt.h	45;"	d
RUNTYPE_CONTINUE	Driver/timer_mgt.h	44;"	d
RUNTYPE_HYBRID	Driver/timer_mgt.h	46;"	d
RUNTYPE_INITIAL	Driver/timer_mgt.h	43;"	d
RUNTYPE_MARK_BRANCH	Driver/timer_mgt.h	73;"	d
RUNTYPE_MARK_CONTINUE	Driver/timer_mgt.h	72;"	d
RUNTYPE_MARK_HYBRID	Driver/timer_mgt.h	74;"	d
RUNTYPE_MARK_INITIAL	Driver/timer_mgt.h	71;"	d
Radix_sort	CoR/radix_sort.h	/^template <class T1, class T2> Radix_sort<T1,T2>::Radix_sort(T1 **radix_values, $/;"	f	class:Radix_sort
Radix_sort	CoR/radix_sort.h	/^template <class T1, class T2> class Radix_sort$/;"	c
ReadName	XML/tinyxmlparser.cxx	/^const char* TiXmlBase::ReadName( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
ReadText	XML/tinyxmlparser.cxx	/^const char* TiXmlBase::ReadText(	const char* p, $/;"	f	class:TiXmlBase
ReadValue	XML/tinyxmlparser.cxx	/^const char* TiXmlElement::ReadValue( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement
Remap_data_field	CoR/remap_statement_operand.cxx	/^Remap_data_field::Remap_data_field()$/;"	f	class:Remap_data_field
Remap_data_field	CoR/remap_statement_operand.h	/^class Remap_data_field$/;"	c
Remap_field_attribute	CoR/remap_statement_operand.h	/^struct Remap_field_attribute$/;"	s
Remap_field_data_mgt	CoR/remap_grid_data_mgt.h	/^         Remap_field_data_mgt() {}$/;"	f	class:Remap_field_data_mgt
Remap_field_data_mgt	CoR/remap_grid_data_mgt.h	/^class Remap_field_data_mgt$/;"	c
Remap_grid_class	CoR/remap_grid_class.cxx	/^Remap_grid_class::Remap_grid_class(Remap_grid_class *field_data_grid, $/;"	f	class:Remap_grid_class
Remap_grid_class	CoR/remap_grid_class.cxx	/^Remap_grid_class::Remap_grid_class(Remap_grid_class *top_grid, const char *grid_name_suffix, const char *array, long &buffer_content_iter)$/;"	f	class:Remap_grid_class
Remap_grid_class	CoR/remap_grid_class.cxx	/^Remap_grid_class::Remap_grid_class(const char *grid_name, $/;"	f	class:Remap_grid_class
Remap_grid_class	CoR/remap_grid_class.cxx	/^Remap_grid_class::Remap_grid_class(const char *grid_name, const char *whole_grid_name)$/;"	f	class:Remap_grid_class
Remap_grid_class	CoR/remap_grid_class.h	/^        Remap_grid_class() {}$/;"	f	class:Remap_grid_class
Remap_grid_class	CoR/remap_grid_class.h	/^class Remap_grid_class$/;"	c
Remap_grid_data_class	CoR/remap_grid_data_class.cxx	/^Remap_grid_data_class::Remap_grid_data_class(Remap_grid_class *coord_value_grid, $/;"	f	class:Remap_grid_data_class
Remap_grid_data_class	CoR/remap_grid_data_class.cxx	/^Remap_grid_data_class::Remap_grid_data_class(Remap_grid_class *grid, const char *array, long &buffer_content_iter)$/;"	f	class:Remap_grid_data_class
Remap_grid_data_class	CoR/remap_grid_data_class.cxx	/^Remap_grid_data_class::Remap_grid_data_class(const char *field_data_name, $/;"	f	class:Remap_grid_data_class
Remap_grid_data_class	CoR/remap_grid_data_class.cxx	/^Remap_grid_data_class::Remap_grid_data_class(const char *field_data_name,$/;"	f	class:Remap_grid_data_class
Remap_grid_data_class	CoR/remap_grid_data_class.h	/^class Remap_grid_data_class$/;"	c
Remap_grid_mgt	CoR/remap_grid_mgt.h	/^        Remap_grid_mgt() {}$/;"	f	class:Remap_grid_mgt
Remap_grid_mgt	CoR/remap_grid_mgt.h	/^class Remap_grid_mgt$/;"	c
Remap_mgt	CoR/remap_mgt.cxx	/^Remap_mgt::Remap_mgt(const char *cfg_file_name)$/;"	f	class:Remap_mgt
Remap_mgt	CoR/remap_mgt.h	/^class Remap_mgt$/;"	c
Remap_operator_1D_basis	CoR/remap_operator_1D_basis.cxx	/^Remap_operator_1D_basis::Remap_operator_1D_basis(const char *object_name, const char *operator_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_1D_basis
Remap_operator_1D_basis	CoR/remap_operator_1D_basis.h	/^        Remap_operator_1D_basis() {}$/;"	f	class:Remap_operator_1D_basis
Remap_operator_1D_basis	CoR/remap_operator_1D_basis.h	/^class Remap_operator_1D_basis: public Remap_operator_basis$/;"	c
Remap_operator_basis	CoR/remap_operator_basis.cxx	/^Remap_operator_basis::Remap_operator_basis()$/;"	f	class:Remap_operator_basis
Remap_operator_basis	CoR/remap_operator_basis.cxx	/^Remap_operator_basis::Remap_operator_basis(const char *object_name, $/;"	f	class:Remap_operator_basis
Remap_operator_basis	CoR/remap_operator_basis.h	/^class Remap_operator_basis$/;"	c
Remap_operator_bilinear	CoR/remap_operator_bilinear.cxx	/^Remap_operator_bilinear::Remap_operator_bilinear()$/;"	f	class:Remap_operator_bilinear
Remap_operator_bilinear	CoR/remap_operator_bilinear.cxx	/^Remap_operator_bilinear::Remap_operator_bilinear(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_bilinear
Remap_operator_bilinear	CoR/remap_operator_bilinear.h	/^class Remap_operator_bilinear: public Remap_operator_basis$/;"	c
Remap_operator_conserv_2D	CoR/remap_operator_conserv_2D.cxx	/^Remap_operator_conserv_2D::Remap_operator_conserv_2D(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_conserv_2D
Remap_operator_conserv_2D	CoR/remap_operator_conserv_2D.h	/^        Remap_operator_conserv_2D() {}$/;"	f	class:Remap_operator_conserv_2D
Remap_operator_conserv_2D	CoR/remap_operator_conserv_2D.h	/^class Remap_operator_conserv_2D: public Remap_operator_basis$/;"	c
Remap_operator_distwgt	CoR/remap_operator_distwgt.cxx	/^Remap_operator_distwgt::Remap_operator_distwgt()$/;"	f	class:Remap_operator_distwgt
Remap_operator_distwgt	CoR/remap_operator_distwgt.cxx	/^Remap_operator_distwgt::Remap_operator_distwgt(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_distwgt
Remap_operator_distwgt	CoR/remap_operator_distwgt.h	/^class Remap_operator_distwgt: public Remap_operator_basis$/;"	c
Remap_operator_grid	CoR/remap_operator_grid.cxx	/^Remap_operator_grid::Remap_operator_grid(Remap_grid_class *remap_grid, Remap_operator_basis *remap_operator, bool is_src_grid, bool is_rotated_grid)$/;"	f	class:Remap_operator_grid
Remap_operator_grid	CoR/remap_operator_grid.h	/^class Remap_operator_grid $/;"	c
Remap_operator_linear	CoR/remap_operator_linear.cxx	/^Remap_operator_linear::Remap_operator_linear(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_linear
Remap_operator_linear	CoR/remap_operator_linear.h	/^        Remap_operator_linear() {}$/;"	f	class:Remap_operator_linear
Remap_operator_linear	CoR/remap_operator_linear.h	/^class Remap_operator_linear: public Remap_operator_1D_basis$/;"	c
Remap_operator_mgt	CoR/remap_operator_mgt.h	/^        Remap_operator_mgt() {}$/;"	f	class:Remap_operator_mgt
Remap_operator_mgt	CoR/remap_operator_mgt.h	/^class Remap_operator_mgt$/;"	c
Remap_operator_regrid	CoR/remap_operator_regrid.cxx	/^Remap_operator_regrid::Remap_operator_regrid(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids, int num_dimensions)$/;"	f	class:Remap_operator_regrid
Remap_operator_regrid	CoR/remap_operator_regrid.h	/^        Remap_operator_regrid() {}$/;"	f	class:Remap_operator_regrid
Remap_operator_regrid	CoR/remap_operator_regrid.h	/^class Remap_operator_regrid: public Remap_operator_basis$/;"	c
Remap_operator_smooth	CoR/remap_operator_smooth.cxx	/^Remap_operator_smooth::Remap_operator_smooth(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_smooth
Remap_operator_smooth	CoR/remap_operator_smooth.h	/^        Remap_operator_smooth() {}$/;"	f	class:Remap_operator_smooth
Remap_operator_smooth	CoR/remap_operator_smooth.h	/^class Remap_operator_smooth: public Remap_operator_basis$/;"	c
Remap_operator_spline_1D	CoR/remap_operator_spline_1D.cxx	/^Remap_operator_spline_1D::Remap_operator_spline_1D(const char *object_name, int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_spline_1D
Remap_operator_spline_1D	CoR/remap_operator_spline_1D.h	/^        Remap_operator_spline_1D() {}$/;"	f	class:Remap_operator_spline_1D
Remap_operator_spline_1D	CoR/remap_operator_spline_1D.h	/^class Remap_operator_spline_1D: public Remap_operator_1D_basis$/;"	c
Remap_parser	CoR/remap_parser.cxx	/^Remap_parser::Remap_parser(const char* script_file_name)$/;"	f	class:Remap_parser
Remap_parser	CoR/remap_parser.h	/^class Remap_parser$/;"	c
Remap_statement	CoR/remap_mgt.h	/^        struct Remap_statement $/;"	s	class:Remap_mgt
Remap_statement_object	CoR/remap_statement_operand.h	/^struct Remap_statement_object$/;"	s
Remap_statement_operand	CoR/remap_statement_operand.h	/^struct Remap_statement_operand$/;"	s
Remap_strategy_class	CoR/remap_strategy_class.cxx	/^Remap_strategy_class::Remap_strategy_class(const char *strategy_name, int num_remap_operators, Remap_operator_basis **remap_operators)$/;"	f	class:Remap_strategy_class
Remap_strategy_class	CoR/remap_strategy_class.h	/^class Remap_strategy_class$/;"	c
Remap_strategy_mgt	CoR/remap_strategy_mgt.h	/^        Remap_strategy_mgt(){};$/;"	f	class:Remap_strategy_mgt
Remap_strategy_mgt	CoR/remap_strategy_mgt.h	/^class Remap_strategy_mgt$/;"	c
Remap_weight_of_operator_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_class::Remap_weight_of_operator_class(Remap_grid_class *field_data_grid_src, Remap_grid_class *field_data_grid_dst, Remap_operator_basis *remap_operator,$/;"	f	class:Remap_weight_of_operator_class
Remap_weight_of_operator_class	CoR/remap_weight_of_strategy_class.h	/^class Remap_weight_of_operator_class$/;"	c
Remap_weight_of_operator_instance_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_instance_class::Remap_weight_of_operator_instance_class(Remap_grid_class *field_data_grid_src, Remap_grid_class *field_data_grid_dst, $/;"	f	class:Remap_weight_of_operator_instance_class
Remap_weight_of_operator_instance_class	CoR/remap_weight_of_strategy_class.h	/^        Remap_weight_of_operator_instance_class() { duplicated_remap_operator = NULL; }$/;"	f	class:Remap_weight_of_operator_instance_class
Remap_weight_of_operator_instance_class	CoR/remap_weight_of_strategy_class.h	/^class Remap_weight_of_operator_instance_class$/;"	c
Remap_weight_of_operator_mgt	CoR/remap_weight_of_strategy_mgt.h	/^        Remap_weight_of_operator_mgt() {}$/;"	f	class:Remap_weight_of_operator_mgt
Remap_weight_of_operator_mgt	CoR/remap_weight_of_strategy_mgt.h	/^class Remap_weight_of_operator_mgt$/;"	c
Remap_weight_of_strategy_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_strategy_class::Remap_weight_of_strategy_class(const char *object_name, Remap_strategy_class *remap_strategy, $/;"	f	class:Remap_weight_of_strategy_class
Remap_weight_of_strategy_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_strategy_class::Remap_weight_of_strategy_class(const char *object_name, const char *remap_strategy_name, $/;"	f	class:Remap_weight_of_strategy_class
Remap_weight_of_strategy_class	CoR/remap_weight_of_strategy_class.h	/^        Remap_weight_of_strategy_class() { initialize_object(); }$/;"	f	class:Remap_weight_of_strategy_class
Remap_weight_of_strategy_class	CoR/remap_weight_of_strategy_class.h	/^class Remap_weight_of_strategy_class$/;"	c
Remap_weight_of_strategy_mgt	CoR/remap_weight_of_strategy_mgt.h	/^        Remap_weight_of_strategy_mgt() {}$/;"	f	class:Remap_weight_of_strategy_mgt
Remap_weight_of_strategy_mgt	CoR/remap_weight_of_strategy_mgt.h	/^class Remap_weight_of_strategy_mgt$/;"	c
Remap_weight_sparse_matrix	CoR/remap_weight_sparse_matrix.cxx	/^Remap_weight_sparse_matrix::Remap_weight_sparse_matrix(Remap_operator_basis *remap_operator)$/;"	f	class:Remap_weight_sparse_matrix
Remap_weight_sparse_matrix	CoR/remap_weight_sparse_matrix.cxx	/^Remap_weight_sparse_matrix::Remap_weight_sparse_matrix(Remap_operator_basis *remap_operator, $/;"	f	class:Remap_weight_sparse_matrix
Remap_weight_sparse_matrix	CoR/remap_weight_sparse_matrix.h	/^class Remap_weight_sparse_matrix$/;"	c
Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_algorithm_specification::Remapping_algorithm_specification(const Remapping_algorithm_specification *src_specification)$/;"	f	class:Remapping_algorithm_specification
Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_algorithm_specification::Remapping_algorithm_specification(const char *algorithm_name, int algorithm_type)$/;"	f	class:Remapping_algorithm_specification
Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_algorithm_specification::Remapping_algorithm_specification(const char *array, long *buffer_content_iter)$/;"	f	class:Remapping_algorithm_specification
Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_algorithm_specification::Remapping_algorithm_specification(int comp_id, TiXmlElement *XML_element, const char *XML_file_name, int algorithm_type)$/;"	f	class:Remapping_algorithm_specification
Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification() { algorithm_name = NULL; }$/;"	f	class:Remapping_algorithm_specification
Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.h	/^class Remapping_algorithm_specification$/;"	c
Remapping_configuration	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_configuration::Remapping_configuration()$/;"	f	class:Remapping_configuration
Remapping_configuration	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_configuration::Remapping_configuration(int comp_id, const char *XML_file_name, TiXmlDocument *XML_file)$/;"	f	class:Remapping_configuration
Remapping_configuration	Runtime_MGT/remapping_configuration_mgt.h	/^class Remapping_configuration$/;"	c
Remapping_configuration_mgt	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_configuration_mgt() {}$/;"	f	class:Remapping_configuration_mgt
Remapping_configuration_mgt	Runtime_MGT/remapping_configuration_mgt.h	/^class Remapping_configuration_mgt$/;"	c
Remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_setting::Remapping_setting()$/;"	f	class:Remapping_setting
Remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_setting::Remapping_setting(const char *H2D_remapping_algorithm_name, const char *field_type)$/;"	f	class:Remapping_setting
Remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_setting::Remapping_setting(int comp_id, TiXmlElement *XML_element, const char *XML_file_name)$/;"	f	class:Remapping_setting
Remapping_setting	Runtime_MGT/remapping_configuration_mgt.h	/^class Remapping_setting$/;"	c
Remove	XML/tinyxml.cxx	/^void TiXmlAttributeSet::Remove( TiXmlAttribute* removeMe )$/;"	f	class:TiXmlAttributeSet
RemoveAttribute	XML/tinyxml.cxx	/^void TiXmlElement::RemoveAttribute( const char * name )$/;"	f	class:TiXmlElement
RemoveAttribute	XML/tinyxml.h	/^	void RemoveAttribute( const std::string& name )	{	RemoveAttribute (name.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlElement
RemoveChild	XML/tinyxml.cxx	/^bool TiXmlNode::RemoveChild( TiXmlNode* removeThis )$/;"	f	class:TiXmlNode
Rep	XML/tinystr.h	/^	struct Rep$/;"	s	class:TiXmlString
ReplaceChild	XML/tinyxml.cxx	/^TiXmlNode* TiXmlNode::ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis )$/;"	f	class:TiXmlNode
Restart_buffer_container	Data_MGT/restart_mgt.cxx	/^Restart_buffer_container::Restart_buffer_container(const char *array_buffer, long &buffer_content_iter, const char *file_name, Restart_mgt *restart_mgr)$/;"	f	class:Restart_buffer_container
Restart_buffer_container	Data_MGT/restart_mgt.cxx	/^Restart_buffer_container::Restart_buffer_container(const char *comp_full_name, const char *buf_type, const char *keyword, Restart_mgt *restart_mgr)$/;"	f	class:Restart_buffer_container
Restart_buffer_container	Data_MGT/restart_mgt.h	/^class Restart_buffer_container$/;"	c
Restart_mgt	Data_MGT/restart_mgt.cxx	/^Restart_mgt::Restart_mgt(Comp_comm_group_mgt_node *comp_node)$/;"	f	class:Restart_mgt
Restart_mgt	Data_MGT/restart_mgt.h	/^class Restart_mgt$/;"	c
RootElement	XML/tinyxml.h	/^	TiXmlElement* RootElement()					{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
RootElement	XML/tinyxml.h	/^	const TiXmlElement* RootElement() const		{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
Routing_info	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info::Routing_info(const int src_comp_id, const int dst_comp_id, const char *src_decomp_name, const char *dst_decomp_name)$/;"	f	class:Routing_info
Routing_info	Parallel_MGT/routing_info_mgt.h	/^class Routing_info$/;"	c
Routing_info_mgt	Parallel_MGT/routing_info_mgt.h	/^        Routing_info_mgt() {}$/;"	f	class:Routing_info_mgt
Routing_info_mgt	Parallel_MGT/routing_info_mgt.h	/^class Routing_info_mgt$/;"	c
Routing_info_with_one_process	Parallel_MGT/routing_info_mgt.h	/^struct Routing_info_with_one_process$/;"	s
Row	XML/tinyxml.h	/^	int Row() const			{ return location.row + 1; }$/;"	f	class:TiXmlBase
Runtime_algorithm_basis	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^Runtime_algorithm_basis::Runtime_algorithm_basis()$/;"	f	class:Runtime_algorithm_basis
Runtime_algorithm_basis	Runtime_MGT/Runtime_Algorithm_Basis.h	/^class Runtime_algorithm_basis$/;"	c
Runtime_cumulate_average_algorithm	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^Runtime_cumulate_average_algorithm::Runtime_cumulate_average_algorithm(Connection_coupling_procedure *coupling_procedure, Field_mem_info *field_src, Field_mem_info *field_dst)$/;"	f	class:Runtime_cumulate_average_algorithm
Runtime_cumulate_average_algorithm	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^class Runtime_cumulate_average_algorithm$/;"	c
Runtime_datatype_transformer	Runtime_MGT/runtime_datatype_transformer.cxx	/^Runtime_datatype_transformer::Runtime_datatype_transformer(Field_mem_info *src_field, Field_mem_info *dst_field)$/;"	f	class:Runtime_datatype_transformer
Runtime_datatype_transformer	Runtime_MGT/runtime_datatype_transformer.h	/^        Runtime_datatype_transformer() {}$/;"	f	class:Runtime_datatype_transformer
Runtime_datatype_transformer	Runtime_MGT/runtime_datatype_transformer.h	/^class Runtime_datatype_transformer$/;"	c
Runtime_remap_algorithm	Runtime_MGT/runtime_remap_algorithm.cxx	/^Runtime_remap_algorithm::Runtime_remap_algorithm(Runtime_remapping_weights *runtime_remapping_weights, Field_mem_info *src_field_instance, Field_mem_info *dst_field_instance, int connection_id)$/;"	f	class:Runtime_remap_algorithm
Runtime_remap_algorithm	Runtime_MGT/runtime_remap_algorithm.h	/^class Runtime_remap_algorithm$/;"	c
Runtime_remap_function	CoR/runtime_remap_function.cxx	/^Runtime_remap_function::Runtime_remap_function(Remap_grid_class *interchanged_grid_src,$/;"	f	class:Runtime_remap_function
Runtime_remap_function	CoR/runtime_remap_function.h	/^class Runtime_remap_function$/;"	c
Runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^Runtime_remapping_weights::Runtime_remapping_weights()$/;"	f	class:Runtime_remapping_weights
Runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^Runtime_remapping_weights::Runtime_remapping_weights(const char *src_comp_full_name, const char *dst_comp_full_name, Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid, Remapping_setting *remapping_setting, Decomp_info *dst_decomp_info)$/;"	f	class:Runtime_remapping_weights
Runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.h	/^class Runtime_remapping_weights$/;"	c
Runtime_remapping_weights_mgt	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Runtime_remapping_weights_mgt() {}$/;"	f	class:Runtime_remapping_weights_mgt
Runtime_remapping_weights_mgt	Runtime_MGT/runtime_remapping_weights_mgt.h	/^class Runtime_remapping_weights_mgt$/;"	c
Runtime_trans_algorithm	Runtime_MGT/runtime_trans_algorithm.cxx	/^Runtime_trans_algorithm::Runtime_trans_algorithm(bool send_or_receive, int num_transfered_fields, Field_mem_info ** fields_mem, Routing_info ** routers, MPI_Comm comm, int * ranks, int connection_id)$/;"	f	class:Runtime_trans_algorithm
Runtime_trans_algorithm	Runtime_MGT/runtime_trans_algorithm.h	/^class Runtime_trans_algorithm$/;"	c
SCRIP_CENTER_LAT_LABEL	CoR/io_netcdf.h	21;"	d
SCRIP_CENTER_LON_LABEL	CoR/io_netcdf.h	20;"	d
SCRIP_MASK_LABEL	CoR/io_netcdf.h	24;"	d
SCRIP_VERTEX_LAT_LABEL	CoR/io_netcdf.h	23;"	d
SCRIP_VERTEX_LON_LABEL	CoR/io_netcdf.h	22;"	d
SECONDS_PER_DAY	Driver/timer_mgt.h	48;"	d
SEPERATE_WORD_SPACE	CoR/parse_special_words.h	13;"	d
SEPERATE_WORD_TAB	CoR/parse_special_words.h	14;"	d
SPHERE_GRID_ROTATION_LAT_THRESHOLD	CoR/remap_grid_class.h	40;"	d
SURFACE_FIELD_GF	CoR/cor_cpl_interface.h	22;"	d
SYNTAX_CHECK_H	CoR/syntax_check.h	11;"	d
SaveFile	XML/tinyxml.cxx	/^bool TiXmlDocument::SaveFile( FILE* fp ) const$/;"	f	class:TiXmlDocument
SaveFile	XML/tinyxml.cxx	/^bool TiXmlDocument::SaveFile( const char * filename ) const$/;"	f	class:TiXmlDocument
SaveFile	XML/tinyxml.cxx	/^bool TiXmlDocument::SaveFile() const$/;"	f	class:TiXmlDocument
SaveFile	XML/tinyxml.h	/^	bool SaveFile( const std::string& filename ) const		\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument
SetAttribute	XML/tinyxml.cxx	/^void TiXmlElement::SetAttribute( const char * cname, const char * cvalue )$/;"	f	class:TiXmlElement
SetAttribute	XML/tinyxml.cxx	/^void TiXmlElement::SetAttribute( const char * name, int val )$/;"	f	class:TiXmlElement
SetAttribute	XML/tinyxml.cxx	/^void TiXmlElement::SetAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlElement
SetAttribute	XML/tinyxml.cxx	/^void TiXmlElement::SetAttribute( const std::string& name, int val )$/;"	f	class:TiXmlElement
SetCDATA	XML/tinyxml.h	/^	void SetCDATA( bool _cdata )	{ cdata = _cdata; }$/;"	f	class:TiXmlText
SetCondenseWhiteSpace	XML/tinyxml.h	/^	static void SetCondenseWhiteSpace( bool condense )		{ condenseWhiteSpace = condense; }$/;"	f	class:TiXmlBase
SetDocument	XML/tinyxml.h	/^	void SetDocument( TiXmlDocument* doc )	{ document = doc; }$/;"	f	class:TiXmlAttribute
SetDoubleAttribute	XML/tinyxml.cxx	/^void TiXmlElement::SetDoubleAttribute( const char * name, double val )$/;"	f	class:TiXmlElement
SetDoubleAttribute	XML/tinyxml.cxx	/^void TiXmlElement::SetDoubleAttribute( const std::string& name, double val )$/;"	f	class:TiXmlElement
SetDoubleValue	XML/tinyxml.cxx	/^void TiXmlAttribute::SetDoubleValue( double _value )$/;"	f	class:TiXmlAttribute
SetError	XML/tinyxmlparser.cxx	/^void TiXmlDocument::SetError( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
SetIndent	XML/tinyxml.h	/^	void SetIndent( const char* _indent )			{ indent = _indent ? _indent : "" ; }$/;"	f	class:TiXmlPrinter
SetIntValue	XML/tinyxml.cxx	/^void TiXmlAttribute::SetIntValue( int _value )$/;"	f	class:TiXmlAttribute
SetLineBreak	XML/tinyxml.h	/^	void SetLineBreak( const char* _lineBreak )		{ lineBreak = _lineBreak ? _lineBreak : ""; }$/;"	f	class:TiXmlPrinter
SetName	XML/tinyxml.h	/^	void SetName( const char* _name )	{ name = _name; }				\/\/\/< Set the name of this attribute.$/;"	f	class:TiXmlAttribute
SetName	XML/tinyxml.h	/^	void SetName( const std::string& _name )	{ name = _name; }	$/;"	f	class:TiXmlAttribute
SetStreamPrinting	XML/tinyxml.h	/^	void SetStreamPrinting()						{ indent = "";$/;"	f	class:TiXmlPrinter
SetTabSize	XML/tinyxml.h	/^	void SetTabSize( int _tabsize )		{ tabsize = _tabsize; }$/;"	f	class:TiXmlDocument
SetUserData	XML/tinyxml.h	/^	void  SetUserData( void* user )			{ userData = user; }	\/\/\/< Set a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
SetValue	XML/tinyxml.h	/^	void SetValue( const char* _value )	{ value = _value; }				\/\/\/< Set the value.$/;"	f	class:TiXmlAttribute
SetValue	XML/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlAttribute
SetValue	XML/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlNode
SetValue	XML/tinyxml.h	/^	void SetValue(const char * _value) { value = _value;}$/;"	f	class:TiXmlNode
Size	XML/tinyxml.h	/^	size_t Size()									{ return buffer.size(); }$/;"	f	class:TiXmlPrinter
SkipWhiteSpace	XML/tinyxmlparser.cxx	/^const char* TiXmlBase::SkipWhiteSpace( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
Stamp	XML/tinyxmlparser.cxx	/^void TiXmlParsingData::Stamp( const char* now, TiXmlEncoding encoding )$/;"	f	class:TiXmlParsingData
Standalone	XML/tinyxml.h	/^	const char *Standalone() const		{ return standalone.c_str (); }$/;"	f	class:TiXmlDeclaration
Str	XML/tinyxml.h	/^	const std::string& Str()						{ return buffer; }$/;"	f	class:TiXmlPrinter
StreamIn	XML/tinyxmlparser.cxx	/^void TiXmlComment::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlComment
StreamIn	XML/tinyxmlparser.cxx	/^void TiXmlDeclaration::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDeclaration
StreamIn	XML/tinyxmlparser.cxx	/^void TiXmlDocument::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDocument
StreamIn	XML/tinyxmlparser.cxx	/^void TiXmlElement::StreamIn (std::istream * in, TIXML_STRING * tag)$/;"	f	class:TiXmlElement
StreamIn	XML/tinyxmlparser.cxx	/^void TiXmlText::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlText
StreamIn	XML/tinyxmlparser.cxx	/^void TiXmlUnknown::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlUnknown
StreamTo	XML/tinyxmlparser.cxx	/^\/*static*\/ bool TiXmlBase::StreamTo( std::istream * in, int character, TIXML_STRING * tag )$/;"	f	class:TiXmlBase
StreamWhiteSpace	XML/tinyxmlparser.cxx	/^\/*static*\/ bool TiXmlBase::StreamWhiteSpace( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlBase
StringEqual	XML/tinyxmlparser.cxx	/^bool TiXmlBase::StringEqual( const char* p,$/;"	f	class:TiXmlBase
T1D_remapping_algorithm	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification *T1D_remapping_algorithm;$/;"	m	class:Remapping_setting
T1D_sub_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *T1D_sub_CoR_grid;$/;"	m	class:Original_grid_info
T1D_sub_grid_order	Data_MGT/original_grid_mgt.h	/^        int T1D_sub_grid_order;$/;"	m	class:Original_grid_info
TILE_DIVIDE_FACTOR	CoR/grid_cell_search.h	15;"	d
TIME_UNIT_STRING_DAY	Driver/timer_mgt.h	67;"	d
TIME_UNIT_STRING_HOUR	Driver/timer_mgt.h	66;"	d
TIME_UNIT_STRING_MINUTE	Driver/timer_mgt.h	65;"	d
TIME_UNIT_STRING_MONTH	Driver/timer_mgt.h	68;"	d
TIME_UNIT_STRING_SECOND	Driver/timer_mgt.h	64;"	d
TIME_UNIT_STRING_STEP	Driver/timer_mgt.h	63;"	d
TIME_UNIT_STRING_YEAR	Driver/timer_mgt.h	69;"	d
TIMING_COMMUNICATION_RECV	Parallel_MGT/performance_timing_mgt.h	27;"	d
TIMING_COMMUNICATION_RECV_QUERRY	Parallel_MGT/performance_timing_mgt.h	25;"	d
TIMING_COMMUNICATION_RECV_WAIT	Parallel_MGT/performance_timing_mgt.h	22;"	d
TIMING_COMMUNICATION_SEND	Parallel_MGT/performance_timing_mgt.h	26;"	d
TIMING_COMMUNICATION_SENDRECV	Parallel_MGT/performance_timing_mgt.h	23;"	d
TIMING_COMMUNICATION_SEND_QUERRY	Parallel_MGT/performance_timing_mgt.h	24;"	d
TIMING_COMMUNICATION_SEND_WAIT	Parallel_MGT/performance_timing_mgt.h	21;"	d
TIMING_COMPUTATION_ALL	Parallel_MGT/performance_timing_mgt.h	34;"	d
TIMING_COMPUTATION_H2D_REMAP	Parallel_MGT/performance_timing_mgt.h	35;"	d
TIMING_COMPUTATION_V1D_COORD	Parallel_MGT/performance_timing_mgt.h	38;"	d
TIMING_COMPUTATION_V1D_REMAP	Parallel_MGT/performance_timing_mgt.h	36;"	d
TIMING_COMPUTATION_V1D_WEIGHT	Parallel_MGT/performance_timing_mgt.h	37;"	d
TIMING_IO_INPUT	Parallel_MGT/performance_timing_mgt.h	30;"	d
TIMING_IO_OUTPUT	Parallel_MGT/performance_timing_mgt.h	31;"	d
TIMING_IO_RESTART	Parallel_MGT/performance_timing_mgt.h	32;"	d
TIMING_TYPE_COMMUNICATION	Parallel_MGT/performance_timing_mgt.h	17;"	d
TIMING_TYPE_COMPUTATION	Parallel_MGT/performance_timing_mgt.h	19;"	d
TIMING_TYPE_IO	Parallel_MGT/performance_timing_mgt.h	18;"	d
TINYXML_COMMENT	XML/tinyxml.h	/^		TINYXML_COMMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_DECLARATION	XML/tinyxml.h	/^		TINYXML_DECLARATION,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_DOCUMENT	XML/tinyxml.h	/^		TINYXML_DOCUMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_ELEMENT	XML/tinyxml.h	/^		TINYXML_ELEMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_INCLUDED	XML/tinyxml.h	27;"	d
TINYXML_TEXT	XML/tinyxml.h	/^		TINYXML_TEXT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_TYPECOUNT	XML/tinyxml.h	/^		TINYXML_TYPECOUNT$/;"	e	enum:TiXmlNode::NodeType
TINYXML_UNKNOWN	XML/tinyxml.h	/^		TINYXML_UNKNOWN,$/;"	e	enum:TiXmlNode::NodeType
TIXML_DEFAULT_ENCODING	XML/tinyxml.h	/^const TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	v
TIXML_ENCODING_LEGACY	XML/tinyxml.h	/^	TIXML_ENCODING_LEGACY$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UNKNOWN	XML/tinyxml.h	/^	TIXML_ENCODING_UNKNOWN,$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UTF8	XML/tinyxml.h	/^	TIXML_ENCODING_UTF8,$/;"	e	enum:TiXmlEncoding
TIXML_ERROR	XML/tinyxml.h	/^		TIXML_ERROR,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_DOCUMENT_EMPTY	XML/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_DOCUMENT_TOP_ONLY	XML/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_EMBEDDED_NULL	XML/tinyxml.h	/^		TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	XML/tinyxml.h	/^		TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_OPENING_FILE	XML/tinyxml.h	/^		TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_CDATA	XML/tinyxml.h	/^		TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_COMMENT	XML/tinyxml.h	/^		TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_DECLARATION	XML/tinyxml.h	/^		TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_ELEMENT	XML/tinyxml.h	/^		TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_EMPTY	XML/tinyxml.h	/^		TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_PARSING_UNKNOWN	XML/tinyxml.h	/^		TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_READING_ATTRIBUTES	XML/tinyxml.h	/^		TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_READING_ELEMENT_VALUE	XML/tinyxml.h	/^		TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_READING_END_TAG	XML/tinyxml.h	/^		TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlBase::__anon4
TIXML_ERROR_STRING_COUNT	XML/tinyxml.h	/^		TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlBase::__anon4
TIXML_EXPLICIT	XML/tinystr.h	39;"	d
TIXML_EXPLICIT	XML/tinystr.h	42;"	d
TIXML_EXPLICIT	XML/tinystr.h	44;"	d
TIXML_LOG	XML/tinyxmlparser.cxx	36;"	d	file:
TIXML_MAJOR_VERSION	XML/tinyxml.h	/^const int TIXML_MAJOR_VERSION = 2;$/;"	v
TIXML_MINOR_VERSION	XML/tinyxml.h	/^const int TIXML_MINOR_VERSION = 6;$/;"	v
TIXML_NO_ATTRIBUTE	XML/tinyxml.h	/^	TIXML_NO_ATTRIBUTE,$/;"	e	enum:__anon3
TIXML_NO_ERROR	XML/tinyxml.h	/^		TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlBase::__anon4
TIXML_PATCH_VERSION	XML/tinyxml.h	/^const int TIXML_PATCH_VERSION = 2;$/;"	v
TIXML_SAFE	XML/tinyxml.h	63;"	d
TIXML_SNPRINTF	XML/tinyxml.h	68;"	d
TIXML_SNPRINTF	XML/tinyxml.h	73;"	d
TIXML_SNPRINTF	XML/tinyxml.h	78;"	d
TIXML_SNPRINTF	XML/tinyxml.h	81;"	d
TIXML_SSCANF	XML/tinyxml.h	69;"	d
TIXML_SSCANF	XML/tinyxml.h	74;"	d
TIXML_SSCANF	XML/tinyxml.h	79;"	d
TIXML_SSCANF	XML/tinyxml.h	82;"	d
TIXML_STRING	XML/tinyxml.h	53;"	d
TIXML_STRING	XML/tinyxml.h	56;"	d
TIXML_STRING_INCLUDED	XML/tinystr.h	28;"	d
TIXML_SUCCESS	XML/tinyxml.h	/^	TIXML_SUCCESS,$/;"	e	enum:__anon3
TIXML_UTF_LEAD_0	XML/tinyxmlparser.cxx	/^const unsigned char TIXML_UTF_LEAD_0 = 0xefU;$/;"	v
TIXML_UTF_LEAD_1	XML/tinyxmlparser.cxx	/^const unsigned char TIXML_UTF_LEAD_1 = 0xbbU;$/;"	v
TIXML_UTF_LEAD_2	XML/tinyxmlparser.cxx	/^const unsigned char TIXML_UTF_LEAD_2 = 0xbfU;$/;"	v
TIXML_WRONG_TYPE	XML/tinyxml.h	/^	TIXML_WRONG_TYPE$/;"	e	enum:__anon3
TOLERABLE_ERROR	CoR/remap_grid_class.h	31;"	d
TYPE_COMP_LOCAL_ID_PREFIX	Driver/object_type_prefix.h	16;"	d
TYPE_DECOMP_ID_PREFIX	Driver/object_type_prefix.h	19;"	d
TYPE_FIELD_INST_ID_PREFIX	Driver/object_type_prefix.h	20;"	d
TYPE_GRID_GLOBAL_ID_PREFIX	Driver/object_type_prefix.h	18;"	d
TYPE_GRID_LOCAL_ID_PREFIX	Driver/object_type_prefix.h	17;"	d
TYPE_ID_PREFIX_MASK	Driver/object_type_prefix.h	14;"	d
TYPE_ID_SUFFIX_MASK	Driver/object_type_prefix.h	15;"	d
TYPE_INOUT_INTERFACE_ID_PREFIX	Driver/object_type_prefix.h	22;"	d
TYPE_IO_FIELD_PREFIX	Driver/object_type_prefix.h	23;"	d
TYPE_TIMER_ID_PREFIX	Driver/object_type_prefix.h	21;"	d
TabSize	XML/tinyxml.h	/^	int TabSize() const	{ return tabsize; }$/;"	f	class:TiXmlDocument
Text	XML/tinyxml.h	/^	TiXmlText* Text() const			{ return ToText(); }$/;"	f	class:TiXmlHandle
TiXmlAttribute	XML/tinyxml.h	/^	TiXmlAttribute( const char * _name, const char * _value )$/;"	f	class:TiXmlAttribute
TiXmlAttribute	XML/tinyxml.h	/^	TiXmlAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlAttribute
TiXmlAttribute	XML/tinyxml.h	/^	TiXmlAttribute() : TiXmlBase()$/;"	f	class:TiXmlAttribute
TiXmlAttribute	XML/tinyxml.h	/^class TiXmlAttribute : public TiXmlBase$/;"	c
TiXmlAttributeSet	XML/tinyxml.cxx	/^TiXmlAttributeSet::TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
TiXmlAttributeSet	XML/tinyxml.h	/^class TiXmlAttributeSet$/;"	c
TiXmlBase	XML/tinyxml.h	/^	TiXmlBase()	:	userData(0)		{}$/;"	f	class:TiXmlBase
TiXmlBase	XML/tinyxml.h	/^class TiXmlBase$/;"	c
TiXmlComment	XML/tinyxml.cxx	/^TiXmlComment::TiXmlComment( const TiXmlComment& copy ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT )$/;"	f	class:TiXmlComment
TiXmlComment	XML/tinyxml.h	/^	TiXmlComment( const char* _value ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {$/;"	f	class:TiXmlComment
TiXmlComment	XML/tinyxml.h	/^	TiXmlComment() : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {}$/;"	f	class:TiXmlComment
TiXmlComment	XML/tinyxml.h	/^class TiXmlComment : public TiXmlNode$/;"	c
TiXmlCursor	XML/tinyxml.h	/^	TiXmlCursor()		{ Clear(); }$/;"	f	struct:TiXmlCursor
TiXmlCursor	XML/tinyxml.h	/^struct TiXmlCursor$/;"	s
TiXmlDeclaration	XML/tinyxml.cxx	/^TiXmlDeclaration::TiXmlDeclaration(	const std::string& _version,$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	XML/tinyxml.cxx	/^TiXmlDeclaration::TiXmlDeclaration( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	XML/tinyxml.cxx	/^TiXmlDeclaration::TiXmlDeclaration( const char * _version,$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	XML/tinyxml.h	/^	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::TINYXML_DECLARATION ) {}$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	XML/tinyxml.h	/^class TiXmlDeclaration : public TiXmlNode$/;"	c
TiXmlDocument	XML/tinyxml.cxx	/^TiXmlDocument::TiXmlDocument( const TiXmlDocument& copy ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	XML/tinyxml.cxx	/^TiXmlDocument::TiXmlDocument( const char * documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	XML/tinyxml.cxx	/^TiXmlDocument::TiXmlDocument( const std::string& documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	XML/tinyxml.cxx	/^TiXmlDocument::TiXmlDocument() : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	XML/tinyxml.h	/^class TiXmlDocument : public TiXmlNode$/;"	c
TiXmlElement	XML/tinyxml.cxx	/^TiXmlElement::TiXmlElement (const char * _value)$/;"	f	class:TiXmlElement
TiXmlElement	XML/tinyxml.cxx	/^TiXmlElement::TiXmlElement( const TiXmlElement& copy)$/;"	f	class:TiXmlElement
TiXmlElement	XML/tinyxml.cxx	/^TiXmlElement::TiXmlElement( const std::string& _value ) $/;"	f	class:TiXmlElement
TiXmlElement	XML/tinyxml.h	/^class TiXmlElement : public TiXmlNode$/;"	c
TiXmlEncoding	XML/tinyxml.h	/^enum TiXmlEncoding$/;"	g
TiXmlFOpen	XML/tinyxml.cxx	/^FILE* TiXmlFOpen( const char* filename, const char* mode )$/;"	f
TiXmlHandle	XML/tinyxml.h	/^	TiXmlHandle( TiXmlNode* _node )					{ this->node = _node; }$/;"	f	class:TiXmlHandle
TiXmlHandle	XML/tinyxml.h	/^	TiXmlHandle( const TiXmlHandle& ref )			{ this->node = ref.node; }$/;"	f	class:TiXmlHandle
TiXmlHandle	XML/tinyxml.h	/^class TiXmlHandle$/;"	c
TiXmlNode	XML/tinyxml.cxx	/^TiXmlNode::TiXmlNode( NodeType _type ) : TiXmlBase()$/;"	f	class:TiXmlNode
TiXmlNode	XML/tinyxml.h	/^class TiXmlNode : public TiXmlBase$/;"	c
TiXmlOutStream	XML/tinystr.h	/^class TiXmlOutStream : public TiXmlString$/;"	c
TiXmlParsingData	XML/tinyxmlparser.cxx	/^	TiXmlParsingData( const char* start, int _tabsize, int row, int col )$/;"	f	class:TiXmlParsingData	file:
TiXmlParsingData	XML/tinyxmlparser.cxx	/^class TiXmlParsingData$/;"	c	file:
TiXmlPrinter	XML/tinyxml.h	/^	TiXmlPrinter() : depth( 0 ), simpleTextPrint( false ),$/;"	f	class:TiXmlPrinter
TiXmlPrinter	XML/tinyxml.h	/^class TiXmlPrinter : public TiXmlVisitor$/;"	c
TiXmlString	XML/tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * copy) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	XML/tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * str, size_type len) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	XML/tinystr.h	/^	TiXmlString ( const TiXmlString & copy) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	XML/tinystr.h	/^	TiXmlString () : rep_(&nullrep_)$/;"	f	class:TiXmlString
TiXmlString	XML/tinystr.h	/^class TiXmlString$/;"	c
TiXmlText	XML/tinyxml.h	/^	TiXmlText (const char * initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText
TiXmlText	XML/tinyxml.h	/^	TiXmlText( const TiXmlText& copy ) : TiXmlNode( TiXmlNode::TINYXML_TEXT )	{ copy.CopyTo( this ); }$/;"	f	class:TiXmlText
TiXmlText	XML/tinyxml.h	/^	TiXmlText( const std::string& initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText
TiXmlText	XML/tinyxml.h	/^class TiXmlText : public TiXmlNode$/;"	c
TiXmlUnknown	XML/tinyxml.h	/^	TiXmlUnknown( const TiXmlUnknown& copy ) : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )		{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown
TiXmlUnknown	XML/tinyxml.h	/^	TiXmlUnknown() : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )	{}$/;"	f	class:TiXmlUnknown
TiXmlUnknown	XML/tinyxml.h	/^class TiXmlUnknown : public TiXmlNode$/;"	c
TiXmlVisitor	XML/tinyxml.h	/^class TiXmlVisitor$/;"	c
Time_mgt	Driver/timer_mgt.cxx	/^Time_mgt::Time_mgt(int comp_id, const char *XML_file_name, bool is_for_root_comp)$/;"	f	class:Time_mgt
Time_mgt	Driver/timer_mgt.h	/^        Time_mgt() {}$/;"	f	class:Time_mgt
Time_mgt	Driver/timer_mgt.h	/^class Time_mgt$/;"	c
Timer_mgt	Driver/timer_mgt.h	/^        Timer_mgt() {};$/;"	f	class:Timer_mgt
Timer_mgt	Driver/timer_mgt.h	/^class Timer_mgt$/;"	c
ToComment	XML/tinyxml.h	/^	virtual		  TiXmlComment*  ToComment()		{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment
ToComment	XML/tinyxml.h	/^	virtual TiXmlComment*           ToComment()     { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToComment	XML/tinyxml.h	/^	virtual const TiXmlComment*     ToComment()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToComment	XML/tinyxml.h	/^	virtual const TiXmlComment*  ToComment() const	{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment
ToDeclaration	XML/tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration
ToDeclaration	XML/tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration() { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	XML/tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	XML/tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration
ToDocument	XML/tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument
ToDocument	XML/tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	XML/tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	XML/tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument
ToElement	XML/tinyxml.h	/^	TiXmlElement* ToElement() const		{ return ( ( node && node->ToElement() ) ? node->ToElement() : 0 ); }$/;"	f	class:TiXmlHandle
ToElement	XML/tinyxml.h	/^	virtual TiXmlElement*           ToElement()	          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement
ToElement	XML/tinyxml.h	/^	virtual TiXmlElement*           ToElement()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToElement	XML/tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToElement	XML/tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement
ToLower	XML/tinyxml.h	/^	inline static int ToLower( int v, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
ToNode	XML/tinyxml.h	/^	TiXmlNode* ToNode() const			{ return node; } $/;"	f	class:TiXmlHandle
ToText	XML/tinyxml.h	/^	TiXmlText* ToText() const			{ return ( ( node && node->ToText() ) ? node->ToText() : 0 ); }$/;"	f	class:TiXmlHandle
ToText	XML/tinyxml.h	/^	virtual TiXmlText*	            ToText()        { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToText	XML/tinyxml.h	/^	virtual TiXmlText*       ToText()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText
ToText	XML/tinyxml.h	/^	virtual const TiXmlText*        ToText()        const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToText	XML/tinyxml.h	/^	virtual const TiXmlText* ToText() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText
ToUnknown	XML/tinyxml.h	/^	TiXmlUnknown* ToUnknown() const		{ return ( ( node && node->ToUnknown() ) ? node->ToUnknown() : 0 ); }$/;"	f	class:TiXmlHandle
ToUnknown	XML/tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()				{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown
ToUnknown	XML/tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToUnknown	XML/tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const	{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown
ToUnknown	XML/tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
Triangle	CoR/delaunay_voronoi.cxx	/^Triangle::Triangle()$/;"	f	class:Triangle
Triangle	CoR/delaunay_voronoi.cxx	/^Triangle::Triangle(Edge *edge1, Edge *edge2, Edge *edge3)$/;"	f	class:Triangle
Triangle	CoR/delaunay_voronoi.cxx	/^Triangle::Triangle(Point *point1, Point *point2, Point *point3)$/;"	f	class:Triangle
Triangle	CoR/delaunay_voronoi.h	/^class Triangle$/;"	c
Type	XML/tinyxml.h	/^	int Type() const	{ return type; }$/;"	f	class:TiXmlNode
USING_AVERAGE_VALUE	Runtime_MGT/coupling_generator.h	26;"	d
USING_INSTANTANEOUS_VALUE	Runtime_MGT/coupling_generator.h	25;"	d
Unknown	XML/tinyxml.h	/^	TiXmlUnknown* Unknown() const	{ return ToUnknown(); }$/;"	f	class:TiXmlHandle
V1D_remapping_algorithm	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification *V1D_remapping_algorithm;$/;"	m	class:Remapping_setting
V1D_sub_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *V1D_sub_CoR_grid;$/;"	m	class:Original_grid_info
V1D_sub_grid_order	Data_MGT/original_grid_mgt.h	/^        int V1D_sub_grid_order;$/;"	m	class:Original_grid_info
V3D_GRID_3D_LEVEL_FIELD_NAME	CoR/remap_grid_class.h	42;"	d
V3D_grid_bottom_field_coupling_info	Runtime_MGT/coupling_generator.h	/^struct V3D_grid_bottom_field_coupling_info$/;"	s
V3D_lev_field_id	Data_MGT/original_grid_mgt.h	/^		int V3D_lev_field_id;$/;"	m	class:Original_grid_info
V3D_lev_field_variation_type	Data_MGT/original_grid_mgt.h	/^		int V3D_lev_field_variation_type;   \/\/ 0: static; 1: dynamic$/;"	m	class:Original_grid_info
V3D_runtime_remapping_weights	Runtime_MGT/coupling_generator.h	/^    Runtime_remapping_weights *V3D_runtime_remapping_weights;$/;"	m	struct:V3D_grid_bottom_field_coupling_info
Value	XML/tinyxml.h	/^	const char *Value() const { return value.c_str (); }$/;"	f	class:TiXmlNode
Value	XML/tinyxml.h	/^	const char*		Value() const		{ return value.c_str(); }		\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueStr	XML/tinyxml.h	/^	const std::string& ValueStr() const	{ return value; }				\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueStr	XML/tinyxml.h	/^	const std::string& ValueStr() const { return value; }$/;"	f	class:TiXmlNode
ValueTStr	XML/tinyxml.h	/^	const TIXML_STRING& ValueTStr() const { return value; }$/;"	f	class:TiXmlNode
Version	XML/tinyxml.h	/^	const char *Version() const			{ return version.c_str (); }$/;"	f	class:TiXmlDeclaration
Vertex_values_group	CoR/remap_operator_grid.cxx	/^Vertex_values_group::Vertex_values_group()$/;"	f	class:Vertex_values_group
Vertex_values_group	CoR/remap_operator_grid.h	/^class Vertex_values_group$/;"	c
Visit	XML/tinyxml.cxx	/^bool TiXmlPrinter::Visit( const TiXmlComment& comment )$/;"	f	class:TiXmlPrinter
Visit	XML/tinyxml.cxx	/^bool TiXmlPrinter::Visit( const TiXmlDeclaration& declaration )$/;"	f	class:TiXmlPrinter
Visit	XML/tinyxml.cxx	/^bool TiXmlPrinter::Visit( const TiXmlText& text )$/;"	f	class:TiXmlPrinter
Visit	XML/tinyxml.cxx	/^bool TiXmlPrinter::Visit( const TiXmlUnknown& unknown )$/;"	f	class:TiXmlPrinter
Visit	XML/tinyxml.h	/^	virtual bool Visit( const TiXmlComment& \/*comment*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
Visit	XML/tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& \/*declaration*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor
Visit	XML/tinyxml.h	/^	virtual bool Visit( const TiXmlText& \/*text*\/ )					{ return true; }$/;"	f	class:TiXmlVisitor
Visit	XML/tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& \/*unknown*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitEnter	XML/tinyxml.cxx	/^bool TiXmlPrinter::VisitEnter( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter
VisitEnter	XML/tinyxml.cxx	/^bool TiXmlPrinter::VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )$/;"	f	class:TiXmlPrinter
VisitEnter	XML/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitEnter	XML/tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& \/*element*\/, const TiXmlAttribute* \/*firstAttribute*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor
VisitExit	XML/tinyxml.cxx	/^bool TiXmlPrinter::VisitExit( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter
VisitExit	XML/tinyxml.cxx	/^bool TiXmlPrinter::VisitExit( const TiXmlElement& element )$/;"	f	class:TiXmlPrinter
VisitExit	XML/tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitExit	XML/tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& \/*element*\/ )		{ return true; }$/;"	f	class:TiXmlVisitor
XML_start_line_number	Runtime_MGT/remapping_configuration_mgt.h	/^        int XML_start_line_number;$/;"	m	class:Remapping_setting
_ALGORITHM_RUNTIME_BASIS_H_	Runtime_MGT/Runtime_Algorithm_Basis.h	11;"	d
__DELAUNAY_VORONOI_H__	CoR/delaunay_voronoi.h	12;"	d
active_coupling_connections_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char active_coupling_connections_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
add_MPI_win	Runtime_MGT/inout_interface_mgt.h	/^        void add_MPI_win(MPI_Win mpi_win) { all_MPI_wins.push_back(mpi_win); }$/;"	f	class:Inout_interface_mgt
add_all_components_IO_output_procedures	Data_MGT/IO_field_mgt.cxx	/^void Components_IO_output_procedures_mgt::add_all_components_IO_output_procedures()$/;"	f	class:Components_IO_output_procedures_mgt
add_annotation	Utils/annotation_mgt.cxx	/^void Annotation_mgt::add_annotation(int object_id, const char *tag, const char *annotation)$/;"	f	class:Annotation_mgt
add_bottom_field_coupling_info	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::add_bottom_field_coupling_info(int field_connection_indx, Runtime_remapping_weights *V3D_remapping_weights, Remapping_setting *remapping_setting)$/;"	f	class:Coupling_connection
add_comp_for_external_coupling_generation	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::add_comp_for_external_coupling_generation(const char *comp_full_name, int individual_or_family, const char *annotation)$/;"	f	class:Coupling_generator
add_component_IO_output_procedures	Data_MGT/IO_field_mgt.cxx	/^void Components_IO_output_procedures_mgt::add_component_IO_output_procedures(int comp_id, const char *xml_file_name, bool synchronized_IO)$/;"	f	class:Components_IO_output_procedures_mgt
add_coupling_procedure	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::add_coupling_procedure(Connection_coupling_procedure *coupling_procedure)$/;"	f	class:Inout_interface
add_data_transfer_algorithm	Runtime_MGT/inout_interface_mgt.h	/^        void add_data_transfer_algorithm(Runtime_trans_algorithm * runtime_algorithm) { runtime_data_transfer_algorithm = runtime_algorithm; }$/;"	f	class:Connection_coupling_procedure
add_field_info	Data_MGT/field_info_mgt.cxx	/^void Field_info_mgt::add_field_info(const char *field_name, const char *field_long_name, const char *field_unit, const char *field_dim, const char *field_type, int line_number)$/;"	f	class:Field_info_mgt
add_field_src_component	Runtime_MGT/coupling_generator.cxx	/^void Import_interface_configuration::add_field_src_component(int comp_id, const char *field_name, std::pair<const char*, const char*> producer_info)$/;"	f	class:Import_interface_configuration
add_original_grid	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::add_original_grid(int comp_id, const char *grid_name, Remap_grid_class *original_CoR_grid)$/;"	f	class:Original_grid_mgt
add_partial_grid_area	CoR/remap_grid_class.cxx	/^void Remap_grid_class::add_partial_grid_area(const char *area_name)$/;"	f	class:Remap_grid_class
add_partial_grid_area_bounds	CoR/remap_grid_class.cxx	/^void Remap_grid_class::add_partial_grid_area_bounds(const char *area_name, $/;"	f	class:Remap_grid_class
add_remap_grid	CoR/remap_grid_mgt.cxx	/^void Remap_grid_mgt::add_remap_grid(Remap_grid_class *remap_grid)$/;"	f	class:Remap_grid_mgt
add_remap_operator	CoR/remap_operator_mgt.cxx	/^void Remap_operator_mgt::add_remap_operator(Remap_operator_basis *new_operator)$/;"	f	class:Remap_operator_mgt
add_remap_related_grid	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::add_remap_related_grid(std::vector<std::pair<Remap_grid_class *, bool> > &all_remap_related_grids_info, Remap_grid_class *remap_grid, bool on_dst_decomp)$/;"	f	class:Remap_weight_of_strategy_class
add_remap_strategy	CoR/remap_strategy_mgt.cxx	/^void Remap_strategy_mgt::add_remap_strategy(Remap_strategy_class *remap_strategy)$/;"	f	class:Remap_strategy_mgt
add_remap_weight_of_operator_instance	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_instance_class *Remap_weight_of_strategy_class::add_remap_weight_of_operator_instance(Remap_grid_class *field_data_grid_src, Remap_grid_class *field_data_grid_dst,$/;"	f	class:Remap_weight_of_strategy_class
add_remap_weight_of_operator_instance	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_operator_class::add_remap_weight_of_operator_instance(Remap_weight_of_operator_instance_class *operator_instance)$/;"	f	class:Remap_weight_of_operator_class
add_remap_weight_of_operator_instance	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::add_remap_weight_of_operator_instance(Remap_weight_of_operator_instance_class *weight_of_operator_instance, Remap_grid_class *field_data_grid_src, Remap_grid_class *field_data_grid_dst, Remap_operator_basis *original_remap_operator,$/;"	f	class:Remap_weight_of_strategy_class
add_remap_weight_of_operators_to_manager	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::add_remap_weight_of_operators_to_manager(bool are_parallel_remap_weights)$/;"	f	class:Remap_weight_of_strategy_class
add_remap_weight_of_strategy	CoR/remap_weight_of_strategy_mgt.cxx	/^void Remap_weight_of_strategy_mgt::add_remap_weight_of_strategy(Remap_weight_of_strategy_class *remap_weight_of_strategy)$/;"	f	class:Remap_weight_of_strategy_mgt
add_remap_weights_of_operator	CoR/remap_weight_of_strategy_class.h	/^		void add_remap_weights_of_operator(Remap_weight_of_operator_class *remap_weights_of_operator) { remap_weights_of_operators.push_back(remap_weights_of_operator); }$/;"	f	class:Remap_weight_of_strategy_class
add_remap_weights_of_operator	CoR/remap_weight_of_strategy_mgt.cxx	/^void Remap_weight_of_operator_mgt::add_remap_weights_of_operator(Remap_weight_of_operator_class *remap_weight_of_operator)$/;"	f	class:Remap_weight_of_operator_mgt
add_remap_weights_to_sparse_matrix	CoR/remap_operator_c_interface.cxx	/^void add_remap_weights_to_sparse_matrix(long *indexes_src_grid, long index_dst_grid, double *weight_values, int num_weights, int weights_group_index, bool is_real_weight)$/;"	f
add_remapping_configuration	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_configuration_mgt::add_remapping_configuration(int comp_id)$/;"	f	class:Remapping_configuration_mgt
add_remappling_fraction_processing	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::add_remappling_fraction_processing(void *frac_src, void *frac_dst, int size_frac_src, int size_frac_dst, const char *frac_data_type, const char *API_label, const char *annotation)$/;"	f	class:Inout_interface
add_restarted_field_instance	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::add_restarted_field_instance(Field_mem_info *field_instance, bool is_imported_field)$/;"	f	class:Restart_mgt
add_runtime_receive_algorithm	Runtime_MGT/inout_interface_mgt.h	/^        void add_runtime_receive_algorithm(Runtime_trans_algorithm *new_algorithm) { all_runtime_receive_algorithms.push_back(new_algorithm); }$/;"	f	class:Inout_interface_mgt
add_temp_grid	CoR/remap_grid_mgt.cxx	/^void Remap_grid_mgt::add_temp_grid(Remap_grid_class *temp_grid)$/;"	f	class:Remap_grid_mgt
add_timer	Driver/timer_mgt.cxx	/^void Timer_mgt::add_timer(Coupling_timer *timer)$/;"	f	class:Timer_mgt
add_weight_sparse_matrix	CoR/remap_operator_basis.h	/^        void add_weight_sparse_matrix(Remap_weight_sparse_matrix *sparse_matrix) { remap_weights_groups.push_back(sparse_matrix); }$/;"	f	class:Remap_operator_basis
add_weights	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::add_weights(long *indexes_src, long index_dst, double *added_weight_values, int num_added_weights, bool is_real_weight)$/;"	f	class:Remap_weight_sparse_matrix
add_wgt_file_info	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_container::add_wgt_file_info(H2D_remapping_wgt_file_info *wgt_file_info)$/;"	f	class:H2D_remapping_wgt_file_container
advance_component_time	Driver/coupling_interface.cxx	/^extern "C" void advance_component_time$/;"	f
advance_component_time	Driver/timer_mgt.cxx	/^void Components_time_mgt::advance_component_time(int comp_id, const char *annotation)$/;"	f	class:Components_time_mgt
advance_model_time	Driver/timer_mgt.cxx	/^void Time_mgt::advance_model_time(const char *annotation, bool from_external_model)$/;"	f	class:Time_mgt
advance_time	Driver/timer_mgt.cxx	/^void Time_mgt::advance_time(int &current_year, int &current_month, int &current_day, int &current_second, int &current_num_elapsed_day, int time_step_in_second)$/;"	f	class:Time_mgt
advance_time_synchronized	Driver/timer_mgt.h	/^        bool advance_time_synchronized;$/;"	m	class:Time_mgt
algorithm_cfg_name	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        char algorithm_cfg_name[NAME_STR_SIZE];$/;"	m	class:Runtime_algorithm_basis
algorithm_id	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        int algorithm_id;$/;"	m	class:Runtime_algorithm_basis
algorithm_name	Runtime_MGT/remapping_configuration_mgt.h	/^        const char *algorithm_name;$/;"	m	class:Remapping_algorithm_specification
all_H2D_remapping_wgt_files_info	Driver/global_data.cxx	/^H2D_remapping_wgt_file_container *all_H2D_remapping_wgt_files_info = NULL;$/;"	v
all_IO_connections	Runtime_MGT/coupling_generator.h	/^        std::vector<Coupling_connection*> all_IO_connections;$/;"	m	class:Coupling_generator
all_MPI_wins	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<MPI_Win> all_MPI_wins;$/;"	m	class:Inout_interface_mgt
all_comp_fullnames_for_coupling_generation	Runtime_MGT/coupling_generator.h	/^        std::vector<const char *> all_comp_fullnames_for_coupling_generation;$/;"	m	class:Coupling_generator
all_coupling_connections	Runtime_MGT/coupling_generator.h	/^        std::vector<Coupling_connection*> all_coupling_connections;$/;"	m	class:Coupling_generator
all_field_data	CoR/remap_grid_data_mgt.h	/^         std::vector<Remap_grid_data_class *> all_field_data;$/;"	m	class:Remap_field_data_mgt
all_runtime_receive_algorithms	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Runtime_trans_algorithm*> all_runtime_receive_algorithms;$/;"	m	class:Inout_interface_mgt
alloc_mem	Data_MGT/memory_mgt.cxx	/^Field_mem_info *Memory_mgt::alloc_mem(Field_mem_info *original_field_instance, int special_buf_mark, int object_id, const char *unit_or_datatype, bool check_field_name)$/;"	f	class:Memory_mgt
alloc_mem	Data_MGT/memory_mgt.cxx	/^Field_mem_info *Memory_mgt::alloc_mem(const char *field_name, int decomp_id, int comp_or_grid_id, int buf_mark, const char *data_type, const char *field_unit, const char *annotation, bool check_field_name)$/;"	f	class:Memory_mgt
allocate_1D_remap_operator_common_arrays_space	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::allocate_1D_remap_operator_common_arrays_space()$/;"	f	class:Remap_operator_1D_basis
allocate_Triangle	CoR/delaunay_voronoi.cxx	/^Triangle *Delaunay_Voronoi::allocate_Triangle(Edge *edge1, Edge *edge2, Edge *edge3)$/;"	f	class:Delaunay_Voronoi
allocate_Triangle	CoR/delaunay_voronoi.cxx	/^Triangle *Delaunay_Voronoi::allocate_Triangle(Point *point1, Point *point2, Point *point3)$/;"	f	class:Delaunay_Voronoi
allocate_basic_data_structure	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^void Runtime_algorithm_basis::allocate_basic_data_structure(int num_src_fields, int num_dst_fields)$/;"	f	class:Runtime_algorithm_basis
allocate_default_center_field	CoR/remap_grid_class.cxx	/^void Remap_grid_class::allocate_default_center_field()$/;"	f	class:Remap_grid_class
allocate_edge	CoR/delaunay_voronoi.cxx	/^Edge *Delaunay_Voronoi::allocate_edge(Point *head, Point *tail)$/;"	f	class:Delaunay_Voronoi
allocate_intermediate_V3D_grid_bottom_field	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^Field_mem_info *Runtime_remapping_weights::allocate_intermediate_V3D_grid_bottom_field()$/;"	f	class:Runtime_remapping_weights
allocate_local_arrays	CoR/remap_operator_linear.cxx	/^void Remap_operator_linear::allocate_local_arrays()$/;"	f	class:Remap_operator_linear
allocate_local_arrays	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::allocate_local_arrays()$/;"	f	class:Remap_operator_spline_1D
allocate_proc_latest_model_time	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::allocate_proc_latest_model_time()$/;"	f	class:Comp_comm_group_mgt_node
allocate_sigma_grid_specific_fields	CoR/remap_grid_class.cxx	/^void Remap_grid_class::allocate_sigma_grid_specific_fields(Remap_grid_data_class *hybrid_grid_coefficient_field, Remap_grid_data_class *sigma_grid_sigma_value_field, Remap_grid_data_class *level_V3D_coord_trigger_field, double data_top, double scale_factor)$/;"	f	class:Remap_grid_class
annoation_lookup_table	Utils/annotation_mgt.h	/^        Dictionary<const char*> *annoation_lookup_table;$/;"	m	class:Annotation_mgt
annotation_end	Parallel_MGT/compset_communicators_info_mgt.h	/^        char annotation_end[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
annotation_mgr	Driver/global_data.cxx	/^Annotation_mgt *annotation_mgr = NULL;$/;"	v
annotation_start	Parallel_MGT/compset_communicators_info_mgt.h	/^        char annotation_start[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
annotations	Utils/annotation_mgt.h	/^        std::vector<const char *> annotations;$/;"	m	class:Annotation_mgt
append	XML/tinystr.cxx	/^TiXmlString& TiXmlString::append(const char* str, size_type len)$/;"	f	class:TiXmlString
append_H2D_remapping_weights	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::append_H2D_remapping_weights(Remapping_setting *comp_remapping_setting)$/;"	f	class:Remapping_setting
append_remapping_weights	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_mgt::append_remapping_weights(H2D_remapping_wgt_file_mgt *another_mgr)$/;"	f	class:H2D_remapping_wgt_file_mgt
apply_connection_id	Runtime_MGT/coupling_generator.h	/^        int apply_connection_id() {  return (++latest_connection_id); }$/;"	f	class:Coupling_generator
apply_gather_scatter_rearrange_info	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Gather_scatter_rearrange_info *Fields_gather_scatter_mgt::apply_gather_scatter_rearrange_info(Field_mem_info *local_field)$/;"	f	class:Fields_gather_scatter_mgt
apply_restart_buffer	Data_MGT/restart_mgt.cxx	/^Restart_buffer_container *Restart_mgt::apply_restart_buffer(const char *comp_full_name, const char *buf_type, const char *keyword)$/;"	f	class:Restart_mgt
are_all_restarted_fields_read	Data_MGT/restart_mgt.h	/^        bool are_all_restarted_fields_read;$/;"	m	class:Restart_mgt
are_all_vertex_fields_specified_by_user	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::are_all_vertex_fields_specified_by_user()$/;"	f	class:Remap_grid_class
are_array_values_between_boundaries	Utils/common_utils.h	/^template <typename T> bool are_array_values_between_boundaries(const char *data_type, const T *data_array, int array_size, T lower_bound, T upper_bound, T missing_value, bool has_missing_value)$/;"	f
are_array_values_between_boundaries_kernel	Utils/common_utils.h	/^template <typename T> bool are_array_values_between_boundaries_kernel(const T *data_array, int array_size, T lower_bound, T upper_bound, T missing_value, bool has_missing_value)$/;"	f
are_floating_values_equal	Utils/common_utils.h	/^template <typename T> bool are_floating_values_equal(T value1, T value2)$/;"	f
are_the_same_sphere_points	CoR/remap_operator_c_interface.cxx	/^bool are_the_same_sphere_points(double lon_point1, double lat_point1, double lon_point2, double lat_point2)$/;"	f
are_three_points_on_the_same_line	CoR/remap_operator_bilinear.cxx	/^bool Remap_operator_bilinear::are_three_points_on_the_same_line(double *three_points_coord1_values, double *three_points_coord2_values)$/;"	f	class:Remap_operator_bilinear
are_two_coord_arrays_same	Utils/common_utils.cxx	/^bool are_two_coord_arrays_same(double *array1, double *array2, int array_size1, int array_size2)$/;"	f
are_vertex_values_set_in_default	CoR/remap_grid_class.h	/^        bool are_vertex_values_set_in_default;$/;"	m	class:Remap_grid_class
area_bound_grid	CoR/remap_grid_class.h	/^    Remap_grid_class *area_bound_grid;$/;"	m	struct:Partial_area_bound
area_bounds	CoR/remap_grid_class.h	/^    std::vector<Partial_area_bound> area_bounds;$/;"	m	struct:Partial_area
area_name	CoR/remap_grid_class.h	/^    char area_name[256];$/;"	m	struct:Partial_area
area_or_volumn	CoR/remap_grid_class.h	/^        double *area_or_volumn;$/;"	m	class:Remap_grid_class
array_alpha	CoR/remap_operator_spline_1D.h	/^        double *array_alpha;$/;"	m	class:Remap_operator_spline_1D
array_d	CoR/remap_operator_spline_1D.h	/^        double *array_d;$/;"	m	class:Remap_operator_spline_1D
array_h	CoR/remap_operator_spline_1D.h	/^        double *array_h;$/;"	m	class:Remap_operator_spline_1D
array_lambda	CoR/remap_operator_spline_1D.h	/^        double *array_lambda;$/;"	m	class:Remap_operator_spline_1D
array_mu	CoR/remap_operator_spline_1D.h	/^        double *array_mu;$/;"	m	class:Remap_operator_spline_1D
array_size_src	CoR/remap_operator_1D_basis.h	/^        int array_size_src;$/;"	m	class:Remap_operator_1D_basis
arrays_division_template	Utils/common_utils.h	/^template <typename T1, typename T2, typename T3> void arrays_division_template(T1 *src_array, T2 *divisor, T3 *dst_array, int array_size)$/;"	f
arrays_multiplication_template	Utils/common_utils.h	/^template <typename T1, typename T2, typename T3> void arrays_multiplication_template(T1 *src_array1, T2 *src_array2, T3 *dst_array, int array_size)$/;"	f
assign	XML/tinystr.cxx	/^TiXmlString& TiXmlString::assign(const char* str, size_type len)$/;"	f	class:TiXmlString
at	XML/tinystr.h	/^	const char& at (size_type index) const$/;"	f	class:TiXmlString
attributeSet	XML/tinyxml.h	/^	TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlElement
attribute_name	CoR/remap_statement_operand.h	/^    char attribute_name[256];$/;"	m	struct:Remap_field_attribute
attribute_size	CoR/remap_statement_operand.h	/^    unsigned long attribute_size;$/;"	m	struct:Remap_field_attribute
attribute_type	CoR/remap_statement_operand.h	/^    char attribute_type[256];$/;"	m	struct:Remap_field_attribute
attribute_value	CoR/remap_statement_operand.h	/^    char attribute_value[8192];$/;"	m	struct:Remap_field_attribute
average_mark	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        bool *average_mark;$/;"	m	class:Runtime_algorithm_basis
backup_restart_write_data_file	Data_MGT/restart_mgt.h	/^        IO_netcdf *backup_restart_write_data_file;$/;"	m	class:Restart_mgt
base_field_value	CoR/remap_operator_1D_basis.h	/^        double base_field_value;$/;"	m	class:Remap_operator_1D_basis
bcast_array_in_one_comp	Driver/CCPL_api_mgt.cxx	/^void bcast_array_in_one_comp(int current_proc_local_id, char **array, long &array_size, MPI_Comm comm)$/;"	f
begin_external_coupling_generation	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::begin_external_coupling_generation()$/;"	f	class:Coupling_generator
bilinear_one_ratio_solution_of_quadratic_equation	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::bilinear_one_ratio_solution_of_quadratic_equation(double *dst_point_coord_values, $/;"	f	class:Remap_operator_bilinear
bilinear_ratios_solution1	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::bilinear_ratios_solution1(double *dst_point_coord_values, $/;"	f	class:Remap_operator_bilinear
bilinear_ratios_solution2	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::bilinear_ratios_solution2(double *dst_point_coord_values, $/;"	f	class:Remap_operator_bilinear
bottom_field_id	Data_MGT/original_grid_mgt.h	/^        int bottom_field_id;$/;"	m	class:Original_grid_info
bottom_field_indx	Runtime_MGT/coupling_generator.h	/^    int bottom_field_indx;$/;"	m	struct:Interface_field_info
bottom_field_inst	Runtime_MGT/coupling_generator.h	/^    Field_mem_info *bottom_field_inst;$/;"	m	struct:V3D_grid_bottom_field_coupling_info
bottom_field_name	Data_MGT/original_grid_mgt.h	/^        const char *bottom_field_name;$/;"	m	class:Original_grid_info
bottom_field_variation_type	Data_MGT/original_grid_mgt.h	/^        int bottom_field_variation_type;   \/\/ 0: static; 1: dynamic; 2: external$/;"	m	class:Original_grid_info
bound_end	CoR/remap_grid_class.h	/^    double bound_end;$/;"	m	struct:Partial_area_bound
bound_start	CoR/remap_grid_class.h	/^    double bound_start;$/;"	m	struct:Partial_area_bound
bound_type	CoR/remap_grid_class.h	/^    char bound_type[256];$/;"	m	struct:Partial_area_bound
boundary_max_lat	CoR/remap_grid_class.h	/^        double boundary_max_lat;$/;"	m	class:Remap_grid_class
boundary_max_lon	CoR/remap_grid_class.h	/^        double boundary_max_lon;$/;"	m	class:Remap_grid_class
boundary_min_lat	CoR/remap_grid_class.h	/^        double boundary_min_lat;$/;"	m	class:Remap_grid_class
boundary_min_lon	CoR/remap_grid_class.h	/^        double boundary_min_lon;$/;"	m	class:Remap_grid_class
bounding_circle_center_lat	CoR/grid_cell_search.h	/^        double bounding_circle_center_lat;$/;"	m	class:H2D_grid_cell_search_cell
bounding_circle_center_lon	CoR/grid_cell_search.h	/^        double bounding_circle_center_lon;$/;"	m	class:H2D_grid_cell_search_cell
bounding_circle_radius	CoR/grid_cell_search.h	/^        double bounding_circle_radius;$/;"	m	class:H2D_grid_cell_search_cell
buf_mark	Data_MGT/memory_mgt.h	/^        int buf_mark;$/;"	m	class:Field_mem_info
buf_marks	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        int *buf_marks;$/;"	m	class:Runtime_algorithm_basis
buf_type	Data_MGT/restart_mgt.h	/^        char buf_type[NAME_STR_SIZE];$/;"	m	class:Restart_buffer_container
buffer	XML/tinyxml.h	/^	TIXML_STRING buffer;$/;"	m	class:TiXmlPrinter
buffer_content	Data_MGT/restart_mgt.h	/^        char *buffer_content;$/;"	m	class:Restart_buffer_container
buffer_content_iter	Data_MGT/restart_mgt.h	/^        long buffer_content_iter;$/;"	m	class:Restart_buffer_container
buffer_content_iter	Parallel_MGT/compset_communicators_info_mgt.h	/^        long buffer_content_iter;$/;"	m	class:Comp_comm_group_mgt_node
buffer_content_size	Data_MGT/restart_mgt.h	/^        long buffer_content_size;$/;"	m	class:Restart_buffer_container
buffer_content_size	Parallel_MGT/compset_communicators_info_mgt.h	/^        long buffer_content_size;$/;"	m	class:Comp_comm_group_mgt_node
buffer_max_size	Data_MGT/restart_mgt.h	/^        long buffer_max_size;$/;"	m	class:Restart_buffer_container
buffer_max_size	Parallel_MGT/compset_communicators_info_mgt.h	/^        long buffer_max_size;$/;"	m	class:Comp_comm_group_mgt_node
build_2D_router	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::build_2D_router()$/;"	f	class:Routing_info
build_restart_timer	Driver/timer_mgt.cxx	/^void Time_mgt::build_restart_timer()$/;"	f	class:Time_mgt
build_router_based_on_routing_mapping_tables	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::build_router_based_on_routing_mapping_tables()$/;"	f	class:Routing_info
bypass_counter	Runtime_MGT/inout_interface_mgt.h	/^        long bypass_counter;$/;"	m	class:Inout_interface
bypass_counter	Runtime_MGT/runtime_trans_algorithm.h	/^        int bypass_counter;$/;"	m	class:Runtime_trans_algorithm
bypass_import_fields_at_read	Data_MGT/restart_mgt.h	/^        bool bypass_import_fields_at_read;$/;"	m	class:Restart_mgt
bypass_import_fields_at_write	Data_MGT/restart_mgt.h	/^        bool bypass_import_fields_at_write;$/;"	m	class:Restart_mgt
c_str	XML/tinystr.h	/^	const char * c_str () const { return rep_->str; }$/;"	f	class:TiXmlString
calc_src_decomp	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::calc_src_decomp(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_weight_sparse_matrix
calculate_area_of_sphere_grid	CoR/remap_grid_class.cxx	/^void Remap_grid_class::calculate_area_of_sphere_grid() $/;"	f	class:Remap_grid_class
calculate_area_or_volumn	CoR/remap_grid_class.cxx	/^void Remap_grid_class::calculate_area_or_volumn()$/;"	f	class:Remap_grid_class
calculate_checksum	Runtime_MGT/remapping_configuration_mgt.cxx	/^long Remapping_setting::calculate_checksum()$/;"	f	class:Remapping_setting
calculate_checksum_of_array	Driver/CCPL_api_mgt.cxx	/^long calculate_checksum_of_array(const char *data_array, int array_size, int data_type_size, const char *original_data_type, const char *new_data_type)$/;"	f
calculate_distance	CoR/delaunay_voronoi.cxx	/^double Point::calculate_distance(const Point *pt) const$/;"	f	class:Point
calculate_distance_of_two_points_2D	CoR/remap_utils_nearest_points.cxx	/^double calculate_distance_of_two_points_2D(double point1_coord1_value,$/;"	f
calculate_dst_src_mapping_info	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::calculate_dst_src_mapping_info()$/;"	f	class:Remap_operator_1D_basis
calculate_elapsed_day	Driver/timer_mgt.cxx	/^long Time_mgt::calculate_elapsed_day(int year, int month, int day)$/;"	f	class:Time_mgt
calculate_field_conservative_sum	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::calculate_field_conservative_sum(Field_mem_info *area_field)$/;"	f	class:Field_mem_info
calculate_grids_overlaping	CoR/remap_operator_basis.cxx	/^void Remap_operator_basis::calculate_grids_overlaping()$/;"	f	class:Remap_operator_basis
calculate_lev_sigma_values	CoR/remap_grid_class.cxx	/^void Remap_grid_class::calculate_lev_sigma_values()$/;"	f	class:Remap_grid_class
calculate_max_power2	Parallel_MGT/routing_info_mgt.cxx	/^int Routing_info::calculate_max_power2(int origin_num_procs)$/;"	f	class:Routing_info
calculate_min_max_H2D_coord_value	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::calculate_min_max_H2D_coord_value(int comp_id, char *center_coord, char *vertex_coord, int size_center_coord, int size_vertex_coord, const char *data_type, double &min_coord_value, double &max_coord_value)$/;"	f	class:Original_grid_mgt
calculate_min_max_grid_index	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::calculate_min_max_grid_index(int num_grid_cells, int min_proc_id, int max_proc_id, int ref_proc_num, int proc_scale_factor, int* min_grid_index, int* max_grid_index)$/;"	f	class:Routing_info
calculate_remap_weights	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::calculate_remap_weights()$/;"	f	class:Remap_operator_bilinear
calculate_remap_weights	CoR/remap_operator_conserv_2D.cxx	/^void Remap_operator_conserv_2D::calculate_remap_weights()$/;"	f	class:Remap_operator_conserv_2D
calculate_remap_weights	CoR/remap_operator_distwgt.cxx	/^void Remap_operator_distwgt::calculate_remap_weights()$/;"	f	class:Remap_operator_distwgt
calculate_remap_weights	CoR/remap_operator_linear.cxx	/^void Remap_operator_linear::calculate_remap_weights()$/;"	f	class:Remap_operator_linear
calculate_remap_weights	CoR/remap_operator_regrid.cxx	/^void Remap_operator_regrid::calculate_remap_weights()$/;"	f	class:Remap_operator_regrid
calculate_remap_weights	CoR/remap_operator_smooth.cxx	/^void Remap_operator_smooth::calculate_remap_weights()$/;"	f	class:Remap_operator_smooth
calculate_remap_weights	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::calculate_remap_weights()$/;"	f	class:Remap_operator_spline_1D
calculate_remapping_weights	CoR/remap_strategy_class.cxx	/^void Remap_strategy_class::calculate_remapping_weights(Remap_weight_of_strategy_class *remap_weight_of_strategy, const char *H2D_remapping_wgt_file, int wgt_cal_wgt_id)$/;"	f	class:Remap_strategy_class
calculate_routing_mapping_tables	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::calculate_routing_mapping_tables()$/;"	f	class:Routing_info
calculate_src_decomp	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_operator_class::calculate_src_decomp(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_weight_of_operator_class
calculate_src_decomp	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::calculate_src_decomp(Remap_grid_class *grid_src, Remap_grid_class *grid_dst, long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_weight_of_strategy_class
calculate_static_remapping_weights	CoR/runtime_remap_function.cxx	/^void Runtime_remap_function::calculate_static_remapping_weights(long current_remapping_time_iter, const char *H2D_remapping_wgt_file, int wgt_cal_comp_id, bool outer_mask)$/;"	f	class:Runtime_remap_function
calculate_stop_time	Driver/timer_mgt.cxx	/^void Time_mgt::calculate_stop_time(int start_year, int start_month, int start_day, int start_second)$/;"	f	class:Time_mgt
capacity	XML/tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep
capacity	XML/tinystr.h	/^	size_type capacity () const { return rep_->capacity; }$/;"	f	class:TiXmlString
cartesian_coord	CoR/grid_cell_search.h	/^        H2D_grid_cell_cartesian_coord *cartesian_coord;$/;"	m	class:H2D_grid_cell_search_cell
case_desc	Driver/timer_mgt.h	/^        char case_desc[NAME_STR_SIZE];$/;"	m	class:Time_mgt
case_name	Driver/timer_mgt.h	/^        char case_name[NAME_STR_SIZE];$/;"	m	class:Time_mgt
ccpl_add_comp_for_external_coupling_generation	Driver/coupling_interface.cxx	/^extern "C" void ccpl_add_comp_for_external_coupling_generation$/;"	f
ccpl_begin_external_coupling_generation	Driver/coupling_interface.cxx	/^extern "C" void ccpl_begin_external_coupling_generation$/;"	f
ccpl_end_external_coupling_generation	Driver/coupling_interface.cxx	/^extern "C" void ccpl_end_external_coupling_generation$/;"	f
ccpl_end_registration	Driver/coupling_interface.cxx	/^extern "C" void ccpl_end_registration$/;"	f
ccpl_family_coupling_generation	Driver/coupling_interface.cxx	/^extern "C" void ccpl_family_coupling_generation$/;"	f
ccpl_finish_getting_configurable_comps_full_names	Driver/coupling_interface.cxx	/^extern "C" void ccpl_finish_getting_configurable_comps_full_names$/;"	f
ccpl_get_one_comp_full_name	Driver/coupling_interface.cxx	/^extern "C" void ccpl_get_one_comp_full_name$/;"	f
ccpl_individual_coupling_generation	Driver/coupling_interface.cxx	/^extern "C" void ccpl_individual_coupling_generation$/;"	f
ccpl_load_comps_full_names_from_config_file	Driver/coupling_interface.cxx	/^extern "C" void ccpl_load_comps_full_names_from_config_file$/;"	f
ccpl_read_all_restart_fields	Driver/coupling_interface.cxx	/^extern "C" void ccpl_read_all_restart_fields$/;"	f
ccpl_read_import_interface_restart_fields	Driver/coupling_interface.cxx	/^extern "C" void ccpl_read_import_interface_restart_fields$/;"	f
ccpl_read_restart	Driver/coupling_interface.cxx	/^extern "C" void ccpl_read_restart$/;"	f
ccpl_report	Driver/coupling_interface.cxx	/^extern "C" void ccpl_report$/;"	f
ccpl_write_restart	Driver/coupling_interface.cxx	/^extern "C" void ccpl_write_restart$/;"	f
cdata	XML/tinyxml.h	/^	bool cdata;			\/\/ true if this should be input and output as a CDATA style text element$/;"	m	class:TiXmlText
cell_index	CoR/grid_cell_search.h	/^        int cell_index;$/;"	m	class:H2D_grid_cell_search_cell
cell_visiting_mark	CoR/remap_operator_grid.h	/^        bool *cell_visiting_mark;$/;"	m	class:Remap_operator_grid
cells	CoR/delaunay_voronoi.h	/^        Cell *cells;$/;"	m	class:Delaunay_Voronoi
cells	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_cell **cells;$/;"	m	class:H2D_grid_cell_search_engine
cells	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_cell **cells;$/;"	m	class:H2D_grid_cell_search_tile
cells_buffer	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_cell **cells_buffer;$/;"	m	class:H2D_grid_cell_search_engine
cells_buffer	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_cell **cells_buffer;$/;"	m	class:H2D_grid_cell_search_tile
cells_indexes_dst	CoR/remap_weight_sparse_matrix.h	/^        long *cells_indexes_dst;$/;"	m	class:Remap_weight_sparse_matrix
cells_indexes_src	CoR/remap_weight_sparse_matrix.h	/^        long *cells_indexes_src;$/;"	m	class:Remap_weight_sparse_matrix
cells_ptr	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_cell **cells_ptr;$/;"	m	class:H2D_grid_cell_search_engine
center	CoR/delaunay_voronoi.h	/^        Point center;    \/* circumcenter *\/$/;"	m	class:Triangle
center	CoR/delaunay_voronoi.h	/^    Point *center;$/;"	m	struct:Cell
center_coord_values	CoR/remap_operator_grid.h	/^        double *center_coord_values[256];$/;"	m	class:Remap_operator_grid
center_lat	CoR/grid_cell_search.h	/^        double center_lat;$/;"	m	class:H2D_grid_cell_search_cell
center_lat	CoR/grid_cell_search.h	/^        double center_lat;$/;"	m	class:H2D_grid_cell_search_tile
center_lon	CoR/grid_cell_search.h	/^        double center_lon;$/;"	m	class:H2D_grid_cell_search_cell
center_lon	CoR/grid_cell_search.h	/^        double center_lon;$/;"	m	class:H2D_grid_cell_search_tile
center_x	CoR/grid_cell_search.h	/^        double center_x;$/;"	m	struct:H2D_grid_cell_cartesian_coord
center_y	CoR/grid_cell_search.h	/^        double center_y;$/;"	m	struct:H2D_grid_cell_cartesian_coord
center_z	CoR/grid_cell_search.h	/^        double center_z;$/;"	m	struct:H2D_grid_cell_cartesian_coord
change_datatype_in_application	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::change_datatype_in_application(const char* new_datatype)$/;"	f	class:Remap_grid_data_class
change_datatype_to_double	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::change_datatype_to_double()$/;"	f	class:Field_mem_info
change_remap_operator_info	CoR/remap_operator_basis.cxx	/^void Remap_operator_basis::change_remap_operator_info(const char *operator_name, Remap_grid_class *grid_src, Remap_grid_class *grid_dst)$/;"	f	class:Remap_operator_basis
check_API_parameter_bool	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_bool(int comp_id, int API_id, MPI_Comm comm, const char *hint, bool value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_data_array	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_data_array(int comp_id, int API_id, MPI_Comm comm, const char *hint, int array_size, int data_type_size, const char *array_value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_double	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_double(int comp_id, int API_id, MPI_Comm comm, const char *hint, double value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_field_instance	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_field_instance(int comp_id, int API_id, MPI_Comm comm, const char *hint, int field_id, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_float	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_float(int comp_id, int API_id, MPI_Comm comm, const char *hint, float value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_int	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_int(int comp_id, int API_id, MPI_Comm comm, const char *hint, int value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_long	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_long(int comp_id, int API_id, MPI_Comm comm, const char *hint, long value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_scalar	Driver/CCPL_api_mgt.cxx	/^template <class T> void check_API_parameter_scalar(int comp_id, int API_id, MPI_Comm comm, const char *hint, T value, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_string	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_string(int comp_id, int API_id, MPI_Comm comm, const char *hint, const char *string, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_string_length	Utils/common_utils.cxx	/^void check_API_parameter_string_length(int comp_id, int API_ID, int str_max_size, const char *str, const char *parameter_name, const char *annotation)$/;"	f
check_API_parameter_timer	Driver/CCPL_api_mgt.cxx	/^void check_API_parameter_timer(int comp_id, int API_id, MPI_Comm comm, const char *hint, int timer_id, const char *parameter_name, const char *annotation)$/;"	f
check_CCPL_Fortran_API_int_type_I2	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE check_CCPL_Fortran_API_int_type_I2(/;"	s	module:CCPL_interface_mod
check_CCPL_Fortran_API_int_type_I4	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE check_CCPL_Fortran_API_int_type_I4(/;"	s	module:CCPL_interface_mod
check_CCPL_Fortran_API_int_type_I8	Driver/c_coupler_interface_mod.F90	/^   SUBROUTINE check_CCPL_Fortran_API_int_type_I8(/;"	s	module:CCPL_interface_mod
check_XML_attribute_value_string_length	Utils/common_utils.cxx	/^void check_XML_attribute_value_string_length(int comp_id, int str_max_size, const char *XML_attribute, const char *XML_value, const char *XML_file_name, int line_number)$/;"	f
check_and_aggregate_local_grid_data	Driver/CCPL_api_mgt.cxx	/^char *check_and_aggregate_local_grid_data(int comp_id, int API_id, MPI_Comm comm, const char *hint, int grid_size, int array_size, int data_type_size, char *array_value, $/;"	f
check_and_set_first_super_grid_of_enable_setting_coord_value	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_and_set_first_super_grid_of_enable_setting_coord_value(Remap_grid_class *super_grid)$/;"	f	class:Remap_grid_class
check_and_set_twin_edge_relationship	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::check_and_set_twin_edge_relationship(vector<Triangle*> *triangles)$/;"	f	class:Delaunay_Voronoi
check_and_set_twin_edge_relationship	CoR/delaunay_voronoi.cxx	/^void Triangle::check_and_set_twin_edge_relationship(Triangle *another_triangle)$/;"	f	class:Triangle
check_and_verify_name_format_of_string	Driver/CCPL_api_mgt.cxx	/^bool check_and_verify_name_format_of_string(const char *string)$/;"	f
check_and_verify_name_format_of_string_for_API	Driver/CCPL_api_mgt.cxx	/^void check_and_verify_name_format_of_string_for_API(int comp_id, const char *string, int API_id, const char *name_owner, const char *annotation)$/;"	f
check_and_verify_name_format_of_string_for_XML	Driver/CCPL_api_mgt.cxx	/^void check_and_verify_name_format_of_string_for_XML(int comp_id, const char *string, const char *name_owner, const char *XML_file_name, int line_number)$/;"	f
check_application_io_datatype_consistency	CoR/cor_global_data.cxx	/^void check_application_io_datatype_consistency(const char *field_name, const char *datatype_application, const char *datatype_io)$/;"	f
check_ccpl_component_current_time	Driver/coupling_interface.cxx	/^extern "C" void check_ccpl_component_current_time$/;"	f
check_center_coord_value_can_be_set	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_center_coord_value_can_be_set(const char *coord_label)$/;"	f	class:Remap_grid_class
check_center_fields_sorting_order	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_center_fields_sorting_order()$/;"	f	class:Remap_grid_class
check_center_vertex_values_consistency_2D	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_center_vertex_values_consistency_2D()$/;"	f	class:Remap_grid_class
check_common_parameter	CoR/remap_operator_1D_basis.cxx	/^int Remap_operator_1D_basis::check_common_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_1D_basis
check_component_current_time	Driver/timer_mgt.cxx	/^void Components_time_mgt::check_component_current_time(int comp_id, int date, int second, const char *annotation)$/;"	f	class:Components_time_mgt
check_consistency_of_current_time	Driver/timer_mgt.cxx	/^void Time_mgt::check_consistency_of_current_time(int date, int second, const char *annotation)$/;"	f	class:Time_mgt
check_coord_values_consistency	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::check_coord_values_consistency(const char *coord_label, const char *data_type, const void *coord_values_model)$/;"	f	class:Remap_grid_class
check_coord_values_range	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_coord_values_range() const$/;"	f	class:Remap_grid_class
check_dimension_order_of_grid_field	CoR/runtime_remap_function.cxx	/^void Runtime_remap_function::check_dimension_order_of_grid_field(Remap_grid_data_class *grid_data, Remap_grid_class *remap_grid)$/;"	f	class:Runtime_remap_function
check_field_data_grid_center_values_for_remapping	CoR/remap_strategy_class.cxx	/^void Remap_strategy_class::check_field_data_grid_center_values_for_remapping(Remap_grid_class *field_data_grid, Remap_grid_class *remap_operator_grid, bool is_remap_operator_regriding)$/;"	f	class:Remap_strategy_class
check_field_sum	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::check_field_sum(const char *hint)$/;"	f	class:Field_mem_info
check_for_ccpl_managers_allocated	Utils/common_utils.cxx	/^void check_for_ccpl_managers_allocated(int API_ID, const char *annotation)$/;"	f
check_for_component_registered	Driver/coupling_interface.cxx	/^void check_for_component_registered(int comp_id, int API_ID, const char *annotation, bool enable_minus_1)$/;"	f
check_for_coupling_registration_stage	Utils/common_utils.cxx	/^void check_for_coupling_registration_stage(int comp_id, int API_ID, bool require_real_model, const char *annotation)$/;"	f
check_for_registering_IO_field	Data_MGT/IO_field_mgt.cxx	/^void IO_field_mgt::check_for_registering_IO_field(IO_field *new_IO_field, const char *annotation, int API_id)$/;"	f	class:IO_field_mgt
check_fortran_api_int_type	Driver/coupling_interface.cxx	/^extern "C" void check_fortran_api_int_type$/;"	f
check_grid_field_can_be_set	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_grid_field_can_be_set()$/;"	f	class:Remap_grid_class
check_is_ccpl_import_field_connected	Driver/coupling_interface.cxx	/^extern "C" void check_is_ccpl_import_field_connected$/;"	f
check_is_ccpl_model_last_step	Driver/coupling_interface.cxx	/^extern "C" void check_is_ccpl_model_last_step$/;"	f
check_is_ccpl_model_run_ended	Driver/coupling_interface.cxx	/^extern "C" void check_is_ccpl_model_run_ended$/;"	f
check_is_comp_type_coupled	Driver/coupling_interface.cxx	/^extern "C" void check_is_comp_type_coupled$/;"	f
check_is_coupled_run_restart_time	Driver/timer_mgt.cxx	/^bool Time_mgt::check_is_coupled_run_restart_time()$/;"	f	class:Time_mgt
check_is_field_active	Data_MGT/memory_mgt.h	/^        bool check_is_field_active() { return is_field_active; }$/;"	f	class:Field_mem_info
check_is_import_field_connected	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface::check_is_import_field_connected(int field_instance_id, const char *annotation)$/;"	f	class:Inout_interface
check_is_legal_field_instance_id	Data_MGT/memory_mgt.cxx	/^bool Memory_mgt::check_is_legal_field_instance_id(int field_instance_id)$/;"	f	class:Memory_mgt
check_is_legal_timer_id	Driver/timer_mgt.cxx	/^bool Timer_mgt::check_is_legal_timer_id(int timer_id)$/;"	f	class:Timer_mgt
check_is_model_run_finished	Driver/timer_mgt.cxx	/^bool Time_mgt::check_is_model_run_finished()$/;"	f	class:Time_mgt
check_is_parameter_a_certain_grid_field	CoR/syntax_check.cxx	/^void check_is_parameter_a_certain_grid_field(const char *function, Remap_statement_operand *operand, const char *grid_field_label, const char *annotation)$/;"	f
check_is_parameter_grid_boundary	CoR/syntax_check.cxx	/^void check_is_parameter_grid_boundary(const char *function, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_grid_center_field	CoR/syntax_check.cxx	/^void check_is_parameter_grid_center_field(const char *function, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_grid_field	CoR/syntax_check.cxx	/^void check_is_parameter_grid_field(const char *function, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_grid_mask_field	CoR/syntax_check.cxx	/^void check_is_parameter_grid_mask_field(const char *function, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_object_type_IO	CoR/syntax_check.cxx	/^void check_is_parameter_object_type_IO(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_object_type_field_data	CoR/syntax_check.cxx	/^void check_is_parameter_object_type_field_data(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_object_type_grid	CoR/syntax_check.cxx	/^void check_is_parameter_object_type_grid(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_object_type_remap_operator	CoR/syntax_check.cxx	/^void check_is_parameter_object_type_remap_operator(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_object_type_remap_scheme	CoR/syntax_check.cxx	/^void check_is_parameter_object_type_remap_scheme(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_object_type_remap_weights	CoR/syntax_check.cxx	/^void check_is_parameter_object_type_remap_weights(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_parameter_string_type	CoR/syntax_check.cxx	/^void check_is_parameter_string_type(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
check_is_time_legal	Driver/timer_mgt.cxx	/^bool Time_mgt::check_is_time_legal(int year, int month, int day, int second, const char *report_label)$/;"	f	class:Time_mgt
check_local_cell_global_indx	Parallel_MGT/decomp_info_mgt.cxx	/^void Decomp_info::check_local_cell_global_indx()$/;"	f	class:Decomp_info
check_mask_value_can_be_set	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_mask_value_can_be_set()$/;"	f	class:Remap_grid_class
check_mask_values_consitency	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::check_mask_values_consitency(const char *data_type, const void*mask_values_model)$/;"	f	class:Remap_grid_class
check_mask_values_status	CoR/runtime_remap_function.cxx	/^bool Runtime_remap_function::check_mask_values_status(bool *last_mask_values, bool *current_mask_values, long grid_size)$/;"	f	class:Runtime_remap_function
check_operator_parameter	CoR/remap_operator_mgt.cxx	/^int Remap_operator_mgt::check_operator_parameter(const char *operator_name, const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_mgt
check_overlapping	CoR/grid_cell_search.cxx	/^bool H2D_grid_cell_search_cell::check_overlapping(const H2D_grid_cell_search_cell *src_cell, bool accurately_match) const$/;"	f	class:H2D_grid_cell_search_cell
check_parameter	CoR/remap_operator_bilinear.cxx	/^int Remap_operator_bilinear::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_bilinear
check_parameter	CoR/remap_operator_conserv_2D.cxx	/^int Remap_operator_conserv_2D::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_conserv_2D
check_parameter	CoR/remap_operator_distwgt.cxx	/^int Remap_operator_distwgt::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_distwgt
check_parameter	CoR/remap_operator_linear.cxx	/^int Remap_operator_linear::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_linear
check_parameter	CoR/remap_operator_regrid.cxx	/^int Remap_operator_regrid::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_regrid
check_parameter	CoR/remap_operator_smooth.cxx	/^int Remap_operator_smooth::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_smooth
check_parameter	CoR/remap_operator_spline_1D.cxx	/^int Remap_operator_spline_1D::check_parameter(const char *parameter_name, const char *parameter_value, char *error_string)$/;"	f	class:Remap_operator_spline_1D
check_parameter_object_type	CoR/syntax_check.cxx	/^void check_parameter_object_type(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation, const char *object_type)$/;"	f
check_possible_overlapping	CoR/grid_cell_search.cxx	/^bool H2D_grid_cell_search_cell::check_possible_overlapping(const H2D_grid_cell_search_cell *src_cell) const$/;"	f	class:H2D_grid_cell_search_cell
check_remap_weights_format	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::check_remap_weights_format()$/;"	f	class:Remap_weight_of_strategy_class
check_restart_read_started	Data_MGT/restart_mgt.cxx	/^bool Restart_mgt::check_restart_read_started()$/;"	f	class:Restart_mgt
check_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::check_routing_mapping_table_entries(routing_mapping_table_entry *routing_mapping_table_entries, int num_local_routing_mapping_table_entries, int min_key_value, int max_key_value, char* hint)$/;"	f	class:Routing_info
check_sum_of_all_fields	Data_MGT/memory_mgt.cxx	/^void Memory_mgt::check_sum_of_all_fields()$/;"	f	class:Memory_mgt
check_time_consistency_between_components	Driver/timer_mgt.cxx	/^bool Time_mgt::check_time_consistency_between_components(long full_time)$/;"	f	class:Time_mgt
check_timer_format	Driver/timer_mgt.cxx	/^void Coupling_timer::check_timer_format()$/;"	f	class:Coupling_timer
check_timer_format	Driver/timer_mgt.cxx	/^void Time_mgt::check_timer_format(const char *frequency_unit, int frequency_count, int local_lag_count, int remote_lag_count, bool check_value, const char *annotation)$/;"	f	class:Time_mgt
check_timing_unit	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_unit::check_timing_unit(int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword)$/;"	f	class:Performance_timing_unit
check_validation	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::check_validation()$/;"	f	class:Comp_comm_group_mgt_mgr
check_vertex_coord_value_can_be_set	CoR/remap_grid_class.cxx	/^void Remap_grid_class::check_vertex_coord_value_can_be_set(const char *coord_label)$/;"	f	class:Remap_grid_class
check_vertex_fields_completeness	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::check_vertex_fields_completeness(Remap_operator_basis *remap_operator)$/;"	f	class:Remap_grid_class
checksum_H2D_mask	Data_MGT/original_grid_mgt.h	/^        long checksum_H2D_mask;$/;"	m	class:Original_grid_info
checksum_dst_mask	Runtime_MGT/remapping_configuration_mgt.h	/^        long checksum_dst_mask;$/;"	m	class:H2D_remapping_wgt_file_info
checksum_src_mask	Runtime_MGT/remapping_configuration_mgt.h	/^        long checksum_src_mask;$/;"	m	class:H2D_remapping_wgt_file_info
children	CoR/delaunay_voronoi.h	/^        vector<Triangle*> children;$/;"	m	class:Triangle
children	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_tile *children[TILE_DIVIDE_FACTOR*TILE_DIVIDE_FACTOR];$/;"	m	class:H2D_grid_cell_search_tile
children	Driver/timer_mgt.h	/^        std::vector<Coupling_timer*> children;$/;"	m	class:Coupling_timer
children	Parallel_MGT/compset_communicators_info_mgt.h	/^        std::vector<Comp_comm_group_mgt_node*> children;$/;"	m	class:Comp_comm_group_mgt_node
children_interfaces	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Inout_interface *> children_interfaces;           \/\/ only for remap interface $/;"	m	class:Inout_interface
chr	XML/tinyxml.h	/^		char		    chr;$/;"	m	struct:TiXmlBase::Entity
circle_radius	CoR/grid_cell_search.h	/^        double circle_radius;$/;"	m	class:H2D_grid_cell_search_tile
clean	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::clean(bool is_write_buffers)$/;"	f	class:Restart_mgt
clean	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_info::clean()$/;"	f	class:H2D_remapping_wgt_file_info
clean	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_algorithm_specification::clean()$/;"	f	class:Remapping_algorithm_specification
clean	Runtime_MGT/remapping_configuration_mgt.h	/^        void clean() { H2D_remapping_wgt_files.clear(); }$/;"	f	class:H2D_remapping_wgt_file_mgt
clean_fill_value	CoR/remap_statement_operand.cxx	/^void Remap_data_field::clean_fill_value()$/;"	f	class:Remap_data_field
clean_scale_factor_and_add_offset_info	CoR/remap_statement_operand.cxx	/^void Remap_data_field::clean_scale_factor_and_add_offset_info()$/;"	f	class:Remap_data_field
clean_string_pair_vector	Runtime_MGT/coupling_generator.cxx	/^void clean_string_pair_vector(std::vector< std::pair<const char*, const char *> > &string_pair_vector)$/;"	f
clear	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::clear()$/;"	f	class:Coupling_generator
clear	XML/tinystr.h	/^	void clear ()$/;"	f	class:TiXmlString
clear_cell_visiting_info	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::clear_cell_visiting_info()$/;"	f	class:Remap_operator_grid
clear_remap_weight_info_in_sparse_matrix	CoR/remap_operator_c_interface.cxx	/^void clear_remap_weight_info_in_sparse_matrix()$/;"	f
clear_src_grid_cell_visiting_info	CoR/remap_operator_c_interface.cxx	/^void clear_src_grid_cell_visiting_info()$/;"	f
clear_weights_info	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::clear_weights_info()$/;"	f	class:Remap_weight_sparse_matrix
clone	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_mgt *H2D_remapping_wgt_file_mgt::clone()$/;"	f	class:H2D_remapping_wgt_file_mgt
clone	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_algorithm_specification *Remapping_algorithm_specification::clone()$/;"	f	class:Remapping_algorithm_specification
clone	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_setting *Remapping_setting::clone()$/;"	f	class:Remapping_setting
clone_parent_comp_time_mgr	Driver/timer_mgt.cxx	/^void Components_time_mgt::clone_parent_comp_time_mgr(int comp_id, int parent_comp_id, const char *annotation)$/;"	f	class:Components_time_mgt
clone_time_mgr	Driver/timer_mgt.cxx	/^Time_mgt *Time_mgt::clone_time_mgr(int comp_id)$/;"	f	class:Time_mgt
col	XML/tinyxml.h	/^	int col;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor
comm_group	Parallel_MGT/compset_communicators_info_mgt.h	/^        MPI_Comm comm_group;$/;"	m	class:Comp_comm_group_mgt_node
comm_tag	Runtime_MGT/runtime_trans_algorithm.h	/^        int comm_tag;$/;"	m	class:Runtime_trans_algorithm
common_buffer_for_1D_remap_operator	CoR/remap_operator_1D_basis.cxx	/^double *common_buffer_for_1D_remap_operator = NULL;$/;"	v
common_checking_for_H2D_registration_via_data	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::common_checking_for_H2D_registration_via_data(int comp_id, const char *grid_name, const char *edge_type, const char *coord_unit, char *cyclic_or_acyclic, const char *data_type, int size_mask, int size_center_lon, $/;"	f	class:Original_grid_mgt
common_checking_for_grid_registration	Utils/common_utils.cxx	/^void common_checking_for_grid_registration(int comp_id, const char *grid_name, const char *coord_unit, int API_id, const char *annotation)$/;"	f
common_checking_for_interface_registration	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::common_checking_for_interface_registration(int num_fields, int *field_ids, int array_size, int timer_id, int inst_or_aver, int interface_type, const char *interface_name, int API_id, int interface_source, const char *field_ids_parameter_name, const char *annotation)$/;"	f	class:Inout_interface
common_is_timer_on	Driver/timer_mgt.cxx	/^bool common_is_timer_on(const char *frequency_unit, int frequency_count, int local_lag_count, int current_year, $/;"	f
common_restart_full_time	Driver/timer_mgt.h	/^        long common_restart_full_time;$/;"	m	class:Time_mgt
comp_ccpl_log_file_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        char comp_ccpl_log_file_name[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
comp_comm_group_mgt_mgr	Driver/global_data.cxx	/^Comp_comm_group_mgt_mgr *comp_comm_group_mgt_mgr = NULL;$/;"	v
comp_full_name	Data_MGT/original_grid_mgt.h	/^        const char *comp_full_name;$/;"	m	class:Original_grid_info
comp_full_name	Data_MGT/restart_mgt.h	/^        char comp_full_name[NAME_STR_SIZE];$/;"	m	class:Restart_buffer_container
comp_full_name	Runtime_MGT/coupling_generator.h	/^        char comp_full_name[NAME_STR_SIZE];$/;"	m	class:Component_import_interfaces_configuration
comp_full_name	Runtime_MGT/inout_interface_mgt.h	/^        char comp_full_name[NAME_STR_SIZE];$/;"	m	class:Inout_interface
comp_id	Data_MGT/IO_field_mgt.h	/^        int comp_id;$/;"	m	class:Component_IO_output_procedures
comp_id	Data_MGT/IO_field_mgt.h	/^        int comp_id;$/;"	m	class:IO_field
comp_id	Data_MGT/IO_field_mgt.h	/^        int comp_id;$/;"	m	class:IO_output_procedure
comp_id	Data_MGT/memory_mgt.h	/^        int comp_id;$/;"	m	class:Field_mem_info
comp_id	Data_MGT/original_grid_mgt.h	/^        int comp_id;$/;"	m	class:Original_grid_info
comp_id	Driver/timer_mgt.h	/^        int comp_id;$/;"	m	class:Coupling_timer
comp_id	Driver/timer_mgt.h	/^        int comp_id;$/;"	m	class:Time_mgt
comp_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int comp_id;$/;"	m	class:Comp_comm_group_mgt_node
comp_id	Parallel_MGT/decomp_info_mgt.h	/^        int comp_id;$/;"	m	class:Decomp_info
comp_id	Parallel_MGT/performance_timing_mgt.h	/^        int comp_id;$/;"	m	class:Performance_timing_mgt
comp_id	Parallel_MGT/performance_timing_mgt.h	/^        int comp_id;$/;"	m	class:Performance_timing_unit
comp_id	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        int comp_id;$/;"	m	class:Runtime_algorithm_basis
comp_id	Runtime_MGT/inout_interface_mgt.h	/^        int comp_id;$/;"	m	class:Inout_interface
comp_id	Runtime_MGT/remapping_configuration_mgt.h	/^        int comp_id;        $/;"	m	class:Remapping_algorithm_specification
comp_id	Runtime_MGT/remapping_configuration_mgt.h	/^        int comp_id;$/;"	m	class:Remapping_configuration
comp_id	Runtime_MGT/remapping_configuration_mgt.h	/^        int comp_id;$/;"	m	class:Remapping_setting
comp_id	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^        int comp_id;$/;"	m	class:Runtime_cumulate_average_algorithm
comp_id	Runtime_MGT/runtime_remap_algorithm.h	/^        int comp_id;$/;"	m	class:Runtime_remap_algorithm
comp_id	Runtime_MGT/runtime_trans_algorithm.h	/^        int comp_id;$/;"	m	class:Runtime_trans_algorithm
comp_model_log_file_device	Parallel_MGT/compset_communicators_info_mgt.h	/^        int comp_model_log_file_device;$/;"	m	class:Comp_comm_group_mgt_node
comp_model_log_file_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        char comp_model_log_file_name[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
comp_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        char comp_name[NAME_STR_SIZE];                \/\/ The name of component    $/;"	m	class:Comp_comm_group_mgt_node
comp_names	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        char **comp_names;$/;"	m	class:Runtime_algorithm_basis
comp_node	Data_MGT/restart_mgt.h	/^        Comp_comm_group_mgt_node *comp_node;$/;"	m	class:Restart_mgt
comp_node	Runtime_MGT/runtime_trans_algorithm.h	/^        Comp_comm_group_mgt_node *comp_node;$/;"	m	class:Runtime_trans_algorithm
comp_or_grid_id	Data_MGT/memory_mgt.h	/^        int comp_or_grid_id;$/;"	m	class:Field_mem_info
comp_time_mgr	Driver/timer_mgt.h	/^        Time_mgt *comp_time_mgr;$/;"	m	class:Coupling_timer
comp_type	Parallel_MGT/compset_communicators_info_mgt.h	/^        char comp_type[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
compare_to_another_sparse_matrix	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::compare_to_another_sparse_matrix(Remap_weight_sparse_matrix *another_sparse_matrix)$/;"	f	class:Remap_weight_sparse_matrix
components_IO_output_procedures	Data_MGT/IO_field_mgt.h	/^        std::vector<Component_IO_output_procedures*> components_IO_output_procedures;$/;"	m	class:Components_IO_output_procedures_mgt
components_IO_output_procedures_mgr	Driver/global_data.cxx	/^Components_IO_output_procedures_mgt *components_IO_output_procedures_mgr = NULL;$/;"	v
components_default_setting	Runtime_MGT/coupling_generator.h	/^        int components_default_setting;  \/\/ 0 means off; 1 means all;$/;"	m	class:Import_direction_setting
components_exports_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char components_exports_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
components_processes_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char components_processes_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
components_time_mgrs	Driver/global_data.cxx	/^Components_time_mgt *components_time_mgrs = NULL;$/;"	v
components_time_mgrs	Driver/timer_mgt.h	/^        std::vector<Time_mgt*> components_time_mgrs;$/;"	m	class:Components_time_mgt
comps_ending_config_status_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char comps_ending_config_status_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
compute_angle_of_great_arcs	CoR/remap_operator_c_interface.cxx	/^double compute_angle_of_great_arcs(double lon_point1, double lat_point1,$/;"	f
compute_arc_points_within_sphere_cell	CoR/remap_operator_c_interface.cxx	/^void compute_arc_points_within_sphere_cell(double lon_arc_start,$/;"	f
compute_area_of_sphere_cell	CoR/remap_operator_c_interface.cxx	/^double compute_area_of_sphere_cell(int num_vertexes,$/;"	f
compute_bounding_circle	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_tile::compute_bounding_circle()$/;"	f	class:H2D_grid_cell_search_tile
compute_cell_bounding_box	CoR/remap_operator_c_interface.cxx	/^void compute_cell_bounding_box(int num_vertexes, int num_grid_dimensions, double *vertex_coord_values, double *cell_bounding_box)$/;"	f
compute_common_sub_cell_of_src_cell_and_dst_cell_2D	CoR/remap_operator_c_interface.cxx	/^void compute_common_sub_cell_of_src_cell_and_dst_cell_2D(long cell_index_src, $/;"	f
compute_cross_product_of_counter_lines	CoR/remap_operator_bilinear.cxx	/^double Remap_operator_bilinear::compute_cross_product_of_counter_lines(double *bilinear_box_vertexes_coord1_values, double *bilinear_box_vertexes_coord2_values)$/;"	f	class:Remap_operator_bilinear
compute_difference_of_two_coord_values	CoR/remap_operator_c_interface.cxx	/^double compute_difference_of_two_coord_values(double coord_value1, double coord_value2, int dim_id)$/;"	f
compute_dist_remap_weights_of_one_dst_cell	CoR/remap_utils_nearest_points.cxx	/^void compute_dist_remap_weights_of_one_dst_cell(long dst_cell_index,$/;"	f
compute_dot_product_of_3D_vectors	CoR/remap_operator_c_interface.cxx	/^double compute_dot_product_of_3D_vectors(double x1, double y1, double z1,$/;"	f
compute_intersect_points_of_two_great_arcs_of_sphere_grid	CoR/remap_operator_c_interface.cxx	/^void compute_intersect_points_of_two_great_arcs_of_sphere_grid(double lon_arc1_point1,$/;"	f
compute_normal_vector_3D	CoR/remap_operator_c_interface.cxx	/^void compute_normal_vector_3D(double x_vector1, double y_vector1, double z_vector1,$/;"	f
compute_ocn_mask	CoR/remap_grid_class.cxx	/^void Remap_grid_class::compute_ocn_mask(const char *topo_field_name, double unit_trans)$/;"	f	class:Remap_grid_class
compute_partial_grid_mask	CoR/remap_grid_class.cxx	/^void Remap_grid_class::compute_partial_grid_mask()$/;"	f	class:Remap_grid_class
compute_quadrant_of_src_point	CoR/remap_operator_bilinear.cxx	/^int Remap_operator_bilinear::compute_quadrant_of_src_point(double* dst_cell_center_values, $/;"	f	class:Remap_operator_bilinear
compute_remap_field_data_runtime_mask	CoR/remap_grid_class.cxx	/^void Remap_grid_class::compute_remap_field_data_runtime_mask(Remap_grid_class *field_data_partial_grid, $/;"	f	class:Remap_grid_class
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::compute_remap_weights_of_one_dst_cell(long dst_cell_index)$/;"	f	class:Remap_operator_bilinear
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_conserv_2D.cxx	/^void Remap_operator_conserv_2D::compute_remap_weights_of_one_dst_cell(long cell_index_dst)$/;"	f	class:Remap_operator_conserv_2D
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_distwgt.cxx	/^void Remap_operator_distwgt::compute_remap_weights_of_one_dst_cell(long dst_cell_index)$/;"	f	class:Remap_operator_distwgt
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_linear.cxx	/^void Remap_operator_linear::compute_remap_weights_of_one_dst_cell(long dst_cell_index)$/;"	f	class:Remap_operator_linear
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_regrid.cxx	/^void Remap_operator_regrid::compute_remap_weights_of_one_dst_cell(long index_dst_cell)$/;"	f	class:Remap_operator_regrid
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_smooth.cxx	/^void Remap_operator_smooth::compute_remap_weights_of_one_dst_cell(long index_dst_cell)$/;"	f	class:Remap_operator_smooth
compute_remap_weights_of_one_dst_cell	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::compute_remap_weights_of_one_dst_cell(long cell_index_dst)$/;"	f	class:Remap_operator_spline_1D
compute_routing_info_between_decomps	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info_with_one_process *Routing_info::compute_routing_info_between_decomps(int num_local_cells_local, const int *local_cells_global_indexes_local, $/;"	f	class:Routing_info
compute_three_2D_points_cross_product	CoR/remap_common_utils.cxx	/^double compute_three_2D_points_cross_product(double center_coord1_value,$/;"	f
compute_three_3D_points_cross_product	CoR/remap_common_utils.cxx	/^double compute_three_3D_points_cross_product(double center_coord_value_x,$/;"	f
compute_vector_angle	CoR/remap_operator_c_interface.cxx	/^double compute_vector_angle(double *base_point_coord_values, double *end_point_coord_values)$/;"	f
condenseWhiteSpace	XML/tinyxml.cxx	/^bool TiXmlBase::condenseWhiteSpace = true;$/;"	m	class:TiXmlBase	file:
condenseWhiteSpace	XML/tinyxml.h	/^	static bool condenseWhiteSpace;$/;"	m	class:TiXmlBase
confirm_coupling_configuration_active	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::confirm_coupling_configuration_active(int comp_id, int API_id, bool require_real_model, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
confirm_coupling_configuration_active	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::confirm_coupling_configuration_active(int API_id, bool require_real_model, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_node
connection_id	Runtime_MGT/coupling_generator.h	/^        int connection_id;$/;"	m	class:Coupling_connection
content	CoR/radix_sort.h	/^        T2 *content;$/;"	m	class:Radix_sort
coord_label	CoR/remap_grid_class.h	/^        char coord_label[NAME_STR_SIZE];$/;"	m	class:Remap_grid_class
coord_unit	CoR/remap_grid_class.h	/^        char coord_unit[NAME_STR_SIZE];$/;"	m	class:Remap_grid_class
coord_value_grid	CoR/remap_grid_data_class.h	/^        Remap_grid_class *coord_value_grid;$/;"	m	class:Remap_grid_data_class
coord_value_grid	CoR/remap_operator_grid.h	/^        Remap_grid_class *coord_value_grid;$/;"	m	class:Vertex_values_group
coord_values_dst	CoR/remap_operator_1D_basis.h	/^        double *coord_values_dst;$/;"	m	class:Remap_operator_1D_basis
coord_values_src	CoR/remap_operator_1D_basis.h	/^        double *coord_values_src;$/;"	m	class:Remap_operator_1D_basis
copy_1D_remap_operator_info	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::copy_1D_remap_operator_info(Remap_operator_1D_basis *original_grid)$/;"	f	class:Remap_operator_1D_basis
copy_data_values_for_IO	CoR/io_basis.cxx	/^template <class T1, class T2> void copy_data_values_for_IO(T1 *data_values_in_application, T1 fill_value_in_application, T2 *data_values_in_io, T2 fill_value_in_io, bool *mask, long size, bool is_restart_field)$/;"	f
copy_field_data_for_IO	CoR/io_basis.cxx	/^void IO_basis::copy_field_data_for_IO(Remap_grid_data_class *field_data_in_application, Remap_grid_data_class *field_data_in_io, bool is_restart_field)$/;"	f	class:IO_basis
copy_field_data_values	Data_MGT/memory_mgt.cxx	/^void Memory_mgt::copy_field_data_values(Field_mem_info *dst_field_inst, Field_mem_info *src_field_inst)$/;"	f	class:Memory_mgt
copy_in_local_field_info	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^void Gather_scatter_rearrange_info::copy_in_local_field_info(Field_mem_info *local_field_mem)$/;"	f	class:Gather_scatter_rearrange_info
copy_out_string_to_Fortran_API	Driver/coupling_interface.cxx	/^void copy_out_string_to_Fortran_API(int comp_id, int size_API_string, char *API_string, const char *CCPL_string, int API_id, const char *parameter_name, const char *annotation)$/;"	f
copy_remap_operator_basic_data	CoR/remap_operator_basis.cxx	/^void Remap_operator_basis::copy_remap_operator_basic_data(Remap_operator_basis *another_remap_operator, bool fully_copy)$/;"	f	class:Remap_operator_basis
cosd	CoR/delaunay_voronoi.cxx	/^static inline double cosd(double x)$/;"	f	file:
counts	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int *counts;$/;"	m	class:Gather_scatter_rearrange_info
coupling_abort	Driver/coupling_interface.cxx	/^extern "C" void coupling_abort$/;"	f
coupling_connection	Runtime_MGT/inout_interface_mgt.h	/^        Coupling_connection *coupling_connection;$/;"	m	class:Connection_coupling_procedure
coupling_connections_dumped	Runtime_MGT/inout_interface_mgt.h	/^        bool coupling_connections_dumped;$/;"	m	class:Connection_coupling_procedure
coupling_fill_value	Driver/c_coupler_interface_mod.F90	/^   REAL,    parameter, public  :: coupling_fill_value /;"	v	module:CCPL_interface_mod
coupling_generator	Driver/global_data.cxx	/^Coupling_generator *coupling_generator = NULL;$/;"	v
coupling_procedure	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^        Connection_coupling_procedure *coupling_procedure;$/;"	m	class:Runtime_cumulate_average_algorithm
coupling_procedures	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Connection_coupling_procedure*> coupling_procedures;$/;"	m	class:Inout_interface
coupling_process_control_counter	Driver/coupling_interface.cxx	/^int coupling_process_control_counter = 0;$/;"	v
cpl_check_remap_weights_format	CoR/cor_cpl_interface.cxx	/^void cpl_check_remap_weights_format(Remap_weight_of_strategy_class *remap_weights)$/;"	f
cpl_duplicate_field_with_double_data_type	CoR/cor_cpl_interface.cxx	/^Remap_grid_data_class *cpl_duplicate_field_with_double_data_type(Remap_grid_data_class *float_field)$/;"	f
cpl_get_grid_size	CoR/cor_cpl_interface.cxx	/^long cpl_get_grid_size(const char *grid_name)$/;"	f
cpl_get_sphere_grid_area	CoR/cor_cpl_interface.cxx	/^double *cpl_get_sphere_grid_area(const char *grid_name)$/;"	f
cpl_get_sphere_grid_center_fields	CoR/cor_cpl_interface.cxx	/^double *cpl_get_sphere_grid_center_fields(const char *grid_name, const char *coord_label)$/;"	f
cpl_get_sphere_grid_mask	CoR/cor_cpl_interface.cxx	/^bool *cpl_get_sphere_grid_mask(const char *grid_name)$/;"	f
cpl_get_sphere_grid_subgrid_size	CoR/cor_cpl_interface.cxx	/^long cpl_get_sphere_grid_subgrid_size(const char *grid_name, const char *coord_label)$/;"	f
create_H2D_grid_from_global_data	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::create_H2D_grid_from_global_data(int comp_id, const char *grid_name, const char *coord_unit, const char *cyclic_or_acyclic, const char *data_type, int dim_size1, int dim_size2, int num_vertex, int size_center_lon,$/;"	f	class:Original_grid_mgt
create_directory	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void create_directory(const char *path, MPI_Comm comm, bool is_root_proc, bool new_dir)$/;"	f
create_union_comm	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::create_union_comm()$/;"	f	class:Coupling_connection
create_union_comm_common	Runtime_MGT/coupling_generator.cxx	/^MPI_Comm create_union_comm_common(MPI_Comm comp1, MPI_Comm comm2, int current_proc_id1, int current_proc_id2, std::vector<int> &procs_global_ids1, std::vector<int> &procs_global_ids2, int connection_id, int *proc_ranks_in_union_comm1, int *proc_ranks_in_union_comm2)$/;"	f
cumulate_average_algorithm_before_run	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        Runtime_cumulate_average_algorithm *cumulate_average_algorithm_before_run;$/;"	m	class:Runtime_algorithm_basis
cumulate_average_before_run	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^void Runtime_algorithm_basis::cumulate_average_before_run(bool is_algorithm_in_kernel_stage)$/;"	f	class:Runtime_algorithm_basis
cumulate_average_field_info	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^struct cumulate_average_field_info$/;"	s
cumulate_average_fields	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^        std::vector<cumulate_average_field_info*> cumulate_average_fields;$/;"	m	class:Runtime_cumulate_average_algorithm
cumulate_or_average	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^void Runtime_cumulate_average_algorithm::cumulate_or_average(bool do_average)$/;"	f	class:Runtime_cumulate_average_algorithm
current_computing_count	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^    int current_computing_count;$/;"	m	struct:cumulate_average_field_info
current_day	Driver/timer_mgt.h	/^        int current_day; $/;"	m	class:Time_mgt
current_day	Runtime_MGT/inout_interface_mgt.h	/^        int current_day;$/;"	m	class:Connection_field_time_info
current_delaunay_voronoi	CoR/delaunay_voronoi.cxx	/^Delaunay_Voronoi *current_delaunay_voronoi = NULL;$/;"	v
current_field_local_recv_count	Runtime_MGT/runtime_trans_algorithm.h	/^        long current_field_local_recv_count;$/;"	m	class:Runtime_trans_algorithm
current_mask_values_dst	CoR/runtime_remap_function.h	/^        bool *current_mask_values_dst;$/;"	m	class:Runtime_remap_function
current_mask_values_src	CoR/runtime_remap_function.h	/^        bool *current_mask_values_src;$/;"	m	class:Runtime_remap_function
current_month	Driver/timer_mgt.h	/^        int current_month;$/;"	m	class:Time_mgt
current_month	Runtime_MGT/inout_interface_mgt.h	/^        int current_month;$/;"	m	class:Connection_field_time_info
current_num_elapsed_day	Driver/timer_mgt.h	/^        int current_num_elapsed_day;$/;"	m	class:Time_mgt
current_num_elapsed_days	Runtime_MGT/inout_interface_mgt.h	/^        int current_num_elapsed_days;$/;"	m	class:Connection_field_time_info
current_proc_global_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int current_proc_global_id;$/;"	m	class:Comp_comm_group_mgt_mgr
current_proc_global_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int current_proc_global_id;$/;"	m	class:Comp_comm_group_mgt_node
current_proc_global_id	Runtime_MGT/runtime_trans_algorithm.h	/^        int current_proc_global_id;$/;"	m	class:Runtime_trans_algorithm
current_proc_id_dst_comp	Parallel_MGT/routing_info_mgt.h	/^        int current_proc_id_dst_comp;$/;"	m	class:Routing_info
current_proc_id_dst_comp	Runtime_MGT/coupling_generator.h	/^        int    current_proc_id_dst_comp;$/;"	m	class:Coupling_connection
current_proc_id_src_comp	Parallel_MGT/routing_info_mgt.h	/^        int current_proc_id_src_comp;$/;"	m	class:Routing_info
current_proc_id_src_comp	Runtime_MGT/coupling_generator.h	/^        int current_proc_id_src_comp;$/;"	m	class:Coupling_connection
current_proc_id_union_comm	Runtime_MGT/runtime_trans_algorithm.h	/^        int current_proc_id_union_comm;$/;"	m	class:Runtime_trans_algorithm
current_proc_local_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int current_proc_local_id;$/;"	m	class:Comp_comm_group_mgt_node
current_proc_local_id	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int current_proc_local_id;$/;"	m	class:Gather_scatter_rearrange_info
current_proc_local_id	Runtime_MGT/runtime_trans_algorithm.h	/^        int current_proc_local_id;$/;"	m	class:Runtime_trans_algorithm
current_receive_field_sender_time	Runtime_MGT/runtime_trans_algorithm.h	/^        long current_receive_field_sender_time;$/;"	m	class:Runtime_trans_algorithm
current_receive_field_usage_time	Runtime_MGT/runtime_trans_algorithm.h	/^        long current_receive_field_usage_time;$/;"	m	class:Runtime_trans_algorithm
current_redundant_mark_src	CoR/runtime_remap_function.h	/^        bool *current_redundant_mark_src;$/;"	m	class:Runtime_remap_function
current_remote_fields_elapsed_time	Runtime_MGT/inout_interface_mgt.h	/^        long current_remote_fields_elapsed_time;$/;"	m	class:Connection_coupling_procedure
current_remote_fields_time	Runtime_MGT/inout_interface_mgt.h	/^		long current_remote_fields_time;$/;"	m	class:Connection_coupling_procedure
current_remote_fields_time	Runtime_MGT/runtime_trans_algorithm.h	/^        long current_remote_fields_time;$/;"	m	class:Runtime_trans_algorithm
current_runtime_remap_function	CoR/cor_global_data.cxx	/^Runtime_remap_function *current_runtime_remap_function;$/;"	v
current_runtime_remap_operator	CoR/cor_global_data.cxx	/^Remap_operator_basis *current_runtime_remap_operator;$/;"	v
current_runtime_remap_operator_grid_dst	CoR/cor_global_data.cxx	/^Remap_operator_grid *current_runtime_remap_operator_grid_dst;$/;"	v
current_runtime_remap_operator_grid_src	CoR/cor_global_data.cxx	/^Remap_operator_grid *current_runtime_remap_operator_grid_src;$/;"	v
current_second	Driver/timer_mgt.h	/^        int current_second;$/;"	m	class:Time_mgt
current_second	Runtime_MGT/inout_interface_mgt.h	/^        int current_second;$/;"	m	class:Connection_field_time_info
current_step_id	Driver/timer_mgt.h	/^        int current_step_id;$/;"	m	class:Time_mgt
current_triangle	CoR/delaunay_voronoi.h	/^        Triangle *current_triangle;$/;"	m	class:Point
current_year	Driver/timer_mgt.h	/^        int current_year;   $/;"	m	class:Time_mgt
current_year	Runtime_MGT/inout_interface_mgt.h	/^        int current_year;$/;"	m	class:Connection_field_time_info
cursor	XML/tinyxmlparser.cxx	/^	TiXmlCursor		cursor;$/;"	m	class:TiXmlParsingData	file:
cyclic	CoR/remap_grid_class.h	/^        bool cyclic;$/;"	m	class:Remap_grid_class
data	XML/tinystr.h	/^	const char * data () const { return rep_->str; }$/;"	f	class:TiXmlString
data_buf	CoR/remap_statement_operand.h	/^        void *data_buf;$/;"	m	class:Remap_data_field
data_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        void * data_buf;$/;"	m	class:Runtime_trans_algorithm
data_buf_size	Runtime_MGT/runtime_trans_algorithm.h	/^        int data_buf_size;$/;"	m	class:Runtime_trans_algorithm
data_grid_dst	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *data_grid_dst;$/;"	m	class:Remap_weight_of_strategy_class
data_grid_src	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *data_grid_src;$/;"	m	class:Remap_weight_of_strategy_class
data_in_monotonicity_range	CoR/remap_operator_spline_1D.h	/^        double *data_in_monotonicity_range;$/;"	m	class:Remap_operator_spline_1D
data_type	Parallel_MGT/fields_gather_scatter_mgt.h	/^        char data_type[NAME_STR_SIZE];$/;"	m	class:Gather_scatter_rearrange_info
data_type	Runtime_MGT/coupling_generator.h	/^    char data_type[NAME_STR_SIZE];$/;"	m	struct:Interface_field_info
data_type_in_IO_file	CoR/remap_statement_operand.h	/^        char data_type_in_IO_file[NAME_STR_SIZE];$/;"	m	class:Remap_data_field
data_type_in_application	CoR/remap_statement_operand.h	/^        char data_type_in_application[NAME_STR_SIZE];$/;"	m	class:Remap_data_field
data_win	Runtime_MGT/runtime_trans_algorithm.h	/^        MPI_Win data_win;$/;"	m	class:Runtime_trans_algorithm
data_write_field_insts	Data_MGT/IO_field_mgt.h	/^        std::vector<Field_mem_info*> data_write_field_insts;$/;"	m	class:IO_output_procedure
datatype_from_application_to_netcdf	CoR/io_netcdf.cxx	/^void IO_netcdf::datatype_from_application_to_netcdf(const char *application_data_type, nc_type *nc_data_type)$/;"	f	class:IO_netcdf
datatype_from_netcdf_to_application	CoR/io_netcdf.cxx	/^void IO_netcdf::datatype_from_netcdf_to_application(nc_type nc_data_type, char *application_data_type, const char *field_name)$/;"	f	class:IO_netcdf
decomp_grid	Parallel_MGT/decomp_grid_mgt.h	/^        Remap_grid_class *decomp_grid;$/;"	m	class:Decomp_grid_info
decomp_grids_info	Parallel_MGT/decomp_grid_mgt.h	/^        std::vector<Decomp_grid_info*> decomp_grids_info;$/;"	m	class:Decomp_grid_mgt
decomp_grids_mgr	Driver/global_data.cxx	/^Decomp_grid_mgt *decomp_grids_mgr = NULL;$/;"	v
decomp_id	Data_MGT/memory_mgt.h	/^        int decomp_id;$/;"	m	class:Field_mem_info
decomp_id	Parallel_MGT/decomp_grid_mgt.h	/^        int decomp_id;$/;"	m	class:Decomp_grid_info
decomp_id	Parallel_MGT/decomp_info_mgt.h	/^        int decomp_id;$/;"	m	class:Decomp_info
decomp_name	CoR/remap_grid_class.h	/^        char decomp_name[NAME_STR_SIZE];$/;"	m	class:Remap_grid_class
decomp_name	Parallel_MGT/decomp_grid_mgt.h	/^        char decomp_name[NAME_STR_SIZE*2];$/;"	m	class:Decomp_grid_info
decomp_name	Parallel_MGT/decomp_info_mgt.h	/^        char decomp_name[NAME_STR_SIZE];$/;"	m	class:Decomp_info
decomp_name	Runtime_MGT/coupling_generator.h	/^    char decomp_name[NAME_STR_SIZE];$/;"	m	struct:Interface_field_info
decomps_info	Parallel_MGT/decomp_info_mgt.h	/^        std::vector<Decomp_info *> decomps_info;$/;"	m	class:Decomp_info_mgt
decomps_info_mgr	Driver/global_data.cxx	/^Decomp_info_mgt *decomps_info_mgr = NULL;$/;"	v
define_complex_timer	Driver/coupling_interface.cxx	/^extern "C" void define_complex_timer$/;"	f
define_field_values	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::define_field_values(bool is_restarting)$/;"	f	class:Field_mem_info
define_order_count	Data_MGT/memory_mgt.h	/^        long define_order_count;$/;"	m	class:Field_mem_info
define_root_comp_time_mgr	Driver/timer_mgt.cxx	/^void Components_time_mgt::define_root_comp_time_mgr(int comp_id, const char *xml_file_name)$/;"	f	class:Components_time_mgt
define_single_timer	Driver/coupling_interface.cxx	/^extern "C" void define_single_timer$/;"	f
define_timer	Driver/timer_mgt.cxx	/^int Timer_mgt::define_timer(int comp_id, Coupling_timer *existing_timer)$/;"	f	class:Timer_mgt
define_timer	Driver/timer_mgt.cxx	/^int Timer_mgt::define_timer(int comp_id, const char *freq_unit, int freq_count, int local_lag_count, int remote_lag_count, const char *annotation)$/;"	f	class:Timer_mgt
define_timer	Driver/timer_mgt.cxx	/^int Timer_mgt::define_timer(int comp_id, int *timers_id, int num_timers, int array_size, int or_or_and, const char *annotation)$/;"	f	class:Timer_mgt
defined_objects	CoR/remap_mgt.h	/^        std::vector<Remap_statement_object*> defined_objects;$/;"	m	class:Remap_mgt
definition_finalized	Parallel_MGT/compset_communicators_info_mgt.h	/^        bool definition_finalized;$/;"	m	class:Comp_comm_group_mgt_mgr
definition_finalized	Parallel_MGT/compset_communicators_info_mgt.h	/^        bool definition_finalized;$/;"	m	class:Comp_comm_group_mgt_node
delete_external_original_grids	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::delete_external_original_grids()$/;"	f	class:Original_grid_mgt
delete_hashing_table	Utils/dictionary.h	/^void Dictionary<T>::delete_hashing_table()$/;"	f	class:Dictionary
depth	XML/tinyxml.h	/^	int depth;$/;"	m	class:TiXmlPrinter
det	CoR/delaunay_voronoi.cxx	/^double det(const Point *pt1, const Point *pt2, const Point *pt3)$/;"	f
detect_conflict	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::detect_conflict(Remapping_setting *another_setting, const char *XML_file_name)$/;"	f	class:Remapping_setting
detect_redundant_cells	CoR/remap_grid_class.cxx	/^void Remap_grid_class::detect_redundant_cells()$/;"	f	class:Remap_grid_class
determine_continue_run_restart_time	Driver/timer_mgt.cxx	/^long Time_mgt::determine_continue_run_restart_time()$/;"	f	class:Time_mgt
disable_to_set_parameters	CoR/remap_operator_basis.h	/^        void disable_to_set_parameters() { enable_to_set_parameters = false; }$/;"	f	class:Remap_operator_basis
displ_src_cells_overlap_with_dst_cells	CoR/remap_operator_basis.h	/^        long *displ_src_cells_overlap_with_dst_cells;$/;"	m	class:Remap_operator_basis
displs	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int *displs;$/;"	m	class:Gather_scatter_rearrange_info
dist_buffer	CoR/grid_cell_search.h	/^        double *dist_buffer;$/;"	m	class:H2D_grid_cell_search_engine
dist_threshold	CoR/grid_cell_search.h	/^        double dist_threshold;$/;"	m	class:H2D_grid_cell_search_engine
distribute_points_into_triangles	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::distribute_points_into_triangles(vector<Point*> *pnts, vector<Triangle*> *triangles)$/;"	f	class:Delaunay_Voronoi
divide_tile	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_tile::divide_tile()$/;"	f	class:H2D_grid_cell_search_tile
dlat	CoR/grid_cell_search.h	/^        double dlat;$/;"	m	class:H2D_grid_cell_search_tile
dlon	CoR/grid_cell_search.h	/^        double dlon;$/;"	m	class:H2D_grid_cell_search_tile
do_external_coupling_generation	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::do_external_coupling_generation(int API_id, const char *annotation)$/;"	f	class:Coupling_generator
do_ins_sort	CoR/quick_sort.h	/^template <class T1, class T2> void do_ins_sort(T1 *sorted_values,$/;"	f
do_ins_sort	CoR/radix_sort.h	/^template <class T1, class T2> void Radix_sort<T1,T2>::do_ins_sort(long segment_start, long segment_end, int radix_id)$/;"	f	class:Radix_sort
do_overall_coupling_generation	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::do_overall_coupling_generation(const char *local_root_comp_full_name, const char *annotation)$/;"	f	class:Coupling_generator
do_quick_sort	CoR/quick_sort.h	/^template <class T1, class T2> void do_quick_sort(T1 *sorted_values,$/;"	f
do_quick_sort	CoR/radix_sort.h	/^template <class T1, class T2> void Radix_sort<T1,T2>::do_quick_sort(long segment_start, long segment_end, int radix_id)$/;"	f	class:Radix_sort
do_radix_sort	CoR/radix_sort.h	/^template <class T1, class T2> void Radix_sort<T1,T2>::do_radix_sort()$/;"	f	class:Radix_sort
do_remap	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_operator_class::do_remap(int comp_id, Remap_grid_data_class *field_data_src, Remap_grid_data_class *field_data_dst)$/;"	f	class:Remap_weight_of_operator_class
do_remap	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::do_remap(int comp_id, Remap_grid_data_class *field_data_src, Remap_grid_data_class *field_data_dst)$/;"	f	class:Remap_weight_of_strategy_class
do_remap	Runtime_MGT/runtime_remap_algorithm.cxx	/^void Runtime_remap_algorithm::do_remap(bool is_algorithm_in_kernel_stage)$/;"	f	class:Runtime_remap_algorithm
do_remap_values_caculation	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_bilinear
do_remap_values_caculation	CoR/remap_operator_conserv_2D.cxx	/^void Remap_operator_conserv_2D::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_conserv_2D
do_remap_values_caculation	CoR/remap_operator_distwgt.cxx	/^void Remap_operator_distwgt::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_distwgt
do_remap_values_caculation	CoR/remap_operator_linear.cxx	/^void Remap_operator_linear::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_linear
do_remap_values_caculation	CoR/remap_operator_regrid.cxx	/^void Remap_operator_regrid::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_regrid
do_remap_values_caculation	CoR/remap_operator_smooth.cxx	/^void Remap_operator_smooth::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_smooth
do_remap_values_caculation	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::do_remap_values_caculation(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_operator_spline_1D
do_restart_write	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::do_restart_write(const char *annotation, bool bypass_timer, bool bypass_imported_fields)$/;"	f	class:Restart_mgt
do_src_decomp_caculation	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_bilinear
do_src_decomp_caculation	CoR/remap_operator_conserv_2D.cxx	/^void Remap_operator_conserv_2D::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_conserv_2D
do_src_decomp_caculation	CoR/remap_operator_distwgt.cxx	/^void Remap_operator_distwgt::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_distwgt
do_src_decomp_caculation	CoR/remap_operator_linear.cxx	/^void Remap_operator_linear::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_linear
do_src_decomp_caculation	CoR/remap_operator_regrid.cxx	/^void Remap_operator_regrid::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_regrid
do_src_decomp_caculation	CoR/remap_operator_smooth.cxx	/^void Remap_operator_smooth::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_smooth
do_src_decomp_caculation	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::do_src_decomp_caculation(long *decomp_map_src, const long *decomp_map_dst)$/;"	f	class:Remap_operator_spline_1D
do_two_cells_bounding_box_have_overlap	CoR/remap_operator_c_interface.cxx	/^bool do_two_cells_bounding_box_have_overlap(int num_vertexes_src, $/;"	f
document	XML/tinyxml.h	/^	TiXmlDocument*	document;	\/\/ A pointer back to a document, for error reporting.$/;"	m	class:TiXmlAttribute
does_comp_name_include_reserved_prefix	Parallel_MGT/compset_communicators_info_mgt.cxx	/^bool Comp_comm_group_mgt_mgr::does_comp_name_include_reserved_prefix(const char *comp_name)$/;"	f	class:Comp_comm_group_mgt_mgr
does_file_exist	Driver/CCPL_api_mgt.cxx	/^bool does_file_exist(const char *file_name)$/;"	f
does_require_grid_cell_neighborhood	CoR/remap_operator_basis.h	/^        bool does_require_grid_cell_neighborhood() { return require_grid_cell_neighborhood; }$/;"	f	class:Remap_operator_basis
does_require_grid_vertex_values	CoR/remap_operator_basis.h	/^        bool does_require_grid_vertex_values() { return require_grid_vertex_values; }$/;"	f	class:Remap_operator_basis
does_use_V3D_level_coord	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::does_use_V3D_level_coord()$/;"	f	class:Remap_grid_class
dst_H2D_grid_area	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        double *dst_H2D_grid_area;$/;"	m	class:Runtime_remapping_weights
dst_area	Runtime_MGT/remapping_configuration_mgt.h	/^        double *dst_area;$/;"	m	class:H2D_remapping_wgt_file_info
dst_bottom_fields_coupling_info	Runtime_MGT/coupling_generator.h	/^        std::vector<V3D_grid_bottom_field_coupling_info*> dst_bottom_fields_coupling_info;$/;"	m	class:Coupling_connection
dst_cell_indexes_in_monotonicity_ranges	CoR/remap_operator_spline_1D.h	/^        int *dst_cell_indexes_in_monotonicity_ranges;$/;"	m	class:Remap_operator_spline_1D
dst_center_lat	Runtime_MGT/remapping_configuration_mgt.h	/^        double *dst_center_lat;$/;"	m	class:H2D_remapping_wgt_file_info
dst_center_lon	Runtime_MGT/remapping_configuration_mgt.h	/^        double *dst_center_lon;$/;"	m	class:H2D_remapping_wgt_file_info
dst_comp_full_name	Runtime_MGT/coupling_generator.h	/^        char dst_comp_full_name[NAME_STR_SIZE];$/;"	m	class:Coupling_connection
dst_comp_full_name	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        const char *dst_comp_full_name;$/;"	m	class:Runtime_remapping_weights
dst_comp_id	Parallel_MGT/routing_info_mgt.h	/^        int dst_comp_id;$/;"	m	class:Routing_info
dst_comp_node	Parallel_MGT/routing_info_mgt.h	/^        Comp_comm_group_mgt_node * dst_comp_node;$/;"	m	class:Routing_info
dst_comp_node	Runtime_MGT/coupling_generator.h	/^        Comp_comm_group_mgt_node *dst_comp_node;$/;"	m	class:Coupling_connection
dst_comp_node_id	Parallel_MGT/routing_info_mgt.h	/^        int dst_comp_node_id;$/;"	m	class:Routing_info
dst_comp_root_proc_global_id	Runtime_MGT/coupling_generator.h	/^        int dst_comp_root_proc_global_id;$/;"	m	class:Coupling_connection
dst_current_day	Runtime_MGT/coupling_generator.h	/^        int dst_current_year, dst_current_month, dst_current_day, dst_current_second;$/;"	m	class:Coupling_connection
dst_current_month	Runtime_MGT/coupling_generator.h	/^        int dst_current_year, dst_current_month, dst_current_day, dst_current_second;$/;"	m	class:Coupling_connection
dst_current_second	Runtime_MGT/coupling_generator.h	/^        int dst_current_year, dst_current_month, dst_current_day, dst_current_second;$/;"	m	class:Coupling_connection
dst_current_year	Runtime_MGT/coupling_generator.h	/^        int dst_current_year, dst_current_month, dst_current_day, dst_current_second;$/;"	m	class:Coupling_connection
dst_decomp_info	Parallel_MGT/routing_info_mgt.h	/^        Decomp_info *dst_decomp_info;$/;"	m	class:Routing_info
dst_decomp_info	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Decomp_info *dst_decomp_info;$/;"	m	class:Runtime_remapping_weights
dst_decomp_name	Parallel_MGT/routing_info_mgt.h	/^        char dst_decomp_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
dst_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        int dst_decomp_size;$/;"	m	class:Routing_info
dst_fields	Runtime_MGT/runtime_datatype_transformer.h	/^        std::vector<Field_mem_info*> dst_fields;$/;"	m	class:Runtime_datatype_transformer
dst_fields_info	Runtime_MGT/coupling_generator.h	/^        std::vector<Interface_field_info*> dst_fields_info;$/;"	m	class:Coupling_connection
dst_grid	CoR/remap_operator_basis.h	/^        Remap_grid_class *dst_grid;$/;"	m	class:Remap_operator_basis
dst_grid_size	Runtime_MGT/remapping_configuration_mgt.h	/^        int dst_grid_size;$/;"	m	class:H2D_remapping_wgt_file_info
dst_inst_or_aver	Runtime_MGT/coupling_generator.h	/^        int dst_inst_or_aver;$/;"	m	class:Coupling_connection
dst_interface_name	Runtime_MGT/coupling_generator.h	/^        char dst_interface_name[NAME_STR_SIZE];$/;"	m	class:Coupling_connection
dst_local_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^		routing_mapping_table_entry *dst_local_routing_mapping_table_entries;$/;"	m	class:Routing_info
dst_original_grid	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Original_grid_info *dst_original_grid;$/;"	m	class:Runtime_remapping_weights
dst_proc_ranks_in_union_comm	Runtime_MGT/coupling_generator.h	/^        int * dst_proc_ranks_in_union_comm;$/;"	m	class:Coupling_connection
dst_remote_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^		routing_mapping_table_entry *dst_remote_routing_mapping_table_entries;$/;"	m	class:Routing_info
dst_time_step_in_second	Runtime_MGT/coupling_generator.h	/^        int dst_time_step_in_second;$/;"	m	class:Coupling_connection
dst_timer	Runtime_MGT/coupling_generator.h	/^        Coupling_timer *dst_timer;$/;"	m	class:Coupling_connection
dump_active_coupling_connections	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::dump_active_coupling_connections()$/;"	f	class:Inout_interface
dump_active_coupling_connections_into_XML	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::dump_active_coupling_connections_into_XML(TiXmlElement *root_element)$/;"	f	class:Inout_interface
dump_in_data	Data_MGT/restart_mgt.cxx	/^void Restart_buffer_container::dump_in_data(const void *data, long size)$/;"	f	class:Restart_buffer_container
dump_in_string	Data_MGT/restart_mgt.cxx	/^void Restart_buffer_container::dump_in_string(const char *str, long str_size)$/;"	f	class:Restart_buffer_container
dump_out	Data_MGT/restart_mgt.cxx	/^void Restart_buffer_container::dump_out(char **array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Restart_buffer_container
dump_string	Utils/common_utils.cxx	/^void dump_string(const char *str, long str_size, char **array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f
duplicate_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::duplicate_grid(Remap_grid_class *top_grid)$/;"	f	class:Remap_grid_class
duplicate_grid_data_field	CoR/remap_grid_data_class.cxx	/^Remap_grid_data_class *Remap_grid_data_class::duplicate_grid_data_field(Remap_grid_class *associative_grid, $/;"	f	class:Remap_grid_data_class
duplicate_remap_data_field	CoR/remap_statement_operand.cxx	/^Remap_data_field *Remap_data_field::duplicate_remap_data_field(long data_size, bool copy_data)$/;"	f	class:Remap_data_field
duplicate_remap_operator	CoR/remap_operator_bilinear.cxx	/^Remap_operator_basis *Remap_operator_bilinear::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_bilinear
duplicate_remap_operator	CoR/remap_operator_conserv_2D.cxx	/^Remap_operator_basis *Remap_operator_conserv_2D::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_conserv_2D
duplicate_remap_operator	CoR/remap_operator_distwgt.cxx	/^Remap_operator_basis *Remap_operator_distwgt::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_distwgt
duplicate_remap_operator	CoR/remap_operator_linear.cxx	/^Remap_operator_basis *Remap_operator_linear::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_linear
duplicate_remap_operator	CoR/remap_operator_regrid.cxx	/^Remap_operator_basis *Remap_operator_regrid::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_regrid
duplicate_remap_operator	CoR/remap_operator_smooth.cxx	/^Remap_operator_basis *Remap_operator_smooth::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_smooth
duplicate_remap_operator	CoR/remap_operator_spline_1D.cxx	/^Remap_operator_basis *Remap_operator_spline_1D::duplicate_remap_operator(bool fully_copy)$/;"	f	class:Remap_operator_spline_1D
duplicate_remap_weight_of_sparse_matrix	CoR/remap_weight_sparse_matrix.cxx	/^Remap_weight_sparse_matrix *Remap_weight_sparse_matrix::duplicate_remap_weight_of_sparse_matrix()$/;"	f	class:Remap_weight_sparse_matrix
duplicated_grid	CoR/remap_grid_class.h	/^        Remap_grid_class *duplicated_grid;$/;"	m	class:Remap_grid_class
duplicated_remap_operator	CoR/remap_weight_of_strategy_class.h	/^        Remap_operator_basis *duplicated_remap_operator;$/;"	m	class:Remap_weight_of_operator_instance_class
dynamic_V1D_remap_weight_of_operator	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_weight_of_operator_class *dynamic_V1D_remap_weight_of_operator;$/;"	m	class:Runtime_remapping_weights
dynamic_vertical_remapping_weights_dst	CoR/remap_weight_of_strategy_class.h	/^        bool dynamic_vertical_remapping_weights_dst;$/;"	m	class:Remap_weight_of_strategy_class
dynamic_vertical_remapping_weights_src	CoR/remap_weight_of_strategy_class.h	/^        bool dynamic_vertical_remapping_weights_src;$/;"	m	class:Remap_weight_of_strategy_class
e	CoR/delaunay_voronoi.cxx	29;"	d	file:
edge	CoR/delaunay_voronoi.h	/^        Edge *edge[3];$/;"	m	class:Triangle
edge_pool	CoR/delaunay_voronoi.h	/^        vector<Edge*> edge_pool;$/;"	m	class:Delaunay_Voronoi
edge_type	CoR/grid_cell_search.h	/^        int edge_type;   \/\/ 1: latlon edge; 2: great arc edge$/;"	m	class:H2D_grid_cell_search_cell
elapsed_days_on_start_of_month_of_leap_year	Driver/timer_mgt.cxx	/^int elapsed_days_on_start_of_month_of_leap_year[] = {0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335};$/;"	v
elapsed_days_on_start_of_month_of_nonleap_year	Driver/timer_mgt.cxx	/^int elapsed_days_on_start_of_month_of_nonleap_year[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};$/;"	v
empty	XML/tinystr.h	/^	bool empty () const { return rep_->size == 0; }$/;"	f	class:TiXmlString
empty_remap_weight	CoR/remap_weight_of_strategy_class.h	/^        bool empty_remap_weight;$/;"	m	class:Remap_weight_of_operator_class
enable_extrapolate	CoR/remap_operator_basis.h	/^        bool enable_extrapolate;$/;"	m	class:Remap_operator_basis
enable_to_set_coord_values	CoR/remap_grid_class.h	/^        bool enable_to_set_coord_values;$/;"	m	class:Remap_grid_class
enable_to_set_parameters	CoR/remap_operator_basis.h	/^        bool enable_to_set_parameters;$/;"	m	class:Remap_operator_basis
enabled_in_parent_coupling_generation	Parallel_MGT/compset_communicators_info_mgt.h	/^        bool enabled_in_parent_coupling_generation;$/;"	m	class:Comp_comm_group_mgt_node
encoding	XML/tinyxml.h	/^	TIXML_STRING encoding;$/;"	m	class:TiXmlDeclaration
end_grid_definition_stage	CoR/remap_grid_class.cxx	/^void Remap_grid_class::end_grid_definition_stage(Remap_operator_basis *remap_operator)$/;"	f	class:Remap_grid_class
ensemble_member_id	Runtime_MGT/ensemble_mgt.h	/^        int ensemble_member_id;$/;"	m	class:Ensemble_mgt
ensemble_mgr	Driver/global_data.cxx	/^Ensemble_mgt *ensemble_mgr = NULL;$/;"	v
ensemble_random_seed_for_perturbation	Runtime_MGT/ensemble_mgt.h	/^        int ensemble_random_seed_for_perturbation;$/;"	m	class:Ensemble_mgt
entity	XML/tinyxml.h	/^	static Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlBase
erase_runtime_receive_algorithm	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::erase_runtime_receive_algorithm(Runtime_trans_algorithm *new_algorithm)$/;"	f	class:Inout_interface_mgt
error	XML/tinyxml.h	/^	bool error;$/;"	m	class:TiXmlDocument
errorDesc	XML/tinyxml.h	/^	TIXML_STRING errorDesc;$/;"	m	class:TiXmlDocument
errorId	XML/tinyxml.h	/^	int  errorId;$/;"	m	class:TiXmlDocument
errorLocation	XML/tinyxml.h	/^	TiXmlCursor errorLocation;$/;"	m	class:TiXmlDocument
errorString	XML/tinyxml.h	/^	static const char* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlBase
errorString	XML/tinyxmlerror.cxx	/^const char* TiXmlBase::errorString[ TiXmlBase::TIXML_ERROR_STRING_COUNT ] =$/;"	m	class:TiXmlBase	file:
evaluate_error	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::evaluate_error(Remap_grid_data_class *first_field_data, Remap_grid_data_class *second_field_data)$/;"	f	class:Remap_grid_data_class
exchange_bottom_fields_info	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::exchange_bottom_fields_info()$/;"	f	class:Coupling_connection
exchange_connection_fields_info	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::exchange_connection_fields_info()$/;"	f	class:Coupling_connection
exchange_grid	Runtime_MGT/coupling_generator.cxx	/^bool Coupling_connection::exchange_grid(Comp_comm_group_mgt_node *sender_comp_node, Comp_comm_group_mgt_node *receiver_comp_node, const char *grid_name)$/;"	f	class:Coupling_connection
exchange_remapping_setting	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::exchange_remapping_setting(int i, Remapping_setting &field_remapping_setting)$/;"	f	class:Coupling_connection
exchange_routing_mapping_tables_between_components	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::exchange_routing_mapping_tables_between_components(int num_src_procs_adjust, int num_dst_procs_adjust, Decomp_info *decomp_info, bool exchange_src)$/;"	f	class:Routing_info
exchange_routing_mapping_tables_between_processes	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::exchange_routing_mapping_tables_between_processes(int set_size, routing_mapping_table_entry **set_send_routing_mapping_table_entries, routing_mapping_table_entry **set_recv_routing_mapping_table_entries, int *set_num_send_routing_mapping_table_entries, int *set_num_recv_routing_mapping_table_entries, int *set_proc_id_send_to, int *set_proc_id_recv_from, MPI_Comm comm, int *set_send_recv_mark)$/;"	f	class:Routing_info
exe_log_file_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        char exe_log_file_name[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
executable_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        char executable_name[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
execute	CoR/io_mgt.cxx	/^void IO_mgt::execute(const char*function, Remap_statement_operand **statement_operands, int num_operands)$/;"	f	class:IO_mgt
execute	CoR/remap_grid_data_mgt.cxx	/^void Remap_field_data_mgt::execute(const char*function, Remap_statement_operand **statement_operands, int num_operands)$/;"	f	class:Remap_field_data_mgt
execute	CoR/remap_grid_mgt.cxx	/^void Remap_grid_mgt::execute(const char*function, Remap_statement_operand **statement_operands, int num_operands)$/;"	f	class:Remap_grid_mgt
execute	CoR/remap_operator_mgt.cxx	/^void Remap_operator_mgt::execute(const char*function, Remap_statement_operand **statement_operands, int num_operands)$/;"	f	class:Remap_operator_mgt
execute	CoR/remap_strategy_mgt.cxx	/^void Remap_strategy_mgt::execute(const char*function, Remap_statement_operand **statement_operands, int num_operands)$/;"	f	class:Remap_strategy_mgt
execute	CoR/remap_weight_of_strategy_mgt.cxx	/^void Remap_weight_of_strategy_mgt::execute(const char*function, Remap_statement_operand **statement_operands, int num_operands)$/;"	f	class:Remap_weight_of_strategy_mgt
execute	Data_MGT/IO_field_mgt.cxx	/^void Component_IO_output_procedures::execute()$/;"	f	class:Component_IO_output_procedures
execute	Data_MGT/IO_field_mgt.cxx	/^void IO_output_procedure::execute()$/;"	f	class:IO_output_procedure
execute	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_coupling_procedure::execute(bool bypass_timer, int *field_update_status, const char *annotation)$/;"	f	class:Connection_coupling_procedure
execute	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::execute(bool bypass_timer, int API_id, int *field_update_status, int size_field_update_status, const char *annotation)$/;"	f	class:Inout_interface
execute_inout_interface_with_id	Driver/coupling_interface.cxx	/^extern "C" void execute_inout_interface_with_id$/;"	f
execute_inout_interface_with_name	Driver/coupling_interface.cxx	/^extern "C" void execute_inout_interface_with_name$/;"	f
execute_interface	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::execute_interface(int comp_id, int API_id, const char *interface_name, bool bypass_timer, int *field_update_status, int size_field_update_status, int *num_dst_fields, const char *annotation)$/;"	f	class:Inout_interface_mgt
execute_interface	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::execute_interface(int interface_id, int API_id, bool bypass_timer, int *field_update_status, int size_field_update_status, int *num_dst_fields, const char *annotation)$/;"	f	class:Inout_interface_mgt
execution_checking_status	Runtime_MGT/inout_interface_mgt.h	/^        int execution_checking_status;$/;"	m	class:Inout_interface
execution_phase_number	CoR/cor_global_data.cxx	/^int execution_phase_number;$/;"	v
execution_report	Utils/execution_report.cxx	/^void execution_report(int report_type, int comp_id, bool condition) $/;"	f
execution_report	Utils/execution_report.cxx	/^void execution_report(int report_type, int comp_id, bool condition, const char *format, ...)$/;"	f
exp_model_name	Driver/timer_mgt.h	/^        char exp_model_name[NAME_STR_SIZE];$/;"	m	class:Time_mgt
expand_to_generate_full_coord_value	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::expand_to_generate_full_coord_value(Remap_grid_data_class *existing_data_field)$/;"	f	class:Remap_grid_class
export_field_index_lookup_table	Runtime_MGT/coupling_generator.h	/^        Dictionary<int> *export_field_index_lookup_table;$/;"	m	class:Coupling_generator
export_fields_dst_components	Runtime_MGT/coupling_generator.h	/^        std::map<int,std::vector<std::pair<const char*, const char*> > > export_fields_dst_components;$/;"	m	class:Coupling_generator
export_interface	Data_MGT/IO_field_mgt.h	/^        Inout_interface *export_interface;$/;"	m	class:IO_output_procedure
export_interface	Runtime_MGT/coupling_generator.h	/^        Inout_interface *export_interface;$/;"	m	class:Coupling_connection
export_procedure	Runtime_MGT/coupling_generator.h	/^        Connection_coupling_procedure *export_procedure;$/;"	m	class:Coupling_connection
extension_names	CoR/remap_statement_operand.h	/^    char extension_names[16][256];$/;"	m	struct:Remap_statement_operand
extract_mask	CoR/remap_grid_class.cxx	/^void Remap_grid_class::extract_mask(const char *field_data_name, const char *fill_value_lower_bound_str, const char *fill_value_higher_bound_str)$/;"	f	class:Remap_grid_class
extract_runtime_field	CoR/runtime_remap_function.cxx	/^void Runtime_remap_function::extract_runtime_field(Remap_grid_class *remap_operator_runtime_grid, Remap_grid_data_class *global_field, Remap_grid_data_class *operator_field, long current_remapping_time_iter)$/;"	f	class:Runtime_remap_function
extract_vertex_coordinate_values	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::extract_vertex_coordinate_values(int num_points, bool is_global_grid, $/;"	f	class:Delaunay_Voronoi
extrapolation_approach	CoR/remap_operator_1D_basis.h	/^        int extrapolation_approach;$/;"	m	class:Remap_operator_1D_basis
field_IO_name	Data_MGT/IO_field_mgt.h	/^        char field_IO_name[NAME_STR_SIZE];$/;"	m	class:IO_field
field_attr	Data_MGT/field_info_mgt.h	/^struct field_attr$/;"	s
field_attributes	CoR/remap_statement_operand.h	/^        std::vector<Remap_field_attribute> field_attributes;$/;"	m	class:Remap_data_field
field_connection_indx	Runtime_MGT/coupling_generator.h	/^    int field_connection_indx;$/;"	m	struct:V3D_grid_bottom_field_coupling_info
field_data_grid_dst	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *field_data_grid_dst;$/;"	m	class:Remap_weight_of_operator_class
field_data_grid_src	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *field_data_grid_src;$/;"	m	class:Remap_weight_of_operator_class
field_data_grids_in_remapping_process	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *field_data_grids_in_remapping_process[512];$/;"	m	class:Remap_weight_of_strategy_class
field_data_type	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^    const char *field_data_type;$/;"	m	struct:cumulate_average_field_info
field_dim	Data_MGT/field_info_mgt.h	/^    char field_dim[NAME_STR_SIZE];           \/\/ dimension info: scalar, 1D, 2D, 3D, etc$/;"	m	struct:field_attr
field_grid_names	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        char **field_grid_names;$/;"	m	class:Runtime_algorithm_basis
field_grids_num_lev	Runtime_MGT/runtime_trans_algorithm.h	/^        long * field_grids_num_lev;$/;"	m	class:Runtime_trans_algorithm
field_has_been_defined	Data_MGT/memory_mgt.cxx	/^bool Field_mem_info::field_has_been_defined()$/;"	f	class:Field_mem_info
field_instance_id	Data_MGT/IO_field_mgt.h	/^        int field_instance_id;$/;"	m	class:IO_field
field_instance_id	Data_MGT/memory_mgt.h	/^        int field_instance_id;$/;"	m	class:Field_mem_info
field_interface_local_index	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<int> field_interface_local_index;$/;"	m	class:Connection_coupling_procedure
field_local_decomp_names	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        char **field_local_decomp_names;$/;"	m	class:Runtime_algorithm_basis
field_long_name	Data_MGT/IO_field_mgt.h	/^        char field_long_name[NAME_STR_SIZE];$/;"	m	class:IO_field
field_long_name	Data_MGT/field_info_mgt.h	/^    char field_long_name[NAME_STR_SIZE];$/;"	m	struct:field_attr
field_name	Data_MGT/field_info_mgt.h	/^    char field_name[NAME_STR_SIZE];$/;"	m	struct:field_attr
field_name	Data_MGT/memory_mgt.h	/^        char field_name[NAME_STR_SIZE];$/;"	m	class:Field_mem_info
field_name_in_IO_file	CoR/remap_statement_operand.h	/^        char field_name_in_IO_file[NAME_STR_SIZE];$/;"	m	class:Remap_data_field
field_name_in_application	CoR/remap_statement_operand.h	/^        char field_name_in_application[NAME_STR_SIZE];$/;"	m	class:Remap_data_field
field_names	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        char **field_names;$/;"	m	class:Runtime_algorithm_basis
field_specification_manner	Runtime_MGT/remapping_configuration_mgt.h	/^        int field_specification_manner;    \/\/ 0 means default of a component; 1 means type; 2 means name$/;"	m	class:Remapping_setting
field_timer	Data_MGT/IO_field_mgt.h	/^        Coupling_timer *field_timer;$/;"	m	class:IO_output_procedure
field_type	Data_MGT/field_info_mgt.h	/^    char field_type[NAME_STR_SIZE];          \/\/ state or flux$/;"	m	struct:field_attr
field_unit	Data_MGT/IO_field_mgt.h	/^        char field_unit[NAME_STR_SIZE];$/;"	m	class:IO_field
field_unit	Data_MGT/field_info_mgt.h	/^    char field_unit[NAME_STR_SIZE];$/;"	m	struct:field_attr
field_unit	Data_MGT/memory_mgt.h	/^        char field_unit[NAME_STR_SIZE];$/;"	m	class:Field_mem_info
field_update_status	Data_MGT/IO_field_mgt.h	/^        int *field_update_status;$/;"	m	class:IO_output_procedure
fields_allocated	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        bool fields_allocated;$/;"	m	class:Runtime_algorithm_basis
fields_attr	Data_MGT/field_info_mgt.h	/^    std::vector<field_attr> fields_attr;$/;"	m	class:Field_info_mgt
fields_connected_status	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<bool> fields_connected_status;$/;"	m	class:Inout_interface
fields_coupling_procedures	Runtime_MGT/inout_interface_mgt.h	/^		std::vector<Connection_coupling_procedure*> fields_coupling_procedures;$/;"	m	class:Inout_interface
fields_data_buffers	Runtime_MGT/runtime_trans_algorithm.h	/^        void **fields_data_buffers;$/;"	m	class:Runtime_trans_algorithm
fields_data_type_sizes	Runtime_MGT/runtime_trans_algorithm.h	/^        int *fields_data_type_sizes;$/;"	m	class:Runtime_trans_algorithm
fields_default_setting	Runtime_MGT/coupling_generator.h	/^        int fields_default_setting;       \/\/ 0 means off; 1 means all; 2 means remain"$/;"	m	class:Import_direction_setting
fields_gather_scatter_mgr	Driver/global_data.cxx	/^Fields_gather_scatter_mgt *fields_gather_scatter_mgr = NULL;$/;"	v
fields_info	Driver/global_data.cxx	/^Field_info_mgt *fields_info = NULL;$/;"	v
fields_mem	Data_MGT/memory_mgt.h	/^        std::vector<Field_mem_info *> fields_mem;$/;"	m	class:Memory_mgt
fields_mem	Runtime_MGT/runtime_trans_algorithm.h	/^        Field_mem_info **fields_mem;$/;"	m	class:Runtime_trans_algorithm
fields_mem_datatype_transformed	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_datatype_transformed;$/;"	m	class:Connection_coupling_procedure
fields_mem_inner_step_averaged	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_inner_step_averaged;$/;"	m	class:Connection_coupling_procedure
fields_mem_inter_step_averaged	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_inter_step_averaged;$/;"	m	class:Connection_coupling_procedure
fields_mem_registered	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_registered;$/;"	m	class:Connection_coupling_procedure
fields_mem_registered	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_registered;$/;"	m	class:Inout_interface
fields_mem_remapped	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_remapped;$/;"	m	class:Connection_coupling_procedure
fields_mem_transfer	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_transfer;$/;"	m	class:Connection_coupling_procedure
fields_mem_unit_transformed	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Field_mem_info *> fields_mem_unit_transformed;$/;"	m	class:Connection_coupling_procedure
fields_name	Runtime_MGT/coupling_generator.h	/^        std::vector<const char*> fields_name;$/;"	m	class:Coupling_connection
fields_name	Runtime_MGT/coupling_generator.h	/^        std::vector<const char*> fields_name;$/;"	m	class:Import_direction_setting
fields_name	Runtime_MGT/coupling_generator.h	/^        std::vector<const char*> fields_name;$/;"	m	class:Import_interface_configuration
fields_name	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<const char*> fields_name;$/;"	m	class:Inout_interface
fields_routers	Runtime_MGT/runtime_trans_algorithm.h	/^        Routing_info **fields_routers;$/;"	m	class:Runtime_trans_algorithm
fields_specification	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<const char *> fields_specification;$/;"	m	class:Remapping_setting
fields_src_producers_info	Runtime_MGT/coupling_generator.h	/^        std::vector<std::vector<std::pair<const char*, const char*> > > fields_src_producers_info;$/;"	m	class:Import_interface_configuration
fields_time_info_dst	Runtime_MGT/inout_interface_mgt.h	/^        Connection_field_time_info * fields_time_info_dst;$/;"	m	class:Connection_coupling_procedure
fields_time_info_src	Runtime_MGT/inout_interface_mgt.h	/^        Connection_field_time_info * fields_time_info_src;$/;"	m	class:Connection_coupling_procedure
file_name	CoR/io_basis.h	/^        char file_name[256];$/;"	m	class:IO_basis
file_timer	Data_MGT/IO_field_mgt.h	/^        Coupling_timer *file_timer;$/;"	m	class:IO_output_procedure
file_type	CoR/io_basis.h	/^        char file_type[256];$/;"	m	class:IO_basis
fill_value	CoR/remap_statement_operand.h	/^        double fill_value;$/;"	m	class:Remap_data_field
final_factor1	CoR/remap_operator_spline_1D.h	/^        double *final_factor1;$/;"	m	class:Remap_operator_spline_1D
final_factor2	CoR/remap_operator_spline_1D.h	/^        double *final_factor2;$/;"	m	class:Remap_operator_spline_1D
final_factor3	CoR/remap_operator_spline_1D.h	/^        double *final_factor3;$/;"	m	class:Remap_operator_spline_1D
final_factor4	CoR/remap_operator_spline_1D.h	/^        double *final_factor4;$/;"	m	class:Remap_operator_spline_1D
final_factor5	CoR/remap_operator_spline_1D.h	/^        double *final_factor5;$/;"	m	class:Remap_operator_spline_1D
finalize_ccpl	Driver/coupling_interface.cxx	/^extern "C" void finalize_ccpl$/;"	f
finalize_computing_remap_weights_of_one_cell	CoR/remap_operator_c_interface.cxx	/^void finalize_computing_remap_weights_of_one_cell()$/;"	f
find	XML/tinystr.h	/^	size_type find (char lookup) const$/;"	f	class:TiXmlString
find	XML/tinystr.h	/^	size_type find (char tofind, size_type offset) const$/;"	f	class:TiXmlString
find_best_candidate_point	CoR/delaunay_voronoi.cxx	/^int Triangle::find_best_candidate_point()$/;"	f	class:Triangle
finish	XML/tinystr.h	/^	char* finish() const { return rep_->str + rep_->size; }$/;"	f	class:TiXmlString
finish_status	Runtime_MGT/inout_interface_mgt.h	/^        bool finish_status;$/;"	m	class:Connection_coupling_procedure
firstChild	XML/tinyxml.h	/^	TiXmlNode*		firstChild;$/;"	m	class:TiXmlNode
first_super_grid_of_enable_setting_coord_value	CoR/remap_grid_class.h	/^        Remap_grid_class *first_super_grid_of_enable_setting_coord_value;$/;"	m	class:Remap_grid_class
flush_log_file	Utils/execution_report.cxx	/^bool flush_log_file;$/;"	v
formalize_cyclic_coord_values	CoR/remap_grid_class.cxx	/^void Remap_grid_class::formalize_cyclic_coord_values(Remap_grid_data_class *remap_grid_data)$/;"	f	class:Remap_grid_class
formalize_sphere_grid	CoR/remap_grid_class.cxx	/^void Remap_grid_class::formalize_sphere_grid()$/;"	f	class:Remap_grid_class
format_sub_grids	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::format_sub_grids(Remap_grid_class *top_grid)$/;"	f	class:Remap_grid_class
found_nearest_points_distance	CoR/remap_operator_bilinear.h	/^        double *found_nearest_points_distance;$/;"	m	class:Remap_operator_bilinear
found_nearest_points_distance	CoR/remap_operator_distwgt.h	/^        double *found_nearest_points_distance;$/;"	m	class:Remap_operator_distwgt
found_nearest_points_src_indexes	CoR/remap_operator_bilinear.h	/^        long *found_nearest_points_src_indexes;$/;"	m	class:Remap_operator_bilinear
found_nearest_points_src_indexes	CoR/remap_operator_distwgt.h	/^        long *found_nearest_points_src_indexes;$/;"	m	class:Remap_operator_distwgt
fp_binary	CoR/io_binary.h	/^        FILE *fp_binary;$/;"	m	class:IO_binary
free_all_MPI_wins	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::free_all_MPI_wins()$/;"	f	class:Inout_interface_mgt
frequency_count	Driver/timer_mgt.h	/^        int frequency_count;$/;"	m	class:Coupling_timer
frequency_unit	Driver/timer_mgt.h	/^        char frequency_unit[NAME_STR_SIZE];$/;"	m	class:Coupling_timer
full_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        char full_name[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
fully_decomp_name	Parallel_MGT/fields_gather_scatter_mgt.h	/^        char fully_decomp_name[NAME_STR_SIZE];$/;"	m	class:Gather_scatter_rearrange_info
fully_decomps_map	Parallel_MGT/decomp_info_mgt.h	/^        std::map<int, int> fully_decomps_map;$/;"	m	class:Decomp_info_mgt
function	CoR/remap_mgt.h	/^            char function[256];$/;"	m	struct:Remap_mgt::Remap_statement
function_words	CoR/remap_mgt.h	/^        std::vector<char*> function_words;$/;"	m	class:Remap_mgt
gather	CoR/remap_operator_basis.cxx	/^Remap_operator_basis *Remap_operator_basis::gather(int comp_id)$/;"	f	class:Remap_operator_basis
gather	CoR/remap_weight_sparse_matrix.cxx	/^Remap_weight_sparse_matrix *Remap_weight_sparse_matrix::gather(int comp_id)$/;"	f	class:Remap_weight_sparse_matrix
gather_array_in_one_comp	Driver/CCPL_api_mgt.cxx	/^void gather_array_in_one_comp(int num_total_local_proc, int current_proc_local_id, void *local_array, int local_array_size, $/;"	f
gather_field	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Field_mem_info *Fields_gather_scatter_mgt::gather_field(Field_mem_info *local_field)$/;"	f	class:Fields_gather_scatter_mgt
gather_field	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Field_mem_info *Gather_scatter_rearrange_info::gather_field(Field_mem_info *local_field_mem)$/;"	f	class:Gather_scatter_rearrange_info
gather_scatter_rearrange_infos	Parallel_MGT/fields_gather_scatter_mgt.h	/^        std::vector<Gather_scatter_rearrange_info*> gather_scatter_rearrange_infos;$/;"	m	class:Fields_gather_scatter_mgt
gather_write_field	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^void Fields_gather_scatter_mgt::gather_write_field(IO_netcdf *nc_file, Field_mem_info *local_field, bool write_grid_name, int date, int datesec, bool is_restart_field)$/;"	f	class:Fields_gather_scatter_mgt
gen_lev_coord_from_sigma_or_hybrid	CoR/remap_grid_class.cxx	/^void Remap_grid_class::gen_lev_coord_from_sigma_or_hybrid(char extension_names[16][256], $/;"	f	class:Remap_grid_class
generate_3D_grid_decomp_sigma_values	CoR/remap_grid_class.cxx	/^void Remap_grid_class::generate_3D_grid_decomp_sigma_values(Remap_grid_class *original_3D_grid,Remap_grid_class *decomp_grid, const int *local_cell_indexes, int num_local_cells)$/;"	f	class:Remap_grid_class
generate_IO_procedures	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::generate_IO_procedures()$/;"	f	class:Coupling_generator
generate_Voronoi_diagram	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::generate_Voronoi_diagram()$/;"	f	class:Delaunay_Voronoi
generate_a_coupling_procedure	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::generate_a_coupling_procedure(bool has_frac_remapping)$/;"	f	class:Coupling_connection
generate_analytic_values	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::generate_analytic_values(const char *case_name)$/;"	f	class:Remap_grid_data_class
generate_boundary_point	CoR/delaunay_voronoi.cxx	/^Point *Delaunay_Voronoi::generate_boundary_point(double lon, double lat, Triangle *root, bool is_virtual_point)$/;"	f	class:Delaunay_Voronoi
generate_coupling_connection	Data_MGT/IO_field_mgt.cxx	/^Coupling_connection *IO_output_procedure::generate_coupling_connection(int connection_id)$/;"	f	class:IO_output_procedure
generate_coupling_connection	Data_MGT/IO_field_mgt.cxx	/^void Component_IO_output_procedures::generate_coupling_connection(std::vector<Coupling_connection*> &all_IO_connections, int basic_connection_id)$/;"	f	class:Component_IO_output_procedures
generate_coupling_procedures_common	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::generate_coupling_procedures_common(int API_id, MPI_Comm comm, bool is_overall_generation, bool is_internal_generation, const char *annotation)$/;"	f	class:Coupling_generator
generate_coupling_procedures_internal	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::generate_coupling_procedures_internal(int comp_id, bool family_generation, bool is_internal_generation, const char *annotation)$/;"	f	class:Coupling_generator
generate_data_field_info	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::generate_data_field_info(const char *field_data_name, $/;"	f	class:Remap_grid_data_class
generate_data_transfer	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::generate_data_transfer()$/;"	f	class:Coupling_connection
generate_decomp_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::generate_decomp_grid(const int *local_cell_indexes, int num_local_cells, const char *decomp_name)$/;"	f	class:Remap_grid_class
generate_default_grid_mask	CoR/remap_grid_class.cxx	/^void Remap_grid_class::generate_default_grid_mask()$/;"	f	class:Remap_grid_class
generate_field_data_for_IO	CoR/io_basis.cxx	/^Remap_grid_data_class *IO_basis::generate_field_data_for_IO(Remap_grid_data_class *field_data_in_application, bool is_restart_field)$/;"	f	class:IO_basis
generate_fully_decomp	Parallel_MGT/decomp_info_mgt.cxx	/^int Decomp_info_mgt::generate_fully_decomp(int original_decomp_id)$/;"	f	class:Decomp_info_mgt
generate_grid_info	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::generate_grid_info(Remap_grid_class *coord_value_grid)$/;"	f	class:Remap_grid_data_class
generate_initial_triangles	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::generate_initial_triangles(Triangle *root, vector<Point*> *boundary_points1, vector<Point*> *boundary_points2, bool cyclic)$/;"	f	class:Delaunay_Voronoi
generate_interchange_grids	CoR/remap_grid_class.cxx	/^void Remap_grid_class::generate_interchange_grids(Remap_grid_class *remap_grid, $/;"	f	class:Remap_grid_class
generate_interface_fields_source_dst	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::generate_interface_fields_source_dst(const char *temp_array_buffer, int buffer_content_size)$/;"	f	class:Coupling_generator
generate_interpolation	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::generate_interpolation(bool has_frac_remapping)$/;"	f	class:Coupling_connection
generate_mid_point_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::generate_mid_point_grid()$/;"	f	class:Remap_grid_class
generate_mid_point_grid_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::generate_mid_point_grid_field(Remap_grid_data_class *interface_level_grid_field)$/;"	f	class:Remap_grid_class
generate_new_remap_weights	CoR/remap_weight_of_strategy_mgt.cxx	/^Remap_weight_of_strategy_class *Remap_weight_of_strategy_mgt::generate_new_remap_weights(const char *object_name, const char *remap_strategy_name, const char *data_grid_name_src, const char *data_grid_name_dst,$/;"	f	class:Remap_weight_of_strategy_mgt
generate_overall_vertex_coord_values	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::generate_overall_vertex_coord_values()$/;"	f	class:Remap_operator_grid
generate_parallel_remap_operator	CoR/remap_operator_bilinear.cxx	/^Remap_operator_basis *Remap_operator_bilinear::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_bilinear
generate_parallel_remap_operator	CoR/remap_operator_conserv_2D.cxx	/^Remap_operator_basis *Remap_operator_conserv_2D::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_conserv_2D
generate_parallel_remap_operator	CoR/remap_operator_distwgt.cxx	/^Remap_operator_basis *Remap_operator_distwgt::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_distwgt
generate_parallel_remap_operator	CoR/remap_operator_linear.cxx	/^Remap_operator_basis *Remap_operator_linear::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_linear
generate_parallel_remap_operator	CoR/remap_operator_regrid.cxx	/^Remap_operator_basis *Remap_operator_regrid::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_regrid
generate_parallel_remap_operator	CoR/remap_operator_smooth.cxx	/^Remap_operator_basis *Remap_operator_smooth::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_smooth
generate_parallel_remap_operator	CoR/remap_operator_spline_1D.cxx	/^Remap_operator_basis *Remap_operator_spline_1D::generate_parallel_remap_operator(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_spline_1D
generate_parallel_remap_weight_of_sparse_matrix	CoR/remap_weight_sparse_matrix.cxx	/^Remap_weight_sparse_matrix *Remap_weight_sparse_matrix::generate_parallel_remap_weight_of_sparse_matrix(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_weight_sparse_matrix
generate_parallel_remap_weights	CoR/remap_operator_basis.cxx	/^void Remap_operator_basis::generate_parallel_remap_weights(Remap_operator_basis *another_remap_operator, Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_operator_basis
generate_parallel_remap_weights	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_class *Remap_weight_of_operator_class::generate_parallel_remap_weights(Remap_grid_class **remap_related_decomp_grids, $/;"	f	class:Remap_weight_of_operator_class
generate_parallel_remap_weights	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_instance_class *Remap_weight_of_operator_instance_class::generate_parallel_remap_weights(Remap_grid_class **decomp_original_grids, int **global_cells_local_indexes_in_decomps)$/;"	f	class:Remap_weight_of_operator_instance_class
generate_parallel_remap_weights	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_strategy_class *Remap_weight_of_strategy_class::generate_parallel_remap_weights(Remap_grid_class **remap_related_decomp_grids,$/;"	f	class:Remap_weight_of_strategy_class
generate_parallel_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^void Runtime_remapping_weights::generate_parallel_remapping_weights()$/;"	f	class:Runtime_remapping_weights
generate_remap_operator_runtime_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::generate_remap_operator_runtime_grid(Remap_grid_class *remap_grid, $/;"	f	class:Remap_grid_class
generate_remap_weights_src_decomp	Parallel_MGT/decomp_info_mgt.cxx	/^Decomp_info *Decomp_info_mgt::generate_remap_weights_src_decomp(Decomp_info *dst_decomp_info, Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid, Remap_weight_of_strategy_class *remap_weights)$/;"	f	class:Decomp_info_mgt
generate_remapping_grids	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::generate_remapping_grids()$/;"	f	class:Original_grid_info
generate_remapping_interface_connection	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::generate_remapping_interface_connection(Inout_interface *new_interface, int num_fields, int *field_ids_src, bool has_frac_remapping) $/;"	f	class:Inout_interface_mgt
generate_remapping_related_grids	CoR/remap_weight_of_strategy_class.cxx	/^int Remap_weight_of_strategy_class::generate_remapping_related_grids()$/;"	f	class:Remap_weight_of_strategy_class
generate_routing_info_between_procs	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info_with_one_process *Routing_info::generate_routing_info_between_procs(routing_mapping_table_entry* local_routing_mapping_table_entries, int num_local_routing_mapping_table_entries, int remote_proc_global_id, bool is_src)$/;"	f	class:Routing_info
generate_src_bottom_field_coupling_info	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::generate_src_bottom_field_coupling_info()$/;"	f	class:Coupling_connection
generate_twins_edge	CoR/delaunay_voronoi.cxx	/^Edge *Edge::generate_twins_edge()$/;"	f	class:Edge
generate_vertex_values_of_one_cell_according_to_vertex_values_groups	CoR/remap_operator_grid.cxx	/^void Vertex_values_group::generate_vertex_values_of_one_cell_according_to_vertex_values_groups(long whole_grid_cell_index,$/;"	f	class:Vertex_values_group
generate_voronoi_grid	CoR/remap_grid_class.cxx	/^void Remap_grid_class::generate_voronoi_grid()$/;"	f	class:Remap_grid_class
generated_from_duplication	CoR/remap_grid_class.h	/^        bool generated_from_duplication;$/;"	m	class:Remap_grid_class
get_3D_cartesian_coord_of_sphere_coord	CoR/remap_common_utils.cxx	/^void get_3D_cartesian_coord_of_sphere_coord(double &coord_x, double &coord_y, double &coord_z,$/;"	f
get_API_hint	Driver/CCPL_api_mgt.cxx	/^void get_API_hint(int comp_id, int API_id, char *API_label)$/;"	f
get_CCPL_platform_log_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_CCPL_platform_log_dir() { return CCPL_platform_log_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_CoR_defined_grid	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::get_CoR_defined_grid(int comp_id, const char *grid_name, const char *CoR_grid_name, const char *annotation)$/;"	f	class:Original_grid_mgt
get_CoR_grid_of_decomp	Parallel_MGT/decomp_info_mgt.cxx	/^Remap_grid_class *Decomp_info_mgt::get_CoR_grid_of_decomp(int decomp_id) const$/;"	f	class:Decomp_info_mgt
get_H2D_remapping_algorithm	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification *get_H2D_remapping_algorithm() { return H2D_remapping_algorithm; }$/;"	f	class:Remapping_setting
get_H2D_sub_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *get_H2D_sub_CoR_grid() { return H2D_sub_CoR_grid; }$/;"	f	class:Original_grid_info
get_IO_field_id	Data_MGT/IO_field_mgt.h	/^        int get_IO_field_id() { return IO_field_id; }$/;"	f	class:IO_field
get_T1D_remapping_algorithm	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification *get_T1D_remapping_algorithm() { return T1D_remapping_algorithm; }$/;"	f	class:Remapping_setting
get_T1D_sub_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *get_T1D_sub_CoR_grid() { return T1D_sub_CoR_grid; }$/;"	f	class:Original_grid_info
get_V1D_remapping_algorithm	Runtime_MGT/remapping_configuration_mgt.h	/^        Remapping_algorithm_specification *get_V1D_remapping_algorithm() { return V1D_remapping_algorithm; }$/;"	f	class:Remapping_setting
get_V1D_sub_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *get_V1D_sub_CoR_grid() { return V1D_sub_CoR_grid; }$/;"	f	class:Original_grid_info
get_V3D_lev_field_id	Data_MGT/original_grid_mgt.h	/^		int get_V3D_lev_field_id() { return V3D_lev_field_id; }$/;"	f	class:Original_grid_info
get_V3D_lev_field_variation_type	Data_MGT/original_grid_mgt.h	/^		int get_V3D_lev_field_variation_type() const { return V3D_lev_field_variation_type; }$/;"	f	class:Original_grid_info
get_XML_attribute	Driver/CCPL_api_mgt.cxx	/^const char *get_XML_attribute(int comp_id, int max_string_length, TiXmlElement *XML_element, const char *attribute_keyword, const char *XML_file_name, int &line_number, const char *attribute_annotation, const char *XML_file_annotation, bool check_existence)$/;"	f
get_XML_first_child_of_unique_root	Driver/CCPL_api_mgt.cxx	/^TiXmlNode *get_XML_first_child_of_unique_root(int comp_id, const char *XML_file_name, TiXmlDocument *XML_file)$/;"	f
get_a_leaf_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::get_a_leaf_grid(const char *coord_label)$/;"	f	class:Remap_grid_class
get_a_leaf_grid_of_sigma_or_hybrid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::get_a_leaf_grid_of_sigma_or_hybrid()$/;"	f	class:Remap_grid_class
get_active_coupling_connections_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_active_coupling_connections_dir() { return active_coupling_connections_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_algorithm_name	Runtime_MGT/remapping_configuration_mgt.h	/^        const char *get_algorithm_name() { return algorithm_name; }$/;"	f	class:Remapping_algorithm_specification
get_all_components_ids	Parallel_MGT/compset_communicators_info_mgt.cxx	/^const int *Comp_comm_group_mgt_mgr::get_all_components_ids()$/;"	f	class:Comp_comm_group_mgt_mgr
get_all_descendant_real_comp_fullnames	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::get_all_descendant_real_comp_fullnames(int top_comp_id, std::vector<const char*> &all_descendant_real_comp_fullnames, char **temp_array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Comp_comm_group_mgt_node
get_all_export_interfaces_of_a_field	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::get_all_export_interfaces_of_a_field(int comp_id, const char *field_name, std::vector<const char*> &export_comp_full_names, std::vector<const char*> &export_interface_names)$/;"	f	class:Inout_interface_mgt
get_all_import_interfaces_of_a_component	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::get_all_import_interfaces_of_a_component(std::vector<Inout_interface*> &import_interfaces, const char *comp_full_name)$/;"	f	class:Inout_interface_mgt
get_all_import_interfaces_of_a_component	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::get_all_import_interfaces_of_a_component(std::vector<Inout_interface*> &import_interfaces, int comp_id)$/;"	f	class:Inout_interface_mgt
get_all_leaf_remap_grids	CoR/remap_grid_mgt.cxx	/^void Remap_grid_mgt::get_all_leaf_remap_grids(int *num_leaf_grids, Remap_grid_class **leaf_grids)$/;"	f	class:Remap_grid_mgt
get_all_unconnected_inout_interface_fields_info	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::get_all_unconnected_inout_interface_fields_info(std::vector<const char*> &all_descendant_real_comp_fullnames, char **temp_array_buffer, long &buffer_content_size, MPI_Comm comm)$/;"	f	class:Inout_interface_mgt
get_all_vertexes_of_one_cell_in_other_cell	CoR/remap_operator_c_interface.cxx	/^void get_all_vertexes_of_one_cell_in_other_cell(int num_vertexes_cell1,$/;"	f
get_annotation	Data_MGT/original_grid_mgt.cxx	/^const char *Original_grid_info::get_annotation()$/;"	f	class:Original_grid_info
get_annotation	Utils/annotation_mgt.cxx	/^const char *Annotation_mgt::get_annotation(int object_id, const char *tag)$/;"	f	class:Annotation_mgt
get_annotation_end	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_annotation_end() { return annotation_end; }$/;"	f	class:Comp_comm_group_mgt_node
get_annotation_start	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_annotation_start() { return annotation_start; }$/;"	f	class:Comp_comm_group_mgt_node
get_annotation_start	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_annotation_start() { return global_node_array[0]->get_annotation_start(); }$/;"	f	class:Comp_comm_group_mgt_mgr
get_are_all_restarted_fields_read	Data_MGT/restart_mgt.h	/^        bool get_are_all_restarted_fields_read() { return are_all_restarted_fields_read; }$/;"	f	class:Restart_mgt
get_are_vertex_values_set_in_default	CoR/remap_grid_class.h	/^        bool get_are_vertex_values_set_in_default() const { return are_vertex_values_set_in_default; }$/;"	f	class:Remap_grid_class
get_area_or_volumn	CoR/remap_grid_class.h	/^        double *get_area_or_volumn() { return area_or_volumn; }$/;"	f	class:Remap_grid_class
get_bottom_field	Runtime_MGT/coupling_generator.cxx	/^Field_mem_info *Coupling_connection::get_bottom_field(bool export_or_import, int bottom_field_indx)$/;"	f	class:Coupling_connection
get_bottom_field_id	Data_MGT/original_grid_mgt.h	/^        int get_bottom_field_id() { return bottom_field_id; }        $/;"	f	class:Original_grid_info
get_bottom_field_name	Data_MGT/original_grid_mgt.h	/^        const char *get_bottom_field_name() const { return bottom_field_name; }$/;"	f	class:Original_grid_info
get_bottom_field_variation_type	Data_MGT/original_grid_mgt.h	/^        int get_bottom_field_variation_type() const { return bottom_field_variation_type; }$/;"	f	class:Original_grid_info
get_boundary_max_lat	CoR/remap_grid_class.h	/^        double get_boundary_max_lat() { return boundary_max_lat; }$/;"	f	class:Remap_grid_class
get_boundary_max_lon	CoR/remap_grid_class.h	/^        double get_boundary_max_lon() { return boundary_max_lon; }$/;"	f	class:Remap_grid_class
get_boundary_min_lat	CoR/remap_grid_class.h	/^        double get_boundary_min_lat() { return boundary_min_lat; }$/;"	f	class:Remap_grid_class
get_boundary_min_lon	CoR/remap_grid_class.h	/^        double get_boundary_min_lon() { return boundary_min_lon; }$/;"	f	class:Remap_grid_class
get_bounding_circle_center_lat	CoR/grid_cell_search.h	/^        double get_bounding_circle_center_lat() const { return bounding_circle_center_lat; }$/;"	f	class:H2D_grid_cell_search_cell
get_bounding_circle_center_lon	CoR/grid_cell_search.h	/^        double get_bounding_circle_center_lon() const { return bounding_circle_center_lon; }$/;"	f	class:H2D_grid_cell_search_cell
get_bounding_circle_radius	CoR/grid_cell_search.h	/^        double get_bounding_circle_radius() const { return bounding_circle_radius; }$/;"	f	class:H2D_grid_cell_search_cell
get_buf_mark	Data_MGT/memory_mgt.h	/^        int get_buf_mark() const { return buf_mark; }$/;"	f	class:Field_mem_info
get_buffer_content	Data_MGT/restart_mgt.h	/^        const char *get_buffer_content() { return buffer_content; }$/;"	f	class:Restart_buffer_container
get_buffer_content_iter	Data_MGT/restart_mgt.h	/^        long get_buffer_content_iter() { return buffer_content_iter; }$/;"	f	class:Restart_buffer_container
get_buffer_content_iter	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_buffer_content_iter() { return buffer_content_iter; }$/;"	f	class:Comp_comm_group_mgt_node
get_buffer_content_iter_ptr	Data_MGT/restart_mgt.h	/^        long *get_buffer_content_iter_ptr() { return &buffer_content_iter; }$/;"	f	class:Restart_buffer_container
get_buffer_content_ptr	Data_MGT/restart_mgt.h	/^        char **get_buffer_content_ptr() { return &buffer_content; }$/;"	f	class:Restart_buffer_container
get_buffer_content_size	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_buffer_content_size() { return buffer_content_size; }$/;"	f	class:Comp_comm_group_mgt_node
get_buffer_max_size_ptr	Data_MGT/restart_mgt.h	/^        long *get_buffer_max_size_ptr() { return &buffer_max_size; }$/;"	f	class:Restart_buffer_container
get_bypass_counter	Runtime_MGT/inout_interface_mgt.h	/^        long get_bypass_counter() { return bypass_counter; } $/;"	f	class:Inout_interface
get_bypass_import_fields_at_read	Data_MGT/restart_mgt.h	/^        bool get_bypass_import_fields_at_read() { return bypass_import_fields_at_read; }$/;"	f	class:Restart_mgt
get_case_name	Driver/timer_mgt.h	/^        const char *get_case_name() { return case_name; }$/;"	f	class:Time_mgt
get_ccpl_comp_log_file_device	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_comp_log_file_device$/;"	f
get_ccpl_comp_log_file_name	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_comp_log_file_name$/;"	f
get_ccpl_current_date	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_current_date$/;"	f
get_ccpl_current_num_days_in_year	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_current_num_days_in_year$/;"	f
get_ccpl_current_number_of_step	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_current_number_of_step$/;"	f
get_ccpl_current_second	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_current_second$/;"	f
get_ccpl_current_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_current_time$/;"	f
get_ccpl_current_year	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_current_year$/;"	f
get_ccpl_double_current_calendar_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_double_current_calendar_time$/;"	f
get_ccpl_float_current_calendar_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_float_current_calendar_time$/;"	f
get_ccpl_import_fields_sender_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_import_fields_sender_time$/;"	f
get_ccpl_num_elapsed_days_from_reference_date	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_num_elapsed_days_from_reference_date$/;"	f
get_ccpl_num_elapsed_days_from_start_date	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_num_elapsed_days_from_start_date$/;"	f
get_ccpl_num_total_step	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_num_total_step$/;"	f
get_ccpl_original_case_name	Driver/coupling_interface.cxx	/^    extern "C" void get_ccpl_original_case_name$/;"	f
get_ccpl_previous_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_previous_time$/;"	f
get_ccpl_restart_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_restart_time$/;"	f
get_ccpl_run_type	Driver/coupling_interface.cxx	/^    extern "C" void get_ccpl_run_type$/;"	f
get_ccpl_start_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_start_time$/;"	f
get_ccpl_stop_time	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_stop_time$/;"	f
get_ccpl_time_step	Driver/coupling_interface.cxx	/^extern "C" void get_ccpl_time_step$/;"	f
get_cell	CoR/grid_cell_search.cxx	/^const H2D_grid_cell_search_cell* H2D_grid_cell_search_engine::get_cell(int cell_index) const$/;"	f	class:H2D_grid_cell_search_engine
get_cell_center_coord_values_of_dst_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_center_coord_values_of_dst_grid(long cell_index, double *center_values)$/;"	f
get_cell_center_coord_values_of_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_center_coord_values_of_grid(Remap_operator_grid *grid, long cell_index, double *center_values)$/;"	f
get_cell_center_coord_values_of_src_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_center_coord_values_of_src_grid(long cell_index, double *center_values)$/;"	f
get_cell_index	CoR/grid_cell_search.h	/^        int get_cell_index() const { return cell_index; }$/;"	f	class:H2D_grid_cell_search_cell
get_cell_mask_of_dst_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_mask_of_dst_grid(long cell_index, bool *mask_value)$/;"	f
get_cell_mask_of_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_mask_of_grid(Remap_operator_grid *grid, long cell_index, bool *mask_value)$/;"	f
get_cell_mask_of_src_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_mask_of_src_grid(long cell_index, bool *mask_value)$/;"	f
get_cell_vertex_coord_values_of_dst_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_vertex_coord_values_of_dst_grid(long cell_index, int *num_vertex, double *vertex_values, bool check_consistency)$/;"	f
get_cell_vertex_coord_values_of_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_vertex_coord_values_of_grid(Remap_operator_grid *grid, long cell_index, int *num_vertex, double *vertex_values, bool check_consistency)$/;"	f
get_cell_vertex_coord_values_of_src_grid	CoR/remap_operator_c_interface.cxx	/^void get_cell_vertex_coord_values_of_src_grid(long cell_index, int *num_vertex, double *vertex_values, bool check_consistency)$/;"	f
get_center_coord_values	CoR/remap_operator_grid.h	/^        double **get_center_coord_values() { return center_coord_values; }$/;"	f	class:Remap_operator_grid
get_center_coordinates	CoR/delaunay_voronoi.cxx	/^void Triangle::get_center_coordinates()$/;"	f	class:Triangle
get_center_lat	CoR/grid_cell_search.h	/^        double get_center_lat() const { return center_lat; }$/;"	f	class:H2D_grid_cell_search_cell
get_center_lat_values	Data_MGT/original_grid_mgt.cxx	/^double *Original_grid_info::get_center_lat_values()$/;"	f	class:Original_grid_info
get_center_lon	CoR/grid_cell_search.h	/^        double get_center_lon() const { return center_lon; }$/;"	f	class:H2D_grid_cell_search_cell
get_center_lon_values	Data_MGT/original_grid_mgt.cxx	/^double *Original_grid_info::get_center_lon_values()$/;"	f	class:Original_grid_info
get_checksum_H2D_mask	Data_MGT/original_grid_mgt.h	/^        long get_checksum_H2D_mask() { return checksum_H2D_mask; }$/;"	f	class:Original_grid_info
get_checksum_mask	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_info::get_checksum_mask(int comp_id, const char *mask_label, int grid_size, long &checksum_mask)$/;"	f	class:H2D_remapping_wgt_file_info
get_child	Parallel_MGT/compset_communicators_info_mgt.h	/^        Comp_comm_group_mgt_node *get_child(int indx) { return children[indx]; }$/;"	f	class:Comp_comm_group_mgt_node
get_child_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface *Inout_interface::get_child_interface(int i)$/;"	f	class:Inout_interface
get_comm_group	Parallel_MGT/compset_communicators_info_mgt.h	/^        MPI_Comm get_comm_group() const { return comm_group; }$/;"	f	class:Comp_comm_group_mgt_node
get_comm_group_of_local_comp	Parallel_MGT/compset_communicators_info_mgt.cxx	/^MPI_Comm Comp_comm_group_mgt_mgr::get_comm_group_of_local_comp(int local_comp_id, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
get_common_restart_full_time	Driver/timer_mgt.h	/^        long get_common_restart_full_time() { return common_restart_full_time; }$/;"	f	class:Time_mgt
get_comp_ccpl_log_file_name	Parallel_MGT/compset_communicators_info_mgt.cxx	/^const char *Comp_comm_group_mgt_mgr::get_comp_ccpl_log_file_name(int comp_id)$/;"	f	class:Comp_comm_group_mgt_mgr
get_comp_ccpl_log_file_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_comp_ccpl_log_file_name() { return comp_ccpl_log_file_name; } $/;"	f	class:Comp_comm_group_mgt_node
get_comp_full_name	Data_MGT/original_grid_mgt.h	/^        const char *get_comp_full_name() { return comp_full_name; }$/;"	f	class:Original_grid_info
get_comp_full_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_comp_full_name() const { return full_name; }$/;"	f	class:Comp_comm_group_mgt_node
get_comp_full_name	Runtime_MGT/inout_interface_mgt.h	/^        const char *get_comp_full_name() { return comp_full_name; }$/;"	f	class:Inout_interface
get_comp_id	Data_MGT/IO_field_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:IO_field
get_comp_id	Data_MGT/memory_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:Field_mem_info
get_comp_id	Data_MGT/original_grid_mgt.h	/^        int get_comp_id() const { return comp_id; }$/;"	f	class:Original_grid_info
get_comp_id	Data_MGT/restart_mgt.cxx	/^int Restart_mgt::get_comp_id() $/;"	f	class:Restart_mgt
get_comp_id	Driver/timer_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:Coupling_timer
get_comp_id	Driver/timer_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:Time_mgt
get_comp_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_comp_id() const { return comp_id; }$/;"	f	class:Comp_comm_group_mgt_node
get_comp_id	Parallel_MGT/decomp_info_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:Decomp_info
get_comp_id	Runtime_MGT/inout_interface_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:Inout_interface
get_comp_id	Runtime_MGT/remapping_configuration_mgt.h	/^        int get_comp_id() { return comp_id; }$/;"	f	class:Remapping_configuration
get_comp_id_of_decomp	Parallel_MGT/decomp_info_mgt.cxx	/^int Decomp_info_mgt::get_comp_id_of_decomp(int decomp_id) const$/;"	f	class:Decomp_info_mgt
get_comp_id_of_grid	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::get_comp_id_of_grid(int grid_id) const$/;"	f	class:Original_grid_mgt
get_comp_model_log_file	Parallel_MGT/compset_communicators_info_mgt.cxx	/^const char *Comp_comm_group_mgt_mgr::get_comp_model_log_file(int comp_id, int &device_id)$/;"	f	class:Comp_comm_group_mgt_mgr
get_comp_model_log_file	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_comp_model_log_file(int &device_id) { device_id = comp_model_log_file_device; return comp_model_log_file_name; }$/;"	f	class:Comp_comm_group_mgt_node
get_comp_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_comp_name() const { return comp_name; }$/;"	f	class:Comp_comm_group_mgt_node
get_comp_or_grid_id	Data_MGT/memory_mgt.h	/^        int get_comp_or_grid_id() const { return comp_or_grid_id; }$/;"	f	class:Field_mem_info
get_comp_proc_global_id	Driver/coupling_interface.cxx	/^extern "C" void get_comp_proc_global_id$/;"	f
get_comp_type	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_comp_type() const { return comp_type; }$/;"	f	class:Comp_comm_group_mgt_node
get_component_IO_output_procedures	Data_MGT/IO_field_mgt.cxx	/^Component_IO_output_procedures *Components_IO_output_procedures_mgt::get_component_IO_output_procedures(int comp_id)$/;"	f	class:Components_IO_output_procedures_mgt
get_components_exports_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_components_exports_dir() { return components_exports_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_components_processes_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_components_processes_dir() { return components_processes_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_comps_ending_config_status_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_comps_ending_config_status_dir() { return comps_ending_config_status_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_config_root_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_config_root_dir() { return runtime_config_root_dir; }    $/;"	f	class:Comp_comm_group_mgt_mgr
get_convex_set	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::get_convex_set(int num_points, double *lat_values, double *lon_values, double min_lon, double max_lon, int &num_convex_set_points, int **convex_set_points_indx_ptr)$/;"	f	class:Delaunay_Voronoi
get_coord_label	CoR/remap_grid_class.h	/^        const char *get_coord_label() const { return coord_label; }$/;"	f	class:Remap_grid_class
get_coord_unit	CoR/remap_grid_class.h	/^        const char *get_coord_unit() const { return coord_unit; }$/;"	f	class:Remap_grid_class
get_coord_value_grid	CoR/remap_grid_data_class.h	/^        Remap_grid_class *get_coord_value_grid() { return coord_value_grid; }$/;"	f	class:Remap_grid_data_class
get_coupling_connection	Runtime_MGT/inout_interface_mgt.h	/^        Coupling_connection* get_coupling_connection(){return coupling_connection;}$/;"	f	class:Connection_coupling_procedure
get_coupling_connections_dumped	Runtime_MGT/inout_interface_mgt.h	/^        bool get_coupling_connections_dumped(){return coupling_connections_dumped;}$/;"	f	class:Connection_coupling_procedure
get_current_date	Driver/timer_mgt.cxx	/^int Time_mgt::get_current_date()$/;"	f	class:Time_mgt
get_current_day	Driver/timer_mgt.h	/^        int get_current_day() { return current_day; }$/;"	f	class:Time_mgt
get_current_full_time	Driver/timer_mgt.cxx	/^long Time_mgt::get_current_full_time()$/;"	f	class:Time_mgt
get_current_grid2D_search_engine	CoR/remap_operator_c_interface.cxx	/^H2D_grid_cell_search_engine *get_current_grid2D_search_engine(bool is_src_grid)$/;"	f
get_current_hour	Driver/timer_mgt.h	/^        int get_current_hour() { return current_second \/3600; }$/;"	f	class:Time_mgt
get_current_minute	Driver/timer_mgt.h	/^        int get_current_minute() { return (current_second % 3600) \/ 60; }$/;"	f	class:Time_mgt
get_current_month	Driver/timer_mgt.h	/^        int get_current_month() { return current_month; }$/;"	f	class:Time_mgt
get_current_num_days_in_year	Driver/timer_mgt.cxx	/^int Time_mgt::get_current_num_days_in_year()$/;"	f	class:Time_mgt
get_current_num_elapsed_day	Driver/timer_mgt.h	/^        int get_current_num_elapsed_day() { return current_num_elapsed_day; }$/;"	f	class:Time_mgt
get_current_num_time_step	Driver/timer_mgt.cxx	/^int Time_mgt::get_current_num_time_step()$/;"	f	class:Time_mgt
get_current_proc_global_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_current_proc_global_id() { return current_proc_global_id; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_current_proc_id_in_comp	Driver/coupling_interface.cxx	/^extern "C" void get_current_proc_id_in_comp$/;"	f
get_current_proc_id_in_comp	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_mgr::get_current_proc_id_in_comp(int comp_id, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
get_current_proc_local_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_current_proc_local_id() const { return current_proc_local_id; }$/;"	f	class:Comp_comm_group_mgt_node
get_current_second	Driver/timer_mgt.h	/^        int get_current_second() { return current_second; }$/;"	f	class:Time_mgt
get_current_step_id	Driver/timer_mgt.h	/^        int get_current_step_id() { return current_step_id; }$/;"	f	class:Time_mgt
get_current_time	Driver/timer_mgt.cxx	/^void Time_mgt::get_current_time(int &year, int &month, int &day, int &second, int shift_second, const char *annotation)$/;"	f	class:Time_mgt
get_current_year	Driver/timer_mgt.h	/^        int get_current_year() { return current_year; }$/;"	f	class:Time_mgt
get_data_buf	Data_MGT/memory_mgt.h	/^        void *get_data_buf() { return grided_field_data->get_grid_data_field()->data_buf; }$/;"	f	class:Field_mem_info
get_data_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        void * get_data_buf() {return data_buf;}$/;"	f	class:Runtime_trans_algorithm
get_data_buf_size	Runtime_MGT/runtime_trans_algorithm.h	/^        int get_data_buf_size() {return data_buf_size;}$/;"	f	class:Runtime_trans_algorithm
get_data_grid_dst	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *get_data_grid_dst() { return data_grid_dst; }$/;"	f	class:Remap_weight_of_strategy_class
get_data_grid_src	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *get_data_grid_src() { return data_grid_src; }$/;"	f	class:Remap_weight_of_strategy_class
get_data_transfer_field_instance	Runtime_MGT/inout_interface_mgt.cxx	/^Field_mem_info *Connection_coupling_procedure::get_data_transfer_field_instance(int i)$/;"	f	class:Connection_coupling_procedure
get_data_type	Data_MGT/memory_mgt.cxx	/^const char *Field_mem_info::get_data_type()$/;"	f	class:Field_mem_info
get_data_type_size	CoR/cor_global_data.cxx	/^int get_data_type_size(const char *data_type)$/;"	f
get_decomp_grid	Parallel_MGT/decomp_grid_mgt.h	/^        Remap_grid_class *get_decomp_grid() { return decomp_grid; }$/;"	f	class:Decomp_grid_info
get_decomp_id	Data_MGT/memory_mgt.h	/^        int get_decomp_id() const { return decomp_id; }$/;"	f	class:Field_mem_info
get_decomp_id	Parallel_MGT/decomp_grid_mgt.h	/^        int get_decomp_id() { return decomp_id; }$/;"	f	class:Decomp_grid_info
get_decomp_id	Parallel_MGT/decomp_info_mgt.h	/^        int get_decomp_id() { return decomp_id; }$/;"	f	class:Decomp_info
get_decomp_info	Parallel_MGT/decomp_info_mgt.cxx	/^Decomp_info *Decomp_info_mgt::get_decomp_info(int decomp_id)$/;"	f	class:Decomp_info_mgt
get_decomp_name	CoR/remap_grid_class.h	/^        const char *get_decomp_name() const { return decomp_name; }$/;"	f	class:Remap_grid_class
get_decomp_name	Data_MGT/memory_mgt.cxx	/^const char *Field_mem_info::get_decomp_name()$/;"	f	class:Field_mem_info
get_decomp_name	Parallel_MGT/decomp_grid_mgt.h	/^        const char *get_decomp_name() { return decomp_name; }$/;"	f	class:Decomp_grid_info
get_decomp_name	Parallel_MGT/decomp_info_mgt.h	/^        const char *get_decomp_name() { return decomp_name; }$/;"	f	class:Decomp_info
get_define_order_count	Data_MGT/memory_mgt.h	/^        long get_define_order_count() const { return define_order_count; }$/;"	f	class:Field_mem_info
get_dimension_size	CoR/io_binary.cxx	/^long IO_binary::get_dimension_size(const char *dim_name, MPI_Comm comm, bool is_root_proc)$/;"	f	class:IO_binary
get_dimension_size	CoR/io_mgt.cxx	/^long IO_mgt::get_dimension_size(const char *object_name, const char *dim_name, MPI_Comm comm, bool is_root_proc)$/;"	f	class:IO_mgt
get_dimension_size	CoR/io_netcdf.cxx	/^long IO_netcdf::get_dimension_size(const char *dim_name, MPI_Comm comm, bool is_root_proc)$/;"	f	class:IO_netcdf
get_double_current_calendar_time	Driver/timer_mgt.cxx	/^double Time_mgt::get_double_current_calendar_time(int shift_second, const char *annotation)$/;"	f	class:Time_mgt
get_dst_H2D_grid_area	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        double *get_dst_H2D_grid_area() { return dst_H2D_grid_area; }$/;"	f	class:Runtime_remapping_weights
get_dst_area	Runtime_MGT/remapping_configuration_mgt.h	/^        double *get_dst_area() { return dst_area; }$/;"	f	class:H2D_remapping_wgt_file_info
get_dst_comp_full_name	Runtime_MGT/coupling_generator.h	/^        const char *get_dst_comp_full_name() { return dst_comp_full_name; }$/;"	f	class:Coupling_connection
get_dst_comp_node	Parallel_MGT/routing_info_mgt.cxx	/^Comp_comm_group_mgt_node *Routing_info::get_dst_comp_node() $/;"	f	class:Routing_info
get_dst_decomp_info	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Decomp_info *get_dst_decomp_info() { return dst_decomp_info; }$/;"	f	class:Runtime_remapping_weights
get_dst_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        long get_dst_decomp_size() { return dst_decomp_size; }$/;"	f	class:Routing_info
get_dst_grid	CoR/remap_operator_basis.h	/^        Remap_grid_class *get_dst_grid() { return dst_grid; }$/;"	f	class:Remap_operator_basis
get_dst_interface_name	Runtime_MGT/coupling_generator.h	/^        const char *get_dst_interface_name() { return dst_interface_name; }$/;"	f	class:Coupling_connection
get_dst_original_grid	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Original_grid_info *get_dst_original_grid() { return dst_original_grid; }$/;"	f	class:Runtime_remapping_weights
get_dynamic_V1D_remap_weight_of_operator	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_class *Remap_weight_of_strategy_class::get_dynamic_V1D_remap_weight_of_operator()$/;"	f	class:Remap_weight_of_strategy_class
get_edge_type	CoR/grid_cell_search.h	/^        int get_edge_type() const { return edge_type; }$/;"	f	class:H2D_grid_cell_search_cell
get_elapsed_day_from_full_time	Driver/timer_mgt.cxx	/^long Time_mgt::get_elapsed_day_from_full_time(long full_time)$/;"	f	class:Time_mgt
get_elapsed_days_from_reference_date	Driver/timer_mgt.cxx	/^void Time_mgt::get_elapsed_days_from_reference_date(int *num_days, int *num_seconds)$/;"	f	class:Time_mgt
get_elapsed_days_from_start_date	Driver/timer_mgt.cxx	/^void Time_mgt::get_elapsed_days_from_start_date(int *num_days, int *num_seconds)$/;"	f	class:Time_mgt
get_exe_log_file_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_exe_log_file_name() { return exe_log_file_name; }        $/;"	f	class:Comp_comm_group_mgt_mgr
get_executable_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_executable_name() { return executable_name; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_field_IO_name	Data_MGT/IO_field_mgt.h	/^        const char *get_field_IO_name() { return field_IO_name; }$/;"	f	class:IO_field
get_field_IO_name	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::get_field_IO_name(char *field_IO_name, Field_mem_info *field_instance, const char *interface_name, const char*label, bool use_time_info)$/;"	f	class:Restart_mgt
get_field_data	Data_MGT/memory_mgt.h	/^        Remap_grid_data_class *get_field_data() { return grided_field_data; }$/;"	f	class:Field_mem_info
get_field_data_grid_dst	CoR/remap_weight_of_strategy_class.cxx	/^Remap_grid_class *Remap_weight_of_operator_instance_class::get_field_data_grid_dst() $/;"	f	class:Remap_weight_of_operator_instance_class
get_field_data_grid_dst	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *get_field_data_grid_dst() { return field_data_grid_dst; }$/;"	f	class:Remap_weight_of_operator_class
get_field_data_grid_in_remapping_process	CoR/remap_weight_of_strategy_class.cxx	/^Remap_grid_class *Remap_weight_of_strategy_class::get_field_data_grid_in_remapping_process(int i) $/;"	f	class:Remap_weight_of_strategy_class
get_field_data_grid_src	CoR/remap_weight_of_strategy_class.cxx	/^Remap_grid_class *Remap_weight_of_operator_instance_class::get_field_data_grid_src() $/;"	f	class:Remap_weight_of_operator_instance_class
get_field_data_grid_src	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *get_field_data_grid_src() { return field_data_grid_src; }$/;"	f	class:Remap_weight_of_operator_class
get_field_import_configuration	Runtime_MGT/coupling_generator.cxx	/^void Import_interface_configuration::get_field_import_configuration(const char *field_name, std::vector<std::pair<const char*, const char*> > &producers_info)$/;"	f	class:Import_interface_configuration
get_field_instance	Data_MGT/memory_mgt.cxx	/^Field_mem_info *Memory_mgt::get_field_instance(int field_instance_id)$/;"	f	class:Memory_mgt
get_field_instance_id	Data_MGT/IO_field_mgt.h	/^        int get_field_instance_id() { return field_instance_id; }$/;"	f	class:IO_field
get_field_instance_id	Data_MGT/memory_mgt.h	/^        int get_field_instance_id() const { return field_instance_id; }$/;"	f	class:Field_mem_info
get_field_long_name	Data_MGT/field_info_mgt.cxx	/^const char *Field_info_mgt::get_field_long_name(const char *field_name)$/;"	f	class:Field_info_mgt
get_field_name	Data_MGT/memory_mgt.h	/^        const char *get_field_name() const { return field_name; }$/;"	f	class:Field_mem_info
get_field_name	Runtime_MGT/inout_interface_mgt.cxx	/^const char *Inout_interface::get_field_name(int number)$/;"	f	class:Inout_interface
get_field_num_dims	Data_MGT/field_info_mgt.cxx	/^int Field_info_mgt::get_field_num_dims(const char *field_dim, const char *cfg_name)$/;"	f	class:Field_info_mgt
get_field_remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^bool Remapping_configuration::get_field_remapping_setting(Remapping_setting &field_remapping_configuration, const char *field_name)$/;"	f	class:Remapping_configuration
get_field_remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_configuration_mgt::get_field_remapping_setting(Remapping_setting &field_remapping_setting, int comp_id, const char *field_name)$/;"	f	class:Remapping_configuration_mgt
get_field_remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::get_field_remapping_setting(Remapping_setting &field_remapping_configuration, const char *field_name)$/;"	f	class:Remapping_setting
get_field_size	Data_MGT/memory_mgt.cxx	/^int Memory_mgt::get_field_size(void *data_buf, const char *annotation)$/;"	f	class:Memory_mgt
get_field_specification_manner	Runtime_MGT/remapping_configuration_mgt.h	/^        int get_field_specification_manner() { return field_specification_manner; }$/;"	f	class:Remapping_setting
get_field_unit	Data_MGT/field_info_mgt.cxx	/^const char *Field_info_mgt::get_field_unit(const char *field_name)$/;"	f	class:Field_info_mgt
get_fields_name	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::get_fields_name(std::vector<const char*> *fields_name)$/;"	f	class:Inout_interface
get_file_field_attribute	CoR/io_netcdf.cxx	/^bool IO_netcdf::get_file_field_attribute(const char *field_name, const char *attribute_name, char *attribute_value, char *data_type)$/;"	f	class:IO_netcdf
get_file_field_string_attribute	CoR/io_netcdf.cxx	/^bool IO_netcdf::get_file_field_string_attribute(const char *field_name, const char *attribute_name, char *attribute_value, char *data_type, MPI_Comm comm, bool is_root_proc)$/;"	f	class:IO_netcdf
get_file_name	CoR/io_basis.h	/^        const char* get_file_name() { return file_name; }$/;"	f	class:IO_basis
get_file_name_in_rpointer_file	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::get_file_name_in_rpointer_file(char *restart_file_name)$/;"	f	class:Restart_mgt
get_file_type	CoR/io_basis.h	/^        char *get_file_type() { return file_type; }$/;"	f	class:IO_basis
get_finish_status	Runtime_MGT/inout_interface_mgt.h	/^        bool get_finish_status() { return finish_status; }$/;"	f	class:Connection_coupling_procedure
get_first_super_grid_of_enable_setting_coord_value	CoR/remap_grid_class.h	/^        Remap_grid_class *get_first_super_grid_of_enable_setting_coord_value() { return first_super_grid_of_enable_setting_coord_value; }$/;"	f	class:Remap_grid_class
get_float_current_calendar_time	Driver/timer_mgt.cxx	/^float Time_mgt::get_float_current_calendar_time(int shift_second, const char *annotation)$/;"	f	class:Time_mgt
get_float_value_from_parameter	CoR/syntax_check.cxx	/^double get_float_value_from_parameter(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
get_frequency_count	Driver/timer_mgt.h	/^        int get_frequency_count() { return frequency_count; }$/;"	f	class:Coupling_timer
get_frequency_unit	Driver/timer_mgt.h	/^        const char *get_frequency_unit() { return frequency_unit; }$/;"	f	class:Coupling_timer
get_full_name	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_full_name() { return full_name; }$/;"	f	class:Comp_comm_group_mgt_node
get_global_field	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Field_mem_info *Gather_scatter_rearrange_info::get_global_field(Field_mem_info *local_field_mem)$/;"	f	class:Gather_scatter_rearrange_info
get_global_node_of_local_comp	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node *Comp_comm_group_mgt_mgr::get_global_node_of_local_comp(int local_comp_id, bool is_external_call, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
get_global_node_root	Parallel_MGT/compset_communicators_info_mgt.h	/^        Comp_comm_group_mgt_node *get_global_node_root() { return global_node_root; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_grid2D_search_engine	CoR/remap_operator_grid.h	/^        H2D_grid_cell_search_engine *get_grid2D_search_engine() const { return grid2D_search_engine; }$/;"	f	class:Remap_operator_grid
get_grid_center_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::get_grid_center_field() const$/;"	f	class:Remap_grid_class
get_grid_center_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::get_grid_center_field(const char *label) const$/;"	f	class:Remap_grid_class
get_grid_cyclic	CoR/remap_grid_class.h	/^        bool get_grid_cyclic() const { return cyclic; }$/;"	f	class:Remap_grid_class
get_grid_data	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::get_grid_data(int decomp_id, const char *label, const char *data_type, int array_size, char *grid_data, const char *annotation, const char *API_label)$/;"	f	class:Original_grid_info
get_grid_data_field	CoR/remap_grid_data_class.h	/^        Remap_data_field *get_grid_data_field() const { return grid_data_field; }$/;"	f	class:Remap_grid_data_class
get_grid_field_checksum_value	Runtime_MGT/remapping_configuration_mgt.cxx	/^long H2D_remapping_wgt_file_info::get_grid_field_checksum_value(const char *field_name, IO_netcdf *netcdf_file_object, int grid_size, MPI_Comm comm, bool is_root_proc)$/;"	f	class:H2D_remapping_wgt_file_info
get_grid_id	Data_MGT/memory_mgt.h	/^        int get_grid_id() { return grid_id; }$/;"	f	class:Field_mem_info
get_grid_id	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::get_grid_id(int comp_id, const char *grid_name, const char *annotation)$/;"	f	class:Original_grid_mgt
get_grid_id	Data_MGT/original_grid_mgt.h	/^        int get_grid_id() const { return grid_id; }$/;"	f	class:Original_grid_info
get_grid_id	Driver/coupling_interface.cxx	/^extern "C" void get_grid_id$/;"	f
get_grid_id	Parallel_MGT/decomp_info_mgt.h	/^        int get_grid_id() { return grid_id; }$/;"	f	class:Decomp_info
get_grid_imported_area	CoR/remap_grid_class.h	/^        Remap_grid_data_class *get_grid_imported_area() const { return imported_area; }$/;"	f	class:Remap_grid_class
get_grid_index_interchange_table	CoR/remap_grid_class.cxx	/^void Remap_grid_class::get_grid_index_interchange_table(Remap_grid_class *interchange_grid, int *index_interchange_table) $/;"	f	class:Remap_grid_class
get_grid_mask_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *get_grid_mask_field() const { return grid_mask_field; }$/;"	f	class:Remap_grid_class
get_grid_name	CoR/remap_grid_class.h	/^        const char *get_grid_name() const { return grid_name; }$/;"	f	class:Remap_grid_class
get_grid_name	Data_MGT/memory_mgt.cxx	/^const char *Field_mem_info::get_grid_name() $/;"	f	class:Field_mem_info
get_grid_name	Data_MGT/original_grid_mgt.h	/^        const char *get_grid_name() const { return grid_name; }$/;"	f	class:Original_grid_info
get_grid_name	Parallel_MGT/decomp_info_mgt.h	/^        const char *get_grid_name() { return grid_name; }$/;"	f	class:Decomp_info
get_grid_size	CoR/remap_grid_class.h	/^        long get_grid_size() const { return grid_size; }$/;"	f	class:Remap_grid_class
get_grid_size	CoR/remap_operator_grid.h	/^        long get_grid_size() { return grid_size; }$/;"	f	class:Remap_operator_grid
get_grid_size	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::get_grid_size(int grid_id, const char *annotation) const$/;"	f	class:Original_grid_mgt
get_grid_size	Driver/coupling_interface.cxx	/^extern "C" void get_grid_size$/;"	f
get_grid_vertex_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::get_grid_vertex_field() const$/;"	f	class:Remap_grid_class
get_h2d_grid_area_in_remapping_weights	Driver/coupling_interface.cxx	/^extern "C" void get_h2d_grid_area_in_remapping_weights$/;"	f
get_h2d_grid_area_in_remapping_weights	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface::get_h2d_grid_area_in_remapping_weights(const char *interface_name, int field_index, void *output_area_data, int area_array_size, const char *data_type, const char *annotation)$/;"	f	class:Inout_interface
get_h2d_grid_area_in_remapping_weights	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface_mgt::get_h2d_grid_area_in_remapping_weights(int interface_id, int field_index, void *output_area_data, int area_array_size, const char *data_type, const char *annotation)$/;"	f	class:Inout_interface_mgt
get_h2d_grid_data	Driver/coupling_interface.cxx	/^extern "C" void get_h2d_grid_data$/;"	f
get_higher_dimension_size_of_leaf_grid	CoR/remap_grid_class.cxx	/^long Remap_grid_class::get_higher_dimension_size_of_leaf_grid(Remap_grid_data_class *remap_grid_data_field, Remap_grid_class *leaf_grid) $/;"	f	class:Remap_grid_class
get_history_receive_sender_time	Runtime_MGT/runtime_trans_algorithm.cxx	/^long Runtime_trans_algorithm::get_history_receive_sender_time()$/;"	f	class:Runtime_trans_algorithm
get_host_comp_id	Data_MGT/memory_mgt.h	/^        int get_host_comp_id() { return host_comp_id; }$/;"	f	class:Field_mem_info
get_host_comp_id	Parallel_MGT/decomp_info_mgt.h	/^        int get_host_comp_id() { return host_comp_id; }$/;"	f	class:Decomp_info
get_hybrid_grid_coefficient_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *get_hybrid_grid_coefficient_field() { return hybrid_grid_coefficient_field; }$/;"	f	class:Remap_grid_class
get_id_of_component	Driver/coupling_interface.cxx	/^extern "C" void get_id_of_component$/;"	f
get_indexes_dst_grid	CoR/remap_weight_sparse_matrix.h	/^        long *get_indexes_dst_grid() { return cells_indexes_dst; }$/;"	f	class:Remap_weight_sparse_matrix
get_indexes_src_grid	CoR/remap_weight_sparse_matrix.h	/^        long *get_indexes_src_grid() { return cells_indexes_src; }$/;"	f	class:Remap_weight_sparse_matrix
get_inout_interface	Runtime_MGT/inout_interface_mgt.h	/^        Inout_interface *get_inout_interface() { return inout_interface; }$/;"	f	class:Connection_coupling_procedure
get_input_restart_mgt_info_file	Data_MGT/restart_mgt.cxx	/^const char *Restart_buffer_container::get_input_restart_mgt_info_file()$/;"	f	class:Restart_buffer_container
get_input_restart_mgt_info_file	Data_MGT/restart_mgt.cxx	/^const char *Restart_mgt::get_input_restart_mgt_info_file()$/;"	f	class:Restart_mgt
get_inst_or_aver	Runtime_MGT/inout_interface_mgt.h	/^        int get_inst_or_aver() { return inst_or_aver; } $/;"	f	class:Inout_interface
get_int_value_from_parameter	CoR/syntax_check.cxx	/^long get_int_value_from_parameter(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
get_interchange_index	CoR/remap_statement_operand.cxx	/^long get_interchange_index(long index_iter_src,$/;"	f
get_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface *Inout_interface_mgt::get_interface(const char *comp_full_name, const char *interface_name)$/;"	f	class:Inout_interface_mgt
get_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface *Inout_interface_mgt::get_interface(int comp_id, const char *interface_name)$/;"	f	class:Inout_interface_mgt
get_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface *Inout_interface_mgt::get_interface(int interface_id)$/;"	f	class:Inout_interface_mgt
get_interface_field_import_configuration	Runtime_MGT/coupling_generator.cxx	/^void Component_import_interfaces_configuration::get_interface_field_import_configuration(const char *interface_name, const char *field_name, std::vector<std::pair<const char*, const char*> > &producers_info)$/;"	f	class:Component_import_interfaces_configuration
get_interface_id	Runtime_MGT/inout_interface_mgt.h	/^        int get_interface_id() { return interface_id; }$/;"	f	class:Inout_interface
get_interface_level_grid	Data_MGT/original_grid_mgt.h	/^        Original_grid_info *get_interface_level_grid() { return interface_level_grid; }$/;"	f	class:Original_grid_info
get_interface_name	Runtime_MGT/coupling_generator.h	/^        const char *get_interface_name() { return interface_name; }$/;"	f	class:Import_interface_configuration
get_interface_name	Runtime_MGT/inout_interface_mgt.h	/^        const char *get_interface_name() { return interface_name; }$/;"	f	class:Inout_interface
get_interface_source	Runtime_MGT/inout_interface_mgt.h	/^        int get_interface_source() { return interface_source; }$/;"	f	class:Inout_interface
get_interface_type	Runtime_MGT/inout_interface_mgt.h	/^        int get_interface_type() { return interface_type; }$/;"	f	class:Inout_interface
get_internal_H2D_grids_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_internal_H2D_grids_dir() { return internal_H2D_grids_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_internal_remapping_weights_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^		const char *get_internal_remapping_weights_dir() { return internal_remapping_weights_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_is_bottom_field_dynamic	Runtime_MGT/coupling_generator.cxx	/^bool Coupling_connection::get_is_bottom_field_dynamic(int field_indx)$/;"	f	class:Coupling_connection
get_is_child_interface	Runtime_MGT/inout_interface_mgt.h	/^        bool get_is_child_interface() { return is_child_interface; }$/;"	f	class:Inout_interface
get_is_coupling_time_out_of_execution	Runtime_MGT/inout_interface_mgt.h	/^        bool get_is_coupling_time_out_of_execution() { return is_coupling_time_out_of_execution; }$/;"	f	class:Connection_coupling_procedure
get_is_fully_grid_decomp	Parallel_MGT/decomp_info_mgt.h	/^        bool get_is_fully_grid_decomp() { return num_local_cells == num_global_cells; }$/;"	f	class:Decomp_info
get_is_leap_year_on	Driver/timer_mgt.h	/^        bool get_is_leap_year_on() { return leap_year_on; }$/;"	f	class:Time_mgt
get_is_operator_regridding	CoR/remap_operator_basis.h	/^        bool get_is_operator_regridding() { return is_operator_regriding; }$/;"	f	class:Remap_operator_basis
get_is_registered_model_buf	Data_MGT/memory_mgt.h	/^        bool get_is_registered_model_buf() { return is_registered_model_buf; }$/;"	f	class:Field_mem_info
get_is_rotated_grid	CoR/remap_operator_grid.h	/^        bool get_is_rotated_grid() { return is_rotated_grid; }$/;"	f	class:Remap_operator_grid
get_is_sphere_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::get_is_sphere_grid() const$/;"	f	class:Remap_grid_class
get_is_sphere_grid	CoR/remap_operator_basis.h	/^        bool get_is_sphere_grid() { return src_grid->get_is_sphere_grid(); }$/;"	f	class:Remap_operator_basis
get_last_define_time	Data_MGT/memory_mgt.h	/^        long get_last_define_time() const { return last_define_time; }$/;"	f	class:Field_mem_info
get_last_receive_sender_time	Runtime_MGT/inout_interface_mgt.h	/^		long get_last_receive_sender_time() { return last_receive_sender_time; }$/;"	f	class:Connection_coupling_procedure
get_latest_connection_id	Runtime_MGT/coupling_generator.h	/^        int get_latest_connection_id() { return latest_connection_id; }$/;"	f	class:Coupling_generator
get_leaf_grids	CoR/remap_grid_class.cxx	/^void Remap_grid_class::get_leaf_grids(int *num_leaf_grids, Remap_grid_class **leaf_grids, const Remap_grid_class *top_grid) const$/;"	f	class:Remap_grid_class
get_level_V3D_coord_dynamic_trigger_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *get_level_V3D_coord_dynamic_trigger_field() { return level_V3D_coord_dynamic_trigger_field; }$/;"	f	class:Remap_grid_class
get_level_V3D_coord_trigger_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *get_level_V3D_coord_trigger_field() { return level_V3D_coord_trigger_field; }$/;"	f	class:Remap_grid_class
get_linked_grid_from_array	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::get_linked_grid_from_array(Remap_grid_class *top_grid, const char *grid_name_suffix, char *temp_grid_name)$/;"	f	class:Remap_grid_class
get_local_cell_global_indx	Parallel_MGT/decomp_info_mgt.h	/^        const int *get_local_cell_global_indx() { return local_cell_global_indx; }$/;"	f	class:Decomp_info
get_local_comp_full_name	Driver/coupling_interface.cxx	/^extern "C" void get_local_comp_full_name$/;"	f
get_local_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        long get_local_decomp_size() { return local_decomp_size; }$/;"	f	class:Routing_info
get_local_grid_id	Data_MGT/original_grid_mgt.h	/^        int get_local_grid_id() const { return grid_id; }$/;"	f	class:Original_grid_info
get_local_indx_segment_lengths_with_remote_proc	Parallel_MGT/routing_info_mgt.h	/^        int *get_local_indx_segment_lengths_with_remote_proc(bool is_send, int i) { return get_routing_info(is_send,i)->local_indx_segment_lengths; }$/;"	f	class:Routing_info
get_local_indx_segment_starts_with_remote_proc	Parallel_MGT/routing_info_mgt.h	/^        int *get_local_indx_segment_starts_with_remote_proc(bool is_send, int i) { return get_routing_info(is_send,i)->local_indx_segment_starts; }$/;"	f	class:Routing_info
get_local_lag_count	Driver/timer_mgt.h	/^        int get_local_lag_count() { return local_lag_count; } $/;"	f	class:Coupling_timer
get_local_node_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_local_node_id() { return comp_id; }$/;"	f	class:Comp_comm_group_mgt_node
get_local_proc_global_id	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_node::get_local_proc_global_id(int local_indx)$/;"	f	class:Comp_comm_group_mgt_node
get_lower_dimension_size_of_leaf_grid	CoR/remap_grid_class.cxx	/^long Remap_grid_class::get_lower_dimension_size_of_leaf_grid(Remap_grid_data_class *remap_grid_data_field, Remap_grid_class *leaf_grid) $/;"	f	class:Remap_grid_class
get_mask	CoR/grid_cell_search.h	/^        bool get_mask() const { return mask; }$/;"	f	class:H2D_grid_cell_search_cell
get_mask_values	CoR/remap_operator_grid.h	/^        bool *get_mask_values() { return mask_values; }$/;"	f	class:Remap_operator_grid
get_masked_sub_grids	CoR/remap_grid_class.cxx	/^void Remap_grid_class::get_masked_sub_grids(int *num_masked_sub_grids, Remap_grid_class **masked_sub_grids) $/;"	f	class:Remap_grid_class
get_max_remote_lag_seconds	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_node::get_max_remote_lag_seconds()$/;"	f	class:Comp_comm_group_mgt_node
get_max_value_in_array	Utils/common_utils.h	/^template <typename T> void get_max_value_in_array(T *array, int array_size, bool have_missing_value, T missing_value, T &max_value)$/;"	f
get_mid_point_grid	CoR/remap_grid_class.h	/^		Remap_grid_class *get_mid_point_grid() { return mid_point_grid; }$/;"	f	class:Remap_grid_class
get_mid_point_grid	Data_MGT/original_grid_mgt.h	/^        Original_grid_info *get_mid_point_grid() { return mid_point_grid; }$/;"	f	class:Original_grid_info
get_min_remote_lag_seconds	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_node::get_min_remote_lag_seconds()$/;"	f	class:Comp_comm_group_mgt_node
get_min_value_in_array	Utils/common_utils.h	/^template <typename T> void get_min_value_in_array(T *array, int array_size, bool have_missing_value, T missing_value, T &min_value)$/;"	f
get_name_of_grid	Data_MGT/original_grid_mgt.cxx	/^const char *Original_grid_mgt::get_name_of_grid(int grid_id) const$/;"	f	class:Original_grid_mgt
get_near_optimal_bilinear_box	CoR/remap_operator_bilinear.cxx	/^bool Remap_operator_bilinear::get_near_optimal_bilinear_box(double* dst_cell_center_values, $/;"	f	class:Remap_operator_bilinear
get_near_optimal_bilinear_box_recursively	CoR/remap_operator_bilinear.cxx	/^bool Remap_operator_bilinear::get_near_optimal_bilinear_box_recursively(double **distances_of_src_points_in_each_quadrant,$/;"	f	class:Remap_operator_bilinear
get_nearest_point	CoR/delaunay_voronoi.cxx	/^vector<Point*>::iterator get_nearest_point(const Point *pt, vector<Point*> *points)$/;"	f
get_next_attr	Utils/common_utils.cxx	/^bool get_next_attr(char *attr, char **line)$/;"	f
get_next_double_attr	Utils/common_utils.cxx	/^bool get_next_double_attr(char **line, double &value)$/;"	f
get_next_integer_attr	Utils/common_utils.cxx	/^bool get_next_integer_attr(char **line, int &value)$/;"	f
get_next_interface_id	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface_mgt::get_next_interface_id()$/;"	f	class:Inout_interface_mgt
get_next_line	Utils/common_utils.cxx	/^bool get_next_line(char *line, FILE *fp)$/;"	f
get_next_line_of_script_file	CoR/remap_parser.cxx	/^bool Remap_parser::get_next_line_of_script_file(char *line, FILE *fp)$/;"	f	class:Remap_parser
get_next_parsed_statement	CoR/remap_parser.cxx	/^bool Remap_parser::get_next_parsed_statement(int *num_words, char **words)$/;"	f	class:Remap_parser
get_next_word_in_line	CoR/remap_parser.cxx	/^bool Remap_parser::get_next_word_in_line(char *essential_word, char **line)$/;"	f	class:Remap_parser
get_num_children	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_num_children() { return children.size(); }$/;"	f	class:Comp_comm_group_mgt_node
get_num_coupling_procedures	Runtime_MGT/inout_interface_mgt.h	/^        int get_num_coupling_procedures() { return coupling_procedures.size(); }$/;"	f	class:Inout_interface
get_num_dimensions	CoR/remap_grid_class.h	/^        int get_num_dimensions() const { return num_dimensions; }$/;"	f	class:Remap_grid_class
get_num_dimensions	CoR/remap_operator_basis.h	/^        int get_num_dimensions() { return num_dimensions; }$/;"	f	class:Remap_operator_basis
get_num_dimensions	Parallel_MGT/routing_info_mgt.h	/^        int get_num_dimensions() { return num_dimensions; }$/;"	f	class:Routing_info
get_num_dst_fields	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface::get_num_dst_fields()$/;"	f	class:Inout_interface
get_num_elements_transferred_with_remote_proc	Parallel_MGT/routing_info_mgt.h	/^        int get_num_elements_transferred_with_remote_proc(bool is_send, int i) { return get_routing_info(is_send,i)->num_elements_transferred; }$/;"	f	class:Routing_info
get_num_field_data_grids_in_remapping_process	CoR/remap_weight_of_strategy_class.h	/^        int get_num_field_data_grids_in_remapping_process() { return num_field_data_grids_in_remapping_process; }$/;"	f	class:Remap_weight_of_strategy_class
get_num_fields	Data_MGT/memory_mgt.h	/^        int get_num_fields() { return fields_mem.size(); }$/;"	f	class:Memory_mgt
get_num_global_cells	Parallel_MGT/decomp_info_mgt.h	/^        int get_num_global_cells() { return num_global_cells; }$/;"	f	class:Decomp_info
get_num_grid_dimensions	CoR/remap_operator_grid.h	/^        int get_num_grid_dimensions() { return num_grid_dimensions; }$/;"	f	class:Remap_operator_grid
get_num_grid_levels	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::get_num_grid_levels(int grid_id)$/;"	f	class:Original_grid_mgt
get_num_local_cells	Parallel_MGT/decomp_info_mgt.h	/^        int get_num_local_cells() { return num_local_cells; }$/;"	f	class:Decomp_info
get_num_local_indx_segments_with_remote_proc	Parallel_MGT/routing_info_mgt.h	/^        int get_num_local_indx_segments_with_remote_proc(bool is_send, int i) { return get_routing_info(is_send,i)->num_local_indx_segments; }$/;"	f	class:Routing_info
get_num_neighbors	CoR/remap_operator_grid.h	/^        int get_num_neighbors() { return num_neighbors; }$/;"	f	class:Remap_operator_grid
get_num_parameters	Runtime_MGT/remapping_configuration_mgt.h	/^        int get_num_parameters() { return parameters_name.size(); }$/;"	f	class:Remapping_algorithm_specification
get_num_proc_in_comp	Driver/coupling_interface.cxx	/^extern "C" void get_num_proc_in_comp$/;"	f
get_num_proc_in_comp	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_mgr::get_num_proc_in_comp(int comp_id, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
get_num_procs	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_num_procs() const { return local_processes_global_ids.size(); }$/;"	f	class:Comp_comm_group_mgt_node
get_num_remap_operator	CoR/remap_strategy_class.h	/^        int get_num_remap_operator() { return remap_operators.size(); }$/;"	f	class:Remap_strategy_class
get_num_remap_weights_groups	CoR/remap_operator_basis.h	/^        int get_num_remap_weights_groups() { return remap_weights_groups.size(); }$/;"	f	class:Remap_operator_basis
get_num_remap_weights_of_operators	CoR/remap_weight_of_strategy_class.h	/^        int get_num_remap_weights_of_operators() { return remap_weights_of_operators.size(); }$/;"	f	class:Remap_weight_of_strategy_class
get_num_remaped_dst_cells_indexes	CoR/remap_weight_sparse_matrix.h	/^        long get_num_remaped_dst_cells_indexes() { return num_remaped_dst_cells_indexes; }$/;"	f	class:Remap_weight_sparse_matrix
get_num_runtime_remap_algorithms	Runtime_MGT/inout_interface_mgt.h	/^        int get_num_runtime_remap_algorithms() { return runtime_remap_algorithms.size(); }$/;"	f	class:Connection_coupling_procedure
get_num_total_global_procs	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_num_total_global_procs() { return num_total_global_procs; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_num_total_step	Driver/timer_mgt.h	/^        long get_num_total_step() { return num_total_steps; }$/;"	f	class:Time_mgt
get_num_vertex	CoR/grid_cell_search.h	/^        int get_num_vertex() const { return num_vertex; }$/;"	f	class:H2D_grid_cell_search_cell
get_num_vertexes	CoR/remap_grid_class.h	/^        int get_num_vertexes() const { return num_vertexes; }$/;"	f	class:Remap_grid_class
get_num_vertexes	CoR/remap_operator_grid.h	/^        int get_num_vertexes() { return num_vertexes; }$/;"	f	class:Remap_operator_grid
get_num_visited_cells	CoR/remap_operator_grid.h	/^        long get_num_visited_cells() { return num_visited_cells; }$/;"	f	class:Remap_operator_grid
get_num_weights	CoR/remap_weight_sparse_matrix.h	/^        long get_num_weights() { return num_weights; }$/;"	f	class:Remap_weight_sparse_matrix
get_num_wgts	Runtime_MGT/remapping_configuration_mgt.h	/^        long get_num_wgts() { return num_wgts; }$/;"	f	class:H2D_remapping_wgt_file_info
get_object_name	CoR/remap_operator_basis.h	/^        char *get_object_name() { return object_name; }$/;"	f	class:Remap_operator_basis
get_object_name	CoR/remap_weight_of_strategy_class.h	/^        const char *get_object_name() { return object_name; }$/;"	f	class:Remap_weight_of_strategy_class
get_one_comp_full_name	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::get_one_comp_full_name(int comp_id, const char *keyword, int str_size, int index, char *comp_full_name, int *local_individual_or_family, const char *annotation)$/;"	f	class:Coupling_generator
get_operator_grid_dst	CoR/remap_weight_of_strategy_class.cxx	/^Remap_grid_class *Remap_weight_of_operator_instance_class::get_operator_grid_dst()$/;"	f	class:Remap_weight_of_operator_instance_class
get_operator_grid_dst	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *get_operator_grid_dst() { return operator_grid_dst; } $/;"	f	class:Remap_weight_of_operator_class
get_operator_grid_src	CoR/remap_weight_of_strategy_class.cxx	/^Remap_grid_class *Remap_weight_of_operator_instance_class::get_operator_grid_src()$/;"	f	class:Remap_weight_of_operator_instance_class
get_operator_grid_src	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *get_operator_grid_src() { return operator_grid_src; }$/;"	f	class:Remap_weight_of_operator_class
get_operator_name	CoR/remap_operator_basis.h	/^        const char *get_operator_name() { return operator_name; }$/;"	f	class:Remap_operator_basis
get_original_CoR_grid	Data_MGT/original_grid_mgt.cxx	/^Remap_grid_class *Original_grid_mgt::get_original_CoR_grid(int grid_id) const$/;"	f	class:Original_grid_mgt
get_original_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *get_original_CoR_grid() const { return original_CoR_grid; }$/;"	f	class:Original_grid_info
get_original_grid	CoR/remap_grid_class.h	/^        Remap_grid_class *get_original_grid() { return original_grid; }$/;"	f	class:Remap_grid_class
get_original_grid	Data_MGT/original_grid_mgt.cxx	/^Original_grid_info *Original_grid_mgt::get_original_grid(int grid_id) const$/;"	f	class:Original_grid_mgt
get_original_grid	Parallel_MGT/decomp_grid_mgt.h	/^        Remap_grid_class *get_original_grid() { return original_grid; }$/;"	f	class:Decomp_grid_info
get_original_remap_operator	CoR/remap_weight_of_strategy_class.cxx	/^Remap_operator_basis *Remap_weight_of_operator_instance_class::get_original_remap_operator()$/;"	f	class:Remap_weight_of_operator_instance_class
get_original_remap_operator	CoR/remap_weight_of_strategy_class.h	/^        Remap_operator_basis *get_original_remap_operator() { return original_remap_operator; }$/;"	f	class:Remap_weight_of_operator_class
get_output_data_file_header	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::get_output_data_file_header(int comp_id, char *data_file_header)$/;"	f	class:Comp_comm_group_mgt_mgr
get_parallel_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_weight_of_strategy_class *get_parallel_remapping_weights() { return parallel_remapping_weights; }$/;"	f	class:Runtime_remapping_weights
get_parameter	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_algorithm_specification::get_parameter(int i, char *parameter_name, char *parameter_value)$/;"	f	class:Remapping_algorithm_specification
get_parent	Parallel_MGT/compset_communicators_info_mgt.h	/^        Comp_comm_group_mgt_node *get_parent() const { return parent; }$/;"	f	class:Comp_comm_group_mgt_node
get_partial_grid_mask_fields	CoR/remap_grid_class.cxx	/^void Remap_grid_class::get_partial_grid_mask_fields(int *num_mask_fields_partial, $/;"	f	class:Remap_grid_class
get_performance_timing_mgr	Parallel_MGT/compset_communicators_info_mgt.h	/^        Performance_timing_mgt *get_performance_timing_mgr() { return performance_timing_mgr; }        $/;"	f	class:Comp_comm_group_mgt_node
get_previous_full_time	Driver/timer_mgt.cxx	/^long Time_mgt::get_previous_full_time()$/;"	f	class:Time_mgt
get_proc_latest_model_time	Parallel_MGT/compset_communicators_info_mgt.cxx	/^long Comp_comm_group_mgt_node::get_proc_latest_model_time(int proc_id)$/;"	f	class:Comp_comm_group_mgt_node
get_recorded_grid_num	CoR/io_basis.cxx	/^int IO_basis::get_recorded_grid_num(Remap_grid_class *grid)$/;"	f	class:IO_basis
get_remap_begin_iter	CoR/remap_weight_of_strategy_class.h	/^        long get_remap_begin_iter() { return remap_beg_iter; }$/;"	f	class:Remap_weight_of_operator_instance_class
get_remap_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        long get_remap_decomp_size() { return remap_decomp_size; }$/;"	f	class:Routing_info
get_remap_end_iter	CoR/remap_weight_of_strategy_class.h	/^        long get_remap_end_iter() { return remap_end_iter; }$/;"	f	class:Remap_weight_of_operator_instance_class
get_remap_operator	CoR/remap_strategy_class.h	/^        Remap_operator_basis *get_remap_operator(int i) { return remap_operators[i]; }$/;"	f	class:Remap_strategy_class
get_remap_operator	CoR/remap_weight_sparse_matrix.h	/^        Remap_operator_basis *get_remap_operator() { return remap_operator; }$/;"	f	class:Remap_weight_sparse_matrix
get_remap_operator_num_dim	CoR/remap_operator_mgt.cxx	/^int Remap_operator_mgt::get_remap_operator_num_dim(const char *operator_name)$/;"	f	class:Remap_operator_mgt
get_remap_related_grids	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::get_remap_related_grids(std::vector<std::pair<Remap_grid_class *, bool> > &all_remap_related_grids_info)$/;"	f	class:Remap_weight_of_strategy_class
get_remap_strategy	CoR/remap_weight_of_strategy_class.h	/^        Remap_strategy_class *get_remap_strategy() { return remap_strategy; }$/;"	f	class:Remap_weight_of_strategy_class
get_remap_weights_group	CoR/remap_operator_basis.h	/^        Remap_weight_sparse_matrix *get_remap_weights_group(int index) { return remap_weights_groups[index]; }$/;"	f	class:Remap_operator_basis
get_remap_weights_of_operator	CoR/remap_weight_of_strategy_class.h	/^        Remap_weight_of_operator_class *get_remap_weights_of_operator(int i) { return remap_weights_of_operators[i]; }$/;"	f	class:Remap_weight_of_strategy_class
get_remaped_dst_cells_indexes	CoR/remap_weight_sparse_matrix.h	/^        long *get_remaped_dst_cells_indexes() { return remaped_dst_cells_indexes; }$/;"	f	class:Remap_weight_sparse_matrix
get_remote_lag_count	Driver/timer_mgt.h	/^        int get_remote_lag_count() { return remote_lag_count; }$/;"	f	class:Coupling_timer
get_rest_refcase	Driver/timer_mgt.h	/^        const char *get_rest_refcase() { return rest_refcase; }$/;"	f	class:Time_mgt
get_rest_refdate	Driver/timer_mgt.h	/^        int get_rest_refdate() { return rest_refdate; }$/;"	f	class:Time_mgt
get_rest_refsecond	Driver/timer_mgt.h	/^        int get_rest_refsecond() { return rest_refsecond; }$/;"	f	class:Time_mgt
get_restart_common_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_restart_common_dir() { return restart_common_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_restart_full_time	Driver/timer_mgt.h	/^        long get_restart_full_time() { return restart_full_time; }$/;"	f	class:Time_mgt
get_restart_mgr	Data_MGT/restart_mgt.h	/^        Restart_mgt *get_restart_mgr() { return restart_mgr; }$/;"	f	class:Restart_buffer_container
get_restart_mgr	Parallel_MGT/compset_communicators_info_mgt.h	/^        Restart_mgt *get_restart_mgr() { return restart_mgr; }$/;"	f	class:Comp_comm_group_mgt_node
get_restart_read_annotation	Data_MGT/restart_mgt.cxx	/^const char *Restart_mgt::get_restart_read_annotation()$/;"	f	class:Restart_mgt
get_restart_read_data_file_name	Data_MGT/restart_mgt.h	/^        const char *get_restart_read_data_file_name() { return restart_read_data_file_name; }$/;"	f	class:Restart_mgt
get_restart_time_in_rpointer_file	Utils/common_utils.cxx	/^long get_restart_time_in_rpointer_file(const char *file_name)$/;"	f
get_root_comp_config_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_root_comp_config_dir() const { return root_comp_config_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_root_component_model	Parallel_MGT/compset_communicators_info_mgt.h	/^        Comp_comm_group_mgt_node *get_root_component_model() { return global_node_array[1]; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_root_comps_for_overall_coupling_generation	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::get_root_comps_for_overall_coupling_generation(std::vector<const char *> &all_comp_fullnames_for_coupling_generation)$/;"	f	class:Comp_comm_group_mgt_mgr
get_root_proc_global_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        int get_root_proc_global_id() const { return local_processes_global_ids[0]; }$/;"	f	class:Comp_comm_group_mgt_node
get_root_working_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_root_working_dir() { return root_working_dir; }$/;"	f	class:Comp_comm_group_mgt_mgr
get_rotated_remap_operator_grid	CoR/remap_operator_grid.h	/^        Remap_operator_grid *get_rotated_remap_operator_grid() { return rotated_remap_operator_grid; }$/;"	f	class:Remap_operator_grid
get_routing_info	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info_with_one_process *Routing_info::get_routing_info(bool is_send, int i)$/;"	f	class:Routing_info
get_run_type	Driver/timer_mgt.h	/^        const char *get_run_type() { return run_type; }$/;"	f	class:Time_mgt
get_runtime_mask_field_in_remapping_process	CoR/remap_weight_of_strategy_class.cxx	/^Remap_grid_data_class *Remap_weight_of_strategy_class::get_runtime_mask_field_in_remapping_process(int i) $/;"	f	class:Remap_weight_of_strategy_class
get_runtime_remap_algorithm	Runtime_MGT/inout_interface_mgt.h	/^        Runtime_remap_algorithm *get_runtime_remap_algorithm(int i) { return runtime_remap_algorithms[i]; }$/;"	f	class:Connection_coupling_procedure
get_runtime_remapping_weights	Runtime_MGT/inout_interface_mgt.cxx	/^Runtime_remapping_weights *Connection_coupling_procedure::get_runtime_remapping_weights(int i) $/;"	f	class:Connection_coupling_procedure
get_runtime_remapping_weights	Runtime_MGT/runtime_remap_algorithm.h	/^        Runtime_remapping_weights *get_runtime_remapping_weights() { return runtime_remapping_weights; }$/;"	f	class:Runtime_remap_algorithm
get_runtype_mark	Driver/timer_mgt.h	/^        int get_runtype_mark() { return runtype_mark; }$/;"	f	class:Time_mgt
get_sender_time	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::get_sender_time(int size_sender_date, int size_sender_elapsed_days, int size_sender_second, int *sender_date, int *sender_elapsed_days, int *sender_second, const char *annotation)$/;"	f	class:Inout_interface
get_sequential_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_weight_of_strategy_class *get_sequential_remapping_weights() { return sequential_remapping_weights; }$/;"	f	class:Runtime_remapping_weights
get_sigma_grid_sigma_value_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::get_sigma_grid_sigma_value_field()$/;"	f	class:Remap_grid_class
get_sigma_grid_top_value	CoR/remap_grid_class.h	/^        double get_sigma_grid_top_value() { return sigma_grid_top_value; }$/;"	f	class:Remap_grid_class
get_similar_grids_setting_coord_values	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::get_similar_grids_setting_coord_values()$/;"	f	class:Remap_grid_class
get_size_of_dst_grid	CoR/remap_operator_c_interface.cxx	/^long get_size_of_dst_grid()$/;"	f
get_size_of_field	Data_MGT/memory_mgt.cxx	/^long Field_mem_info::get_size_of_field()$/;"	f	class:Field_mem_info
get_size_of_src_grid	CoR/remap_operator_c_interface.cxx	/^long get_size_of_src_grid()$/;"	f
get_size_value_from_parameter	CoR/syntax_check.cxx	/^long get_size_value_from_parameter(const char *function, int para_indx, Remap_statement_operand *operand, const char *annotation)$/;"	f
get_sized_sub_grids	CoR/remap_grid_class.cxx	/^void Remap_grid_class::get_sized_sub_grids(int *num_sized_sub_grids, Remap_grid_class **sized_sub_grids) $/;"	f	class:Remap_grid_class
get_sphere_sub_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::get_sphere_sub_grid()$/;"	f	class:Remap_grid_class
get_src_H2D_grid_area	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        double *get_src_H2D_grid_area() { return src_H2D_grid_area; }$/;"	f	class:Runtime_remapping_weights
get_src_area	Runtime_MGT/remapping_configuration_mgt.h	/^        double *get_src_area() { return src_area; }$/;"	f	class:H2D_remapping_wgt_file_info
get_src_comp_full_name	Runtime_MGT/coupling_generator.h	/^        const char *get_src_comp_full_name() { return src_comp_interfaces[0].first; }$/;"	f	class:Coupling_connection
get_src_comp_node	Parallel_MGT/routing_info_mgt.cxx	/^Comp_comm_group_mgt_node *Routing_info::get_src_comp_node() $/;"	f	class:Routing_info
get_src_decomp_info	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Decomp_info *get_src_decomp_info() { return src_decomp_info; }$/;"	f	class:Runtime_remapping_weights
get_src_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        long get_src_decomp_size() { return src_decomp_size; }$/;"	f	class:Routing_info
get_src_grid	CoR/remap_operator_basis.h	/^        Remap_grid_class *get_src_grid() { return src_grid; }$/;"	f	class:Remap_operator_basis
get_src_original_grid	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Original_grid_info *get_src_original_grid() { return src_original_grid; }$/;"	f	class:Runtime_remapping_weights
get_start_day	Driver/timer_mgt.h	/^        int get_start_day() { return start_day; }$/;"	f	class:Time_mgt
get_start_full_time	Driver/timer_mgt.cxx	/^long Time_mgt::get_start_full_time()$/;"	f	class:Time_mgt
get_start_month	Driver/timer_mgt.h	/^        int get_start_month() { return start_month; }$/;"	f	class:Time_mgt
get_start_num_elapsed_day	Driver/timer_mgt.h	/^        int get_start_num_elapsed_day() { return start_num_elapsed_day; }$/;"	f	class:Time_mgt
get_start_second	Driver/timer_mgt.h	/^        int get_start_second() { return start_second; }$/;"	f	class:Time_mgt
get_start_year	Driver/timer_mgt.h	/^        int get_start_year() { return start_year; }$/;"	f	class:Time_mgt
get_stop_day	Driver/timer_mgt.h	/^        int get_stop_day() { return stop_day; }$/;"	f	class:Time_mgt
get_stop_month	Driver/timer_mgt.h	/^        int get_stop_month() { return stop_month; }$/;"	f	class:Time_mgt
get_stop_num_elapsed_day	Driver/timer_mgt.h	/^        int get_stop_num_elapsed_day() { return stop_num_elapsed_day; }$/;"	f	class:Time_mgt
get_stop_second	Driver/timer_mgt.h	/^        int get_stop_second() { return stop_second; }$/;"	f	class:Time_mgt
get_stop_year	Driver/timer_mgt.h	/^        int get_stop_year() { return stop_year; }$/;"	f	class:Time_mgt
get_strategy_name	CoR/remap_strategy_class.h	/^        const char *get_strategy_name() { return strategy_name; }$/;"	f	class:Remap_strategy_class
get_super_grid_of_setting_coord_values	CoR/remap_grid_class.h	/^        Remap_grid_class *get_super_grid_of_setting_coord_values() const { return super_grid_of_setting_coord_values; }$/;"	f	class:Remap_grid_class
get_tag_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        long * get_tag_buf() {return tag_buf;}$/;"	f	class:Runtime_trans_algorithm
get_tag_buf_size	Runtime_MGT/runtime_trans_algorithm.h	/^        int get_tag_buf_size() {return tag_buf_size;}$/;"	f	class:Runtime_trans_algorithm
get_time_has_been_advanced	Driver/timer_mgt.h	/^        bool get_time_has_been_advanced() { return time_has_been_advanced; }$/;"	f	class:Time_mgt
get_time_mgr	Driver/timer_mgt.cxx	/^Time_mgt *Components_time_mgt::get_time_mgr(int comp_id)$/;"	f	class:Components_time_mgt
get_time_of_next_timer_on	Driver/timer_mgt.cxx	/^void Coupling_timer::get_time_of_next_timer_on(Time_mgt *time_mgr, int current_year, int current_month, int current_day, int current_second, int current_num_elapsed_days, int time_step_in_second, int &next_timer_num_elapsed_days, int &next_timer_date, int &next_timer_second, bool advance)$/;"	f	class:Coupling_timer
get_time_of_next_timer_on	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_field_time_info::get_time_of_next_timer_on(bool advance)$/;"	f	class:Connection_field_time_info
get_time_step_in_second	Driver/timer_mgt.h	/^        int get_time_step_in_second() { return time_step_in_second; }$/;"	f	class:Time_mgt
get_timer	Driver/timer_mgt.cxx	/^Coupling_timer *Timer_mgt::get_timer(int timer_id)$/;"	f	class:Timer_mgt
get_timer	Runtime_MGT/inout_interface_mgt.h	/^        Coupling_timer *get_timer() { return timer; }$/;"	f	class:Inout_interface
get_timer_id	Driver/timer_mgt.h	/^        int get_timer_id() { return timer_id; }$/;"	f	class:Coupling_timer
get_total_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        char * get_total_buf() {return total_buf;}$/;"	f	class:Runtime_trans_algorithm
get_total_buf_size	Runtime_MGT/runtime_trans_algorithm.h	/^        int get_total_buf_size() {return total_buf_size;}$/;"	f	class:Runtime_trans_algorithm
get_unique_center_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::get_unique_center_field()$/;"	f	class:Remap_grid_class
get_unique_remap_operator_of_weights	CoR/remap_weight_of_strategy_class.cxx	/^Remap_operator_basis *Remap_weight_of_strategy_class::get_unique_remap_operator_of_weights() $/;"	f	class:Remap_weight_of_strategy_class
get_unique_vertex_field	CoR/remap_grid_class.cxx	/^Remap_grid_data_class *Remap_grid_class::get_unique_vertex_field()$/;"	f	class:Remap_grid_class
get_unit	Data_MGT/memory_mgt.h	/^        const char *get_unit() const { return field_unit; }$/;"	f	class:Field_mem_info
get_vertex_coord_values	CoR/remap_operator_grid.h	/^        double **get_vertex_coord_values() { return vertex_coord_values; }$/;"	f	class:Remap_operator_grid
get_vertex_lat	CoR/grid_cell_search.cxx	/^double H2D_grid_cell_search_cell::get_vertex_lat(int indx) const $/;"	f	class:H2D_grid_cell_search_cell
get_vertex_lon	CoR/grid_cell_search.cxx	/^double H2D_grid_cell_search_cell::get_vertex_lon(int indx) const $/;"	f	class:H2D_grid_cell_search_cell
get_weight	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::get_weight(long *index_src, long *index_dst, double *weight_value, int index_weight)$/;"	f	class:Remap_weight_sparse_matrix
get_weight_values	CoR/remap_weight_sparse_matrix.h	/^        double *get_weight_values() { return weight_values; }$/;"	f	class:Remap_weight_sparse_matrix
get_wgt_file_name	Runtime_MGT/remapping_configuration_mgt.h	/^        const char *get_wgt_file_name() { return wgt_file_name; }$/;"	f	class:H2D_remapping_wgt_file_info
get_wgts_dst_indexes	Runtime_MGT/remapping_configuration_mgt.h	/^        long *get_wgts_dst_indexes () { return wgts_dst_indexes; }$/;"	f	class:H2D_remapping_wgt_file_info
get_wgts_src_indexes	Runtime_MGT/remapping_configuration_mgt.h	/^        long *get_wgts_src_indexes () { return wgts_src_indexes; }$/;"	f	class:H2D_remapping_wgt_file_info
get_wgts_values	Runtime_MGT/remapping_configuration_mgt.h	/^        double *get_wgts_values () { return wgts_values; }        $/;"	f	class:H2D_remapping_wgt_file_info
get_whole_grid	CoR/remap_grid_class.h	/^        const Remap_grid_class *get_whole_grid() const { return whole_grid; }$/;"	f	class:Remap_grid_class
get_working_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        const char *get_working_dir() const { return working_dir; }$/;"	f	class:Comp_comm_group_mgt_node
global_algorithm_id	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^int global_algorithm_id;$/;"	v
global_field_mem	Parallel_MGT/fields_gather_scatter_mgt.h	/^        Field_mem_info *global_field_mem;$/;"	m	class:Gather_scatter_rearrange_info
global_index	Parallel_MGT/routing_info_mgt.h	/^    int global_index;         $/;"	m	struct:routing_mapping_table_entry
global_node_array	Parallel_MGT/compset_communicators_info_mgt.h	/^        std::vector<Comp_comm_group_mgt_node*> global_node_array;$/;"	m	class:Comp_comm_group_mgt_mgr
global_node_root	Parallel_MGT/compset_communicators_info_mgt.h	/^        Comp_comm_group_mgt_node *global_node_root;$/;"	m	class:Comp_comm_group_mgt_mgr
grid2D_search_engine	CoR/remap_operator_grid.h	/^        H2D_grid_cell_search_engine *grid2D_search_engine;$/;"	m	class:Remap_operator_grid
grid_center_fields	CoR/remap_grid_class.h	/^        std::vector<Remap_grid_data_class *> grid_center_fields;$/;"	m	class:Remap_grid_class
grid_center_fields	CoR/remap_operator_grid.h	/^        std::vector<Remap_grid_data_class*> grid_center_fields;$/;"	m	class:Remap_operator_grid
grid_data_field	CoR/remap_grid_data_class.h	/^        Remap_data_field *grid_data_field;$/;"	m	class:Remap_grid_data_class
grid_id	Data_MGT/memory_mgt.h	/^        int grid_id;$/;"	m	class:Field_mem_info
grid_id	Data_MGT/original_grid_mgt.h	/^        int grid_id;$/;"	m	class:Original_grid_info
grid_id	Parallel_MGT/decomp_info_mgt.h	/^        int grid_id;$/;"	m	class:Decomp_info
grid_id	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int grid_id;$/;"	m	class:Gather_scatter_rearrange_info
grid_mask_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *grid_mask_field;$/;"	m	class:Remap_grid_class
grid_name	CoR/remap_grid_class.h	/^        char grid_name[NAME_STR_SIZE];$/;"	m	class:Remap_grid_class
grid_name	Data_MGT/original_grid_mgt.h	/^        const char *grid_name;$/;"	m	class:Original_grid_info
grid_name	Parallel_MGT/decomp_info_mgt.h	/^        char grid_name[NAME_STR_SIZE];$/;"	m	class:Decomp_info
grid_name	Runtime_MGT/coupling_generator.h	/^    char grid_name[NAME_STR_SIZE];$/;"	m	struct:Interface_field_info
grid_remap_mgr	Driver/global_data.cxx	/^Remap_mgt *grid_remap_mgr = NULL;$/;"	v
grid_size	CoR/remap_grid_class.h	/^        long grid_size;$/;"	m	class:Remap_grid_class
grid_size	CoR/remap_operator_grid.h	/^        long grid_size;$/;"	m	class:Remap_operator_grid
grid_vertex_fields	CoR/remap_grid_class.h	/^        std::vector<Remap_grid_data_class *> grid_vertex_fields;$/;"	m	class:Remap_grid_class
grid_vertex_fields	CoR/remap_operator_grid.h	/^        std::vector<Remap_grid_data_class*> grid_vertex_fields;$/;"	m	class:Remap_operator_grid
grided_field_data	Data_MGT/memory_mgt.h	/^        Remap_grid_data_class *grided_field_data;$/;"	m	class:Field_mem_info
has_been_executed_with_timer	Runtime_MGT/inout_interface_mgt.h	/^        bool has_been_executed_with_timer() { return (execution_checking_status & 0x2) != 0; }        $/;"	f	class:Inout_interface
has_cell_index	CoR/grid_cell_search.cxx	/^bool H2D_grid_cell_search_tile::has_cell_index(int cell_index)$/;"	f	class:H2D_grid_cell_search_tile
has_comp_ended_configuration	Parallel_MGT/compset_communicators_info_mgt.cxx	/^bool Comp_comm_group_mgt_mgr::has_comp_ended_configuration(const char *comp_full_name)$/;"	f	class:Comp_comm_group_mgt_mgr
has_global_field	Parallel_MGT/fields_gather_scatter_mgt.h	/^        bool has_global_field;$/;"	m	class:Gather_scatter_rearrange_info
has_grid_coord_label	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::has_grid_coord_label(const char *coord_label) const$/;"	f	class:Remap_grid_class
has_partial_sub_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::has_partial_sub_grid() const$/;"	f	class:Remap_grid_class
has_super_grids_of_setting_mask_value	CoR/remap_grid_class.h	/^        bool has_super_grids_of_setting_mask_value() { return super_grids_of_setting_mask_value.size() > 0; }$/;"	f	class:Remap_grid_class
hash_function	Utils/dictionary.h	/^unsigned long Dictionary<T>::hash_function(const char *keyword)$/;"	f	class:Dictionary
hashing_table	Utils/dictionary.h	/^        struct Dictionary_node<T> **hashing_table;$/;"	m	class:Dictionary	typeref:struct:Dictionary::Dictionary_node
have_data_content	CoR/remap_grid_data_class.h	/^        bool have_data_content() const { return grid_data_field->read_data_size > 0; }$/;"	f	class:Remap_grid_data_class
have_fetched_dst_grid_cell_coord_values	CoR/remap_operator_c_interface.cxx	/^bool have_fetched_dst_grid_cell_coord_values;$/;"	v
have_fill_value	CoR/remap_statement_operand.h	/^        bool have_fill_value;$/;"	m	class:Remap_data_field
have_local_process	Parallel_MGT/compset_communicators_info_mgt.cxx	/^bool Comp_comm_group_mgt_node::have_local_process(int local_proc_global_id)$/;"	f	class:Comp_comm_group_mgt_node
have_overlap_with_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::have_overlap_with_grid(Remap_grid_class *another_grid) $/;"	f	class:Remap_grid_class
have_overlapped_src_cells_for_dst_cell	CoR/remap_operator_c_interface.cxx	/^bool have_overlapped_src_cells_for_dst_cell(long cell_index_dst)$/;"	f
have_random_seed_for_perturbation	Runtime_MGT/ensemble_mgt.h	/^        bool have_random_seed_for_perturbation;$/;"	m	class:Ensemble_mgt
head	CoR/delaunay_voronoi.h	/^        Point *head;$/;"	m	class:Edge
history_receive_buffer_status	Runtime_MGT/runtime_trans_algorithm.h	/^        std::vector<bool> history_receive_buffer_status;$/;"	m	class:Runtime_trans_algorithm
history_receive_fields_mem	Runtime_MGT/runtime_trans_algorithm.h	/^        std::vector<std::vector<Field_mem_info *> > history_receive_fields_mem;$/;"	m	class:Runtime_trans_algorithm
history_receive_sender_time	Runtime_MGT/runtime_trans_algorithm.h	/^        std::vector<long> history_receive_sender_time;$/;"	m	class:Runtime_trans_algorithm
history_receive_usage_time	Runtime_MGT/runtime_trans_algorithm.h	/^        std::vector<long> history_receive_usage_time;$/;"	m	class:Runtime_trans_algorithm
host_comp_id	Data_MGT/memory_mgt.h	/^        int host_comp_id;$/;"	m	class:Field_mem_info
host_comp_id	Parallel_MGT/decomp_info_mgt.h	/^        int host_comp_id;$/;"	m	class:Decomp_info
host_comp_id	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int host_comp_id;$/;"	m	class:Gather_scatter_rearrange_info
host_comp_time_mgr	Data_MGT/memory_mgt.h	/^        Time_mgt *host_comp_time_mgr;$/;"	m	class:Field_mem_info
hybrid_grid_coefficient_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *hybrid_grid_coefficient_field;$/;"	m	class:Remap_grid_class
id	CoR/delaunay_voronoi.h	/^        int id;$/;"	m	class:Point
import_directions	Runtime_MGT/coupling_generator.h	/^        std::vector<Import_direction_setting*> import_directions;$/;"	m	class:Import_interface_configuration
import_field_index_lookup_table	Runtime_MGT/coupling_generator.h	/^        Dictionary<int> *import_field_index_lookup_table;$/;"	m	class:Coupling_generator
import_interface	Data_MGT/IO_field_mgt.h	/^        Inout_interface *import_interface;$/;"	m	class:IO_output_procedure
import_interface	Runtime_MGT/coupling_generator.h	/^        Inout_interface *import_interface;$/;"	m	class:Coupling_connection
import_interfaces_configuration	Runtime_MGT/coupling_generator.h	/^        std::vector<Import_interface_configuration*> import_interfaces_configuration;$/;"	m	class:Component_import_interfaces_configuration
import_procedure	Runtime_MGT/coupling_generator.h	/^        Connection_coupling_procedure *import_procedure;$/;"	m	class:Coupling_connection
import_report_setting	Utils/execution_report.cxx	/^void import_report_setting()$/;"	f
import_restart_data	Driver/timer_mgt.cxx	/^void Time_mgt::import_restart_data(const char *temp_array_buffer, long &buffer_content_iter, const char *file_name, bool check_existing_data)$/;"	f	class:Time_mgt
import_restart_data	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_coupling_procedure::import_restart_data(Restart_buffer_container *restart_buffer)$/;"	f	class:Connection_coupling_procedure
import_restart_data	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_field_time_info::import_restart_data(Restart_buffer_container *restart_buffer)$/;"	f	class:Connection_field_time_info
import_restart_data	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::import_restart_data(Restart_buffer_container *restart_buffer)$/;"	f	class:Inout_interface
imported_area	CoR/remap_grid_class.h	/^        Remap_grid_data_class *imported_area;$/;"	m	class:Remap_grid_class
imported_fields_necessity	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<int> imported_fields_necessity;$/;"	m	class:Inout_interface
include_all_component_io_fields	Data_MGT/IO_field_mgt.cxx	/^void IO_output_procedure::include_all_component_io_fields()$/;"	f	class:IO_output_procedure
increase_hashing_entries	Utils/dictionary.h	/^void Dictionary<T>::increase_hashing_entries()$/;"	f	class:Dictionary
indent	XML/tinyxml.h	/^	TIXML_STRING indent;$/;"	m	class:TiXmlPrinter
index_buffer	CoR/grid_cell_search.h	/^        long *index_buffer;$/;"	m	class:H2D_grid_cell_search_engine
index_buffer	CoR/grid_cell_search.h	/^        long *index_buffer;$/;"	m	class:H2D_grid_cell_search_tile
index_dst_comp_full_name	Parallel_MGT/routing_info_mgt.h	/^        char index_dst_comp_full_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
index_recv_procs_with_common_data	Runtime_MGT/runtime_trans_algorithm.h	/^        std::vector<int> index_recv_procs_with_common_data;$/;"	m	class:Runtime_trans_algorithm
index_remote_procs_with_common_data	Runtime_MGT/runtime_trans_algorithm.h	/^        std::vector<int> index_remote_procs_with_common_data;$/;"	m	class:Runtime_trans_algorithm
index_src_cells_overlap_with_dst_cells	CoR/remap_operator_basis.h	/^        long *index_src_cells_overlap_with_dst_cells;$/;"	m	class:Remap_operator_basis
individual_or_family_generation	Runtime_MGT/coupling_generator.h	/^        std::vector<int> individual_or_family_generation;  \/\/ must be 1 (individual) or 2 (family)$/;"	m	class:Coupling_generator
init	XML/tinystr.h	/^	void init(size_type sz) { init(sz, sz); }$/;"	f	class:TiXmlString
init	XML/tinystr.h	/^	void init(size_type sz, size_type cap)$/;"	f	class:TiXmlString
initialize_1D_remap_operator	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::initialize_1D_remap_operator()$/;"	f	class:Remap_operator_1D_basis
initialize_CoR_grids	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::initialize_CoR_grids()$/;"	f	class:Original_grid_mgt
initialize_ccpl_mgrs	Driver/coupling_interface.cxx	/^extern "C" void initialize_ccpl_mgrs$/;"	f
initialize_computing_remap_weights_of_one_cell	CoR/remap_operator_c_interface.cxx	/^void initialize_computing_remap_weights_of_one_cell()$/;"	f
initialize_data	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::initialize_data(const char *interface_name, int interface_id, int interface_type, int timer_id, int inst_or_aver, int *field_ids, int interface_source, const char *annotation)$/;"	f	class:Inout_interface
initialize_data_buf_to_fill_value	CoR/remap_statement_operand.cxx	/^template <class T> void initialize_data_buf_to_fill_value(T *data_buf, long size, T fill_value)$/;"	f
initialize_for_vertex_coord_values_generation	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::initialize_for_vertex_coord_values_generation()$/;"	f	class:Remap_operator_grid
initialize_grid_class_data	CoR/remap_grid_class.cxx	/^void Remap_grid_class::initialize_grid_class_data()$/;"	f	class:Remap_grid_class
initialize_hashing_table	Utils/dictionary.h	/^void Dictionary<T>::initialize_hashing_table(int size)$/;"	f	class:Dictionary
initialize_object	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::initialize_object()$/;"	f	class:Remap_weight_of_strategy_class
initialize_routing_mapping_table	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::initialize_routing_mapping_table(routing_mapping_table_entry **routing_mapping_table_entries, Decomp_info *decomp_info, Comp_comm_group_mgt_node *comp_node, int *num_local_routing_mapping_table_entries, int current_proc_id, int num_local_procs, int num_local_procs_adjust)$/;"	f	class:Routing_info
initialize_to_fill_value	CoR/remap_statement_operand.cxx	/^void Remap_data_field::initialize_to_fill_value()$/;"	f	class:Remap_data_field
initialize_to_start_time	Driver/timer_mgt.cxx	/^void Time_mgt::initialize_to_start_time()$/;"	f	class:Time_mgt
initialize_triangle_with_edges	CoR/delaunay_voronoi.cxx	/^void Triangle::initialize_triangle_with_edges(Edge *edge1, Edge *edge2, Edge *edge3)$/;"	f	class:Triangle
inout_interface	Runtime_MGT/inout_interface_mgt.h	/^        Inout_interface *inout_interface;$/;"	m	class:Connection_coupling_procedure
inout_interface	Runtime_MGT/inout_interface_mgt.h	/^        Inout_interface *inout_interface;$/;"	m	class:Connection_field_time_info
inout_interface_mgr	Driver/global_data.cxx	/^Inout_interface_mgt *inout_interface_mgr = NULL;$/;"	v
input_restart_mgt_info_file	Data_MGT/restart_mgt.h	/^        char *input_restart_mgt_info_file;$/;"	m	class:Restart_mgt
insert	Utils/dictionary.h	/^void Dictionary<T>::insert(const char *key, T value)$/;"	f	class:Dictionary
inst_or_aver	Data_MGT/IO_field_mgt.h	/^        int inst_or_aver;$/;"	m	class:IO_output_procedure
inst_or_aver	Runtime_MGT/inout_interface_mgt.h	/^        int inst_or_aver;$/;"	m	class:Connection_field_time_info
inst_or_aver	Runtime_MGT/inout_interface_mgt.h	/^        int inst_or_aver;$/;"	m	class:Inout_interface
interchange_array_data	CoR/remap_statement_operand.cxx	/^template <class T> void interchange_array_data(int num_sized_sub_grids_src,$/;"	f
interchange_grid_data	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::interchange_grid_data(Remap_grid_class *interchange_grid)$/;"	f	class:Remap_grid_data_class
interchange_grid_fields_for_remapping	CoR/remap_grid_class.cxx	/^void Remap_grid_class::interchange_grid_fields_for_remapping(Remap_grid_class *interchange_grid, $/;"	f	class:Remap_grid_class
interchange_remap_data_field	CoR/remap_statement_operand.cxx	/^void Remap_data_field::interchange_remap_data_field(Remap_data_field *field_data_interchanged, Remap_grid_class *grid_src, Remap_grid_class *grid_interchange)    $/;"	f	class:Remap_data_field
interchanged_grid_dst	CoR/runtime_remap_function.h	/^        Remap_grid_class *interchanged_grid_dst;$/;"	m	class:Runtime_remap_function
interchanged_grid_src	CoR/runtime_remap_function.h	/^        Remap_grid_class *interchanged_grid_src;$/;"	m	class:Runtime_remap_function
interface_id	Runtime_MGT/inout_interface_mgt.h	/^        int interface_id;$/;"	m	class:Inout_interface
interface_level_grid	CoR/remap_grid_class.h	/^        Remap_grid_class *interface_level_grid;$/;"	m	class:Remap_grid_class
interface_level_grid	Data_MGT/original_grid_mgt.h	/^        Original_grid_info *interface_level_grid;$/;"	m	class:Original_grid_info
interface_name	Runtime_MGT/coupling_generator.h	/^        char interface_name[NAME_STR_SIZE];$/;"	m	class:Import_direction_setting
interface_name	Runtime_MGT/coupling_generator.h	/^        char interface_name[NAME_STR_SIZE];$/;"	m	class:Import_interface_configuration
interface_name	Runtime_MGT/inout_interface_mgt.h	/^        char interface_name[NAME_STR_SIZE];$/;"	m	class:Inout_interface
interface_source	Runtime_MGT/inout_interface_mgt.h	/^        int interface_source;$/;"	m	class:Inout_interface
interface_type	Runtime_MGT/inout_interface_mgt.h	/^        int interface_type;$/;"	m	class:Inout_interface
interfaces	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Inout_interface*> interfaces;$/;"	m	class:Inout_interface_mgt
intermediate_V3D_grid_bottom_field	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Field_mem_info *intermediate_V3D_grid_bottom_field;$/;"	m	class:Runtime_remapping_weights
internal_H2D_grids_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char internal_H2D_grids_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
internal_remapping_weights_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^		char internal_remapping_weights_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
intersect_routing_mapping_tables_between_components	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::intersect_routing_mapping_tables_between_components(routing_mapping_table_entry **local_routing_mapping_table_entries, routing_mapping_table_entry *remote_routing_mapping_table_entries, int *num_local_routing_mapping_table_entries, int num_remote_routing_mapping_table_entries, bool is_src)$/;"	f	class:Routing_info
inversed_dst_fraction	Runtime_MGT/inout_interface_mgt.h	/^        char *inversed_dst_fraction;$/;"	m	class:Inout_interface
io_manager	CoR/cor_global_data.cxx	/^IO_mgt *io_manager;$/;"	v
io_with_time_info	CoR/io_netcdf.h	/^        bool io_with_time_info;$/;"	m	class:IO_netcdf
is_3D_grid	Data_MGT/original_grid_mgt.h	/^        bool is_3D_grid() { return H2D_sub_CoR_grid != NULL && V1D_sub_CoR_grid != NULL && T1D_sub_CoR_grid == NULL; }$/;"	f	class:Original_grid_info
is_CPL_field_inst	Data_MGT/memory_mgt.h	/^        bool is_CPL_field_inst() { return (usage_tag & REG_FIELD_TAG_CPL) == REG_FIELD_TAG_CPL; }$/;"	f	class:Field_mem_info
is_H2D_grid	Data_MGT/original_grid_mgt.h	/^        bool is_H2D_grid() { return H2D_sub_CoR_grid != NULL && V1D_sub_CoR_grid == NULL && T1D_sub_CoR_grid == NULL; } $/;"	f	class:Original_grid_info
is_H2D_grid_and_the_same_as_another_grid	Data_MGT/original_grid_mgt.cxx	/^bool Original_grid_info::is_H2D_grid_and_the_same_as_another_grid(Original_grid_info *another_grid)$/;"	f	class:Original_grid_info
is_IO_field_inst	Data_MGT/memory_mgt.h	/^        bool is_IO_field_inst() { return (usage_tag & REG_FIELD_TAG_IO) == REG_FIELD_TAG_IO; }$/;"	f	class:Field_mem_info
is_REST_field_inst	Data_MGT/memory_mgt.h	/^        bool is_REST_field_inst() { return (usage_tag & REG_FIELD_TAG_REST) == REG_FIELD_TAG_REST; }$/;"	f	class:Field_mem_info
is_V1D_sub_grid_after_H2D_sub_grid	Data_MGT/original_grid_mgt.cxx	/^bool Original_grid_info::is_V1D_sub_grid_after_H2D_sub_grid()$/;"	f	class:Original_grid_info
is_V1D_sub_grid_after_H2D_sub_grid	Data_MGT/original_grid_mgt.cxx	/^bool Original_grid_mgt::is_V1D_sub_grid_after_H2D_sub_grid(int grid_id)$/;"	f	class:Original_grid_mgt
is_V1D_sub_grid_after_H2D_sub_grid	Runtime_MGT/runtime_trans_algorithm.h	/^        bool *is_V1D_sub_grid_after_H2D_sub_grid;$/;"	m	class:Runtime_trans_algorithm
is_XML_setting_on	Driver/CCPL_api_mgt.cxx	/^bool is_XML_setting_on(int comp_id, TiXmlElement *XML_element, const char *XML_file_name, const char *attribute_annotation, const char *XML_file_annotation)$/;"	f
is_a_leap_year	Driver/timer_mgt.cxx	/^bool Time_mgt::is_a_leap_year(int year)$/;"	f	class:Time_mgt
is_array_in_sorting_order	Utils/common_utils.h	/^template <typename T> int is_array_in_sorting_order(T *array, int array_size)    \/\/ 0 for non-sorting order; 1 for ascending order; 2 for descending order$/;"	f
is_ccpl_timer_on	Driver/coupling_interface.cxx	/^extern "C" void is_ccpl_timer_on$/;"	f
is_cell_visited	CoR/remap_operator_grid.h	/^        bool is_cell_visited(long cell_index) { return cell_visiting_mark[cell_index]; }$/;"	f	class:Remap_operator_grid
is_checksum_changed	Data_MGT/memory_mgt.cxx	/^bool Field_mem_info::is_checksum_changed()$/;"	f	class:Field_mem_info
is_child_interface	Runtime_MGT/inout_interface_mgt.h	/^        bool is_child_interface;$/;"	m	class:Inout_interface
is_comp_first_restart_step	Driver/coupling_interface.cxx	/^extern "C" void is_comp_first_restart_step$/;"	f
is_comp_first_step	Driver/coupling_interface.cxx	/^extern "C" void is_comp_first_step$/;"	f
is_comp_in_restart_write_window	Runtime_MGT/inout_interface_mgt.cxx	/^bool Inout_interface_mgt::is_comp_in_restart_write_window(int comp_id)$/;"	f	class:Inout_interface_mgt
is_comp_type_coupled	Parallel_MGT/compset_communicators_info_mgt.cxx	/^bool Comp_comm_group_mgt_mgr::is_comp_type_coupled(int host_comp_id, const char *comp_type, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
is_coord_unit_degree	CoR/cor_global_data.cxx	/^bool is_coord_unit_degree[256];$/;"	v
is_coupling_time_out_of_execution	Runtime_MGT/inout_interface_mgt.h	/^        bool is_coupling_time_out_of_execution;$/;"	m	class:Connection_coupling_procedure
is_current_process_in_component	Driver/coupling_interface.cxx	/^extern "C" void is_current_process_in_component$/;"	f
is_decomp_id_legal	Parallel_MGT/decomp_info_mgt.cxx	/^bool Decomp_info_mgt::is_decomp_id_legal(int decomp_id) const$/;"	f	class:Decomp_info_mgt
is_definition_finalized	Parallel_MGT/compset_communicators_info_mgt.h	/^        bool is_definition_finalized() { return definition_finalized; }$/;"	f	class:Comp_comm_group_mgt_node
is_dynamic_bottom_field	Runtime_MGT/coupling_generator.h	/^    bool is_dynamic_bottom_field;$/;"	m	struct:V3D_grid_bottom_field_coupling_info
is_empty	Runtime_MGT/remapping_configuration_mgt.h	/^        bool is_empty() { return H2D_remapping_wgt_files.size() == 0; } $/;"	f	class:H2D_remapping_wgt_file_mgt
is_end_of_file	Utils/common_utils.cxx	/^bool is_end_of_file(FILE *fp)$/;"	f
is_external_file	CoR/io_netcdf.h	/^        bool is_external_file;$/;"	m	class:IO_netcdf
is_field_active	Data_MGT/memory_mgt.h	/^        bool is_field_active;$/;"	m	class:Field_mem_info
is_first_restart_step	Driver/timer_mgt.h	/^        bool is_first_restart_step() { return current_step_id == restarted_step_id; }$/;"	f	class:Time_mgt
is_first_run	Runtime_MGT/runtime_trans_algorithm.h	/^        bool is_first_run;$/;"	m	class:Runtime_trans_algorithm
is_global_grid	CoR/delaunay_voronoi.h	/^        bool is_global_grid;$/;"	m	class:Delaunay_Voronoi
is_grid_id_legal	Data_MGT/original_grid_mgt.cxx	/^bool Original_grid_mgt::is_grid_id_legal(int grid_id) const$/;"	f	class:Original_grid_mgt
is_grid_sphere	CoR/remap_operator_grid.h	/^        bool is_grid_sphere;$/;"	m	class:Remap_operator_grid
is_in_restart_read_window	Data_MGT/restart_mgt.cxx	/^bool Restart_mgt::is_in_restart_read_window(long full_time)$/;"	f	class:Restart_mgt
is_in_restart_write_window	Data_MGT/restart_mgt.cxx	/^bool Restart_mgt::is_in_restart_write_window(long full_time, bool is_in_interface_execution)$/;"	f	class:Restart_mgt
is_in_restart_write_window	Runtime_MGT/inout_interface_mgt.cxx	/^bool Inout_interface::is_in_restart_write_window()$/;"	f	class:Inout_interface
is_in_restart_write_window	Runtime_MGT/inout_interface_mgt.h	/^        bool is_in_restart_write_window() { return restart_mgr->is_in_restart_write_window(current_remote_fields_elapsed_time, false); }$/;"	f	class:Connection_coupling_procedure
is_interface_id_legal	Runtime_MGT/inout_interface_mgt.cxx	/^bool Inout_interface_mgt::is_interface_id_legal(int interface_id)$/;"	f	class:Inout_interface_mgt
is_leaf	CoR/delaunay_voronoi.h	/^        bool is_leaf;$/;"	m	class:Triangle
is_legal_local_comp_id	Parallel_MGT/compset_communicators_info_mgt.cxx	/^bool Comp_comm_group_mgt_mgr::is_legal_local_comp_id(int local_comp_id, bool is_external_call)$/;"	f	class:Comp_comm_group_mgt_mgr
is_level_V3D_coord_trigger_field_specified	CoR/remap_grid_class.h	/^        bool is_level_V3D_coord_trigger_field_specified() { return level_V3D_coord_trigger_field_specified; }$/;"	f	class:Remap_grid_class
is_level_V3D_coord_trigger_field_updated	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_level_V3D_coord_trigger_field_updated()$/;"	f	class:Remap_grid_class
is_master_process_in_computing_node	CoR/cor_global_data.cxx	/^bool is_master_process_in_computing_node = true;$/;"	v
is_model_run_ended	Driver/timer_mgt.cxx	/^bool Components_time_mgt::is_model_run_ended(int comp_id, const char *annotation)$/;"	f	class:Components_time_mgt
is_operator_regriding	CoR/remap_operator_basis.h	/^        bool is_operator_regriding;$/;"	m	class:Remap_operator_basis
is_parameter_a_certain_grid_field	CoR/syntax_check.cxx	/^bool is_parameter_a_certain_grid_field(Remap_statement_operand *operand, const char *grid_field_label)$/;"	f
is_partial_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_partial_grid() const$/;"	f	class:Remap_grid_class
is_point_in_2D_cartesian_coord_cell	CoR/remap_common_utils.cxx	/^bool is_point_in_2D_cartesian_coord_cell(double point_coord1_value, $/;"	f
is_point_in_2D_cell	CoR/remap_common_utils.cxx	/^bool is_point_in_2D_cell(double point_coord1_value, $/;"	f
is_point_in_2D_sphere_coord_cell	CoR/remap_common_utils.cxx	/^bool is_point_in_2D_sphere_coord_cell(double point_sphere_coord_value_lon, $/;"	f
is_point_in_cartesian_coord_cell	CoR/grid_cell_search.cxx	/^bool H2D_grid_cell_search_cell::is_point_in_cartesian_coord_cell(double point_lon, double point_lat) const$/;"	f	class:H2D_grid_cell_search_cell
is_point_in_latlon_coord_cell	CoR/grid_cell_search.cxx	/^bool H2D_grid_cell_search_cell::is_point_in_latlon_coord_cell(double point_lon,double point_lat) const$/;"	f	class:H2D_grid_cell_search_cell
is_point_on_great_arc	CoR/remap_operator_c_interface.cxx	/^bool is_point_on_great_arc(double lon_point,$/;"	f
is_real_component_model	Parallel_MGT/compset_communicators_info_mgt.cxx	/^bool Comp_comm_group_mgt_node::is_real_component_model()$/;"	f	class:Comp_comm_group_mgt_node
is_registered	Parallel_MGT/decomp_info_mgt.h	/^        bool is_registered;$/;"	m	class:Decomp_info
is_registered_decomp	Parallel_MGT/decomp_info_mgt.h	/^        bool is_registered_decomp() { return is_registered; }$/;"	f	class:Decomp_info
is_registered_model_buf	Data_MGT/memory_mgt.h	/^        bool is_registered_model_buf;$/;"	m	class:Field_mem_info
is_remap_weight_empty	CoR/remap_weight_of_strategy_class.h	/^        bool is_remap_weight_empty() { return empty_remap_weight; }        $/;"	f	class:Remap_weight_of_operator_class
is_remote_data_buf_ready	Runtime_MGT/runtime_trans_algorithm.cxx	/^bool Runtime_trans_algorithm::is_remote_data_buf_ready(bool bypass_timer)$/;"	f	class:Runtime_trans_algorithm
is_restart_timer_on	Driver/coupling_interface.cxx	/^extern "C" void is_restart_timer_on$/;"	f
is_restart_timer_on	Driver/timer_mgt.cxx	/^bool Time_mgt::is_restart_timer_on() $/;"	f	class:Time_mgt
is_rotated_grid	CoR/remap_operator_grid.h	/^        bool is_rotated_grid;$/;"	m	class:Remap_operator_grid
is_sigma_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_sigma_grid()$/;"	f	class:Remap_grid_class
is_similar_grid_with	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_similar_grid_with(Remap_grid_class *another_grid) $/;"	f	class:Remap_grid_class
is_src_grid	CoR/remap_operator_grid.h	/^        bool is_src_grid;$/;"	m	class:Remap_operator_grid
is_string_decimal_number	Utils/common_utils.cxx	/^bool is_string_decimal_number(const char *string)$/;"	f
is_sub_grid_of_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_sub_grid_of_grid(Remap_grid_class *another_grid)$/;"	f	class:Remap_grid_class
is_subset_of_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_subset_of_grid(Remap_grid_class *another_grid) $/;"	f	class:Remap_grid_class
is_superset_of_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_superset_of_grid(Remap_grid_class *another_grid) $/;"	f	class:Remap_grid_class
is_the_same_as_another	Runtime_MGT/remapping_configuration_mgt.cxx	/^bool H2D_remapping_wgt_file_mgt::is_the_same_as_another(H2D_remapping_wgt_file_mgt *another_mgr)$/;"	f	class:H2D_remapping_wgt_file_mgt
is_the_same_as_another	Runtime_MGT/remapping_configuration_mgt.cxx	/^bool Remapping_algorithm_specification::is_the_same_as_another(Remapping_algorithm_specification *another)$/;"	f	class:Remapping_algorithm_specification
is_the_same_as_another	Runtime_MGT/remapping_configuration_mgt.cxx	/^bool Remapping_setting::is_the_same_as_another(Remapping_setting *another)$/;"	f	class:Remapping_setting
is_the_same_grid_with	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::is_the_same_grid_with(Remap_grid_class *another_grid) $/;"	f	class:Remap_grid_class
is_the_same_with	Driver/timer_mgt.cxx	/^bool Coupling_timer::is_the_same_with(Coupling_timer *another)$/;"	f	class:Coupling_timer
is_time_out_of_execution	Driver/timer_mgt.cxx	/^bool Time_mgt::is_time_out_of_execution(long another_time)$/;"	f	class:Time_mgt
is_timer_on	Driver/timer_mgt.cxx	/^bool Coupling_timer::is_timer_on()$/;"	f	class:Coupling_timer
is_timer_on	Driver/timer_mgt.cxx	/^bool Coupling_timer::is_timer_on(int current_year, int current_month, int current_day, int current_second, int current_num_elapsed_day,$/;"	f	class:Coupling_timer
is_timer_on	Driver/timer_mgt.cxx	/^bool Time_mgt::is_timer_on(const char *frequency_unit, int frequency_count, int local_lag_count)$/;"	f	class:Time_mgt
is_timer_on	Driver/timer_mgt.cxx	/^bool Timer_mgt::is_timer_on(int timer_id, const char *annotation)$/;"	f	class:Timer_mgt
is_triangle_legal	CoR/delaunay_voronoi.cxx	/^bool Delaunay_Voronoi::is_triangle_legal(const Point *pt, const Edge *edge)$/;"	f	class:Delaunay_Voronoi
is_unit_degree	CoR/remap_grid_data_class.cxx	/^bool Remap_grid_data_class::is_unit_degree()$/;"	f	class:Remap_grid_data_class
iterative_threshold_distance	CoR/remap_operator_bilinear.h	/^        double iterative_threshold_distance;$/;"	m	class:Remap_operator_bilinear
keep_monotonicity	CoR/remap_operator_spline_1D.h	/^        bool keep_monotonicity;$/;"	m	class:Remap_operator_spline_1D
key	Parallel_MGT/routing_info_mgt.h	/^    int key;$/;"	m	struct:routing_mapping_table_entry
key	Utils/dictionary.h	/^    char *key;$/;"	m	struct:Dictionary_node
keyword	Data_MGT/restart_mgt.h	/^        char keyword[NAME_STR_SIZE];$/;"	m	class:Restart_buffer_container
lag_seconds	Runtime_MGT/inout_interface_mgt.h	/^        int lag_seconds;$/;"	m	class:Connection_field_time_info
lastChild	XML/tinyxml.h	/^	TiXmlNode*		lastChild;$/;"	m	class:TiXmlNode
last_checksum	Data_MGT/memory_mgt.h	/^        long last_checksum;$/;"	m	class:Field_mem_info
last_define_time	Data_MGT/memory_mgt.h	/^        long last_define_time;$/;"	m	class:Field_mem_info
last_dst_cell_index	CoR/remap_operator_c_interface.cxx	/^long last_dst_cell_index;$/;"	v
last_execution_time	Runtime_MGT/inout_interface_mgt.h	/^        long last_execution_time;$/;"	m	class:Inout_interface
last_field_remote_recv_count	Runtime_MGT/runtime_trans_algorithm.h	/^        long last_field_remote_recv_count;$/;"	m	class:Runtime_trans_algorithm
last_history_receive_buffer_index	Runtime_MGT/runtime_trans_algorithm.h	/^        int last_history_receive_buffer_index;$/;"	m	class:Runtime_trans_algorithm
last_mask_values_dst	CoR/runtime_remap_function.h	/^        bool *last_mask_values_dst;$/;"	m	class:Runtime_remap_function
last_mask_values_src	CoR/runtime_remap_function.h	/^        bool *last_mask_values_src;$/;"	m	class:Runtime_remap_function
last_receive_field_sender_time	Runtime_MGT/runtime_trans_algorithm.h	/^        long last_receive_field_sender_time;$/;"	m	class:Runtime_trans_algorithm
last_receive_sender_time	Runtime_MGT/inout_interface_mgt.h	/^		long last_receive_sender_time;$/;"	m	class:Connection_coupling_procedure
last_receive_sender_time	Runtime_MGT/runtime_trans_algorithm.h	/^        long last_receive_sender_time;$/;"	m	class:Runtime_trans_algorithm
last_redundant_mark_src	CoR/runtime_remap_function.h	/^        bool *last_redundant_mark_src;$/;"	m	class:Runtime_remap_function
last_remap_weight_of_operator_instance	CoR/runtime_remap_function.h	/^        Remap_weight_of_operator_instance_class *last_remap_weight_of_operator_instance;$/;"	m	class:Runtime_remap_function
last_remapping_time_iter	CoR/runtime_remap_function.h	/^        long last_remapping_time_iter;$/;"	m	class:Runtime_remap_function
last_remote_fields_time	Runtime_MGT/inout_interface_mgt.h	/^        long last_remote_fields_time;$/;"	m	class:Connection_coupling_procedure
last_restart_write_elapsed_time	Data_MGT/restart_mgt.h	/^        long last_restart_write_elapsed_time;$/;"	m	class:Restart_mgt
last_restart_write_full_time	Data_MGT/restart_mgt.h	/^        long last_restart_write_full_time;$/;"	m	class:Restart_mgt
last_timer_date	Runtime_MGT/inout_interface_mgt.h	/^		int last_timer_date;$/;"	m	class:Connection_field_time_info
last_timer_num_elapsed_days	Runtime_MGT/inout_interface_mgt.h	/^        int last_timer_num_elapsed_days;$/;"	m	class:Connection_field_time_info
last_timer_second	Runtime_MGT/inout_interface_mgt.h	/^        int last_timer_second;$/;"	m	class:Connection_field_time_info
lat	CoR/delaunay_voronoi.h	/^        double lat;     \/* latitude coordinate    *\/$/;"	m	class:Point
latest_connection_id	Runtime_MGT/coupling_generator.h	/^        int latest_connection_id;$/;"	m	class:Coupling_generator
leaf_grids_of_remap_operator_grid_dst	CoR/runtime_remap_function.h	/^        Remap_grid_class *leaf_grids_of_remap_operator_grid_dst[256];$/;"	m	class:Runtime_remap_function
leaf_grids_of_remap_operator_grid_src	CoR/runtime_remap_function.h	/^        Remap_grid_class *leaf_grids_of_remap_operator_grid_src[256];$/;"	m	class:Runtime_remap_function
leap_year_on	Driver/timer_mgt.h	/^        bool leap_year_on;$/;"	m	class:Time_mgt
legalize_count	CoR/delaunay_voronoi.h	/^        int legalize_count[3];$/;"	m	class:Triangle
legalize_triangles	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::legalize_triangles(Point *vr, Edge *edge, vector<Triangle*> *leaf_triangles)$/;"	f	class:Delaunay_Voronoi
length	XML/tinystr.h	/^	size_type length () const { return rep_->size; }$/;"	f	class:TiXmlString
level_V3D_coord_dynamic_trigger_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *level_V3D_coord_dynamic_trigger_field;$/;"	m	class:Remap_grid_class
level_V3D_coord_trigger_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *level_V3D_coord_trigger_field;$/;"	m	class:Remap_grid_class
level_V3D_coord_trigger_field_specified	CoR/remap_grid_class.h	/^        bool level_V3D_coord_trigger_field_specified;$/;"	m	class:Remap_grid_class
lineBreak	XML/tinyxml.h	/^	TIXML_STRING lineBreak;$/;"	m	class:TiXmlPrinter
line_number	CoR/cor_global_data.cxx	/^int line_number = -1;$/;"	v
line_number	CoR/remap_mgt.h	/^            int line_number;$/;"	m	struct:Remap_mgt::Remap_statement
line_number	Data_MGT/field_info_mgt.h	/^    int line_number;$/;"	m	struct:field_attr
link_grids	CoR/remap_grid_class.cxx	/^void Remap_grid_class::link_grids(Remap_grid_class *top_grid, const char *grid_name_suffix)$/;"	f	class:Remap_grid_class
load_comp_info_from_XML	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node *Comp_comm_group_mgt_mgr::load_comp_info_from_XML(int host_comp_id, const char *comp_full_name, MPI_Comm comm)$/;"	f	class:Comp_comm_group_mgt_mgr
load_comps_full_names_from_config_file	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::load_comps_full_names_from_config_file(int comp_id, const char *keyword, int size_comps_full_names, int size_individual_or_family, int *num_comps, const char *annotation)$/;"	f	class:Coupling_generator
load_restart_data	Data_MGT/restart_mgt.cxx	/^void Restart_buffer_container::load_restart_data(void *data, long data_size)$/;"	f	class:Restart_buffer_container
load_restart_string	Data_MGT/restart_mgt.cxx	/^char *Restart_buffer_container::load_restart_string(char *str, long &str_size, long max_size)$/;"	f	class:Restart_buffer_container
load_string	Utils/common_utils.cxx	/^char *load_string(char *str, long &str_size, long max_size, const char *array_buffer, long &buffer_content_iter, const char *file_name)$/;"	f
local_cell_global_indx	Parallel_MGT/decomp_info_mgt.h	/^        int *local_cell_global_indx;$/;"	m	class:Decomp_info
local_comm	Parallel_MGT/fields_gather_scatter_mgt.h	/^        MPI_Comm local_comm;$/;"	m	class:Gather_scatter_rearrange_info
local_comp_node	Runtime_MGT/runtime_trans_algorithm.h	/^        Comp_comm_group_mgt_node * local_comp_node;$/;"	m	class:Runtime_trans_algorithm
local_decomp_name	Parallel_MGT/routing_info_mgt.h	/^        char local_decomp_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
local_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        long local_decomp_size;$/;"	m	class:Routing_info
local_index	Parallel_MGT/routing_info_mgt.h	/^    int local_index;          $/;"	m	struct:routing_mapping_table_entry
local_indx_segment_lengths	Parallel_MGT/routing_info_mgt.h	/^    int *local_indx_segment_lengths;$/;"	m	struct:Routing_info_with_one_process
local_indx_segment_starts	Parallel_MGT/routing_info_mgt.h	/^    int *local_indx_segment_starts;$/;"	m	struct:Routing_info_with_one_process
local_lag_count	Driver/timer_mgt.h	/^        int local_lag_count;$/;"	m	class:Coupling_timer
local_process_id	Parallel_MGT/routing_info_mgt.h	/^    int local_process_id;       $/;"	m	struct:routing_mapping_table_entry
local_processes_global_ids	Parallel_MGT/compset_communicators_info_mgt.h	/^        std::vector<int> local_processes_global_ids;$/;"	m	class:Comp_comm_group_mgt_node
location	XML/tinyxml.h	/^	TiXmlCursor location;$/;"	m	class:TiXmlBase
log_buffer	Parallel_MGT/compset_communicators_info_mgt.h	/^        char *log_buffer;$/;"	m	class:Comp_comm_group_mgt_mgr
log_buffer	Parallel_MGT/compset_communicators_info_mgt.h	/^        char *log_buffer;$/;"	m	class:Comp_comm_group_mgt_node
log_buffer_content_size	Parallel_MGT/compset_communicators_info_mgt.h	/^        int log_buffer_content_size;$/;"	m	class:Comp_comm_group_mgt_mgr
log_buffer_content_size	Parallel_MGT/compset_communicators_info_mgt.h	/^        int log_buffer_content_size;$/;"	m	class:Comp_comm_group_mgt_node
logical_indx_lookup_table_local	Parallel_MGT/routing_info_mgt.h	/^        int *logical_indx_lookup_table_local;$/;"	m	class:Routing_info
logical_indx_lookup_table_remote	Parallel_MGT/routing_info_mgt.h	/^        int *logical_indx_lookup_table_remote;$/;"	m	class:Routing_info
lon	CoR/delaunay_voronoi.h	/^        double lon;     \/* lontitude coordinate *\/$/;"	m	class:Point
mark_empty_remap_weight	CoR/remap_weight_of_strategy_class.h	/^        void mark_empty_remap_weight() { empty_remap_weight = true; }$/;"	f	class:Remap_weight_of_operator_class
mark_empty_remap_weight	CoR/remap_weight_of_strategy_class.h	/^        void mark_empty_remap_weight() { remap_weights_of_operators[remap_weights_of_operators.size()-1]->mark_empty_remap_weight(); }$/;"	f	class:Remap_weight_of_strategy_class
mask	CoR/grid_cell_search.h	/^        bool mask;$/;"	m	class:H2D_grid_cell_search_cell
mask_values	CoR/remap_operator_grid.h	/^        bool *mask_values;$/;"	m	class:Remap_operator_grid
masks_are_known	CoR/remap_grid_class.h	/^        bool masks_are_known;        $/;"	m	class:Remap_grid_class
match	Data_MGT/restart_mgt.cxx	/^bool Restart_buffer_container::match(const char *buf_type, const char *keyword)$/;"	f	class:Restart_buffer_container
match	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^bool Gather_scatter_rearrange_info::match(int host_comp_id, int decomp_id, int grid_id, const char *data_type)$/;"	f	class:Gather_scatter_rearrange_info
match_H2D_remapping_wgt	Runtime_MGT/remapping_configuration_mgt.cxx	/^bool H2D_remapping_wgt_file_info::match_H2D_remapping_wgt(Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid)$/;"	f	class:H2D_remapping_wgt_file_info
match_IO_object	CoR/io_basis.cxx	/^bool IO_basis::match_IO_object(const char *object_name)$/;"	f	class:IO_basis
match_defined_objects	CoR/remap_mgt.cxx	/^int Remap_mgt::match_defined_objects(const char *statement_word)$/;"	f	class:Remap_mgt
match_degree_values	CoR/remap_common_utils.cxx	/^void match_degree_values(double &data_value1, double &data_value2)$/;"	f
match_field_instance	Data_MGT/memory_mgt.cxx	/^bool Field_mem_info::match_field_instance(const char *field_name, int decomp_id, int comp_or_grid_id, int buf_mark)$/;"	f	class:Field_mem_info
match_field_mem	Data_MGT/memory_mgt.cxx	/^bool Field_mem_info::match_field_mem(void *data_buffer)$/;"	f	class:Field_mem_info
match_function_words	CoR/remap_mgt.cxx	/^int Remap_mgt::match_function_words(const char *statement_word)$/;"	f	class:Remap_mgt
match_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::match_grid(const char *grid_name) const$/;"	f	class:Remap_grid_class
match_grid	CoR/remap_grid_class.cxx	/^bool Remap_grid_class::match_grid(int num_sized_sub_grids, Remap_grid_class **sized_sub_grids)$/;"	f	class:Remap_grid_class
match_object_name	CoR/remap_weight_of_strategy_class.cxx	/^bool Remap_weight_of_strategy_class::match_object_name(const char*object_name)$/;"	f	class:Remap_weight_of_strategy_class
match_remap_grid_data	CoR/remap_grid_data_class.cxx	/^bool Remap_grid_data_class::match_remap_grid_data(const char *field_data_name)$/;"	f	class:Remap_grid_data_class
match_remap_operator	CoR/remap_operator_basis.cxx	/^bool Remap_operator_basis::match_remap_operator(Remap_grid_class *grid_src, Remap_grid_class *grid_dst, const char *operator_name)$/;"	f	class:Remap_operator_basis
match_remap_operator	CoR/remap_operator_basis.cxx	/^bool Remap_operator_basis::match_remap_operator(const char *object_name)$/;"	f	class:Remap_operator_basis
match_remap_strategy	CoR/remap_strategy_class.cxx	/^bool Remap_strategy_class::match_remap_strategy(const char *strategy_name)$/;"	f	class:Remap_strategy_class
match_requirements	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^bool Runtime_remapping_weights::match_requirements(const char *src_comp_full_name, const char *dst_comp_full_name, Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid, Remapping_setting *remapping_setting, Decomp_info *dst_decomp_info)$/;"	f	class:Runtime_remapping_weights
match_reserved_words	CoR/remap_mgt.cxx	/^int Remap_mgt::match_reserved_words(const char *statement_word)$/;"	f	class:Remap_mgt
match_reserved_words	CoR/remap_parser.cxx	/^int Remap_parser::match_reserved_words(const char *statement_string)$/;"	f	class:Remap_parser
match_router	Parallel_MGT/routing_info_mgt.cxx	/^bool Routing_info::match_router(const int src_comp_id, const int dst_comp_id, const char *src_decomp_name, const char *dst_decomp_name)$/;"	f	class:Routing_info
match_seperator_words	CoR/remap_parser.cxx	/^int Remap_parser::match_seperator_words(const char *statement_string)$/;"	f	class:Remap_parser
match_timing_unit	Parallel_MGT/performance_timing_mgt.cxx	/^bool Performance_timing_unit::match_timing_unit(int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword)$/;"	f	class:Performance_timing_unit
matched_grid_pair	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<std::pair<Original_grid_info*, Original_grid_info*> > matched_grid_pair;$/;"	m	class:H2D_remapping_wgt_file_info
max_num_found_nearest_points	CoR/remap_operator_bilinear.h	/^        int max_num_found_nearest_points;$/;"	m	class:Remap_operator_bilinear
max_remote_lag_seconds	Parallel_MGT/compset_communicators_info_mgt.h	/^        int max_remote_lag_seconds;$/;"	m	class:Comp_comm_group_mgt_node
mem_info_dst	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^    Field_mem_info *mem_info_dst;$/;"	m	struct:cumulate_average_field_info
mem_info_src	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^    Field_mem_info *mem_info_src;$/;"	m	struct:cumulate_average_field_info
memory_manager	Driver/global_data.cxx	/^Memory_mgt *memory_manager = NULL;$/;"	v
merge_routing_mapping_tables	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::merge_routing_mapping_tables(routing_mapping_table_entry **local_routing_mapping_table_entries, routing_mapping_table_entry *remote_routing_mapping_table_entries, int num_local_routing_mapping_table_entries, int num_remote_routing_mapping_table_entries, int min_key_value, int max_key_value, int *num_return_routing_mapping_table_entries)$/;"	f	class:Routing_info
mgt_info_has_been_restarted	Runtime_MGT/inout_interface_mgt.h	/^        bool mgt_info_has_been_restarted;$/;"	m	class:Inout_interface
mid_point_grid	CoR/remap_grid_class.h	/^        Remap_grid_class *mid_point_grid;$/;"	m	class:Remap_grid_class
mid_point_grid	Data_MGT/original_grid_mgt.h	/^        Original_grid_info *mid_point_grid;$/;"	m	class:Original_grid_info
min_remote_lag_seconds	Parallel_MGT/compset_communicators_info_mgt.h	/^        int min_remote_lag_seconds;$/;"	m	class:Comp_comm_group_mgt_node
mpibuf	Parallel_MGT/fields_gather_scatter_mgt.h	/^        void *mpibuf;$/;"	m	class:Gather_scatter_rearrange_info
name	XML/tinyxml.h	/^	TIXML_STRING name;$/;"	m	class:TiXmlAttribute
name_first_super_grid_of_enable_setting_coord_value	CoR/remap_grid_class.h	/^        char name_first_super_grid_of_enable_setting_coord_value[NAME_STR_SIZE];$/;"	m	class:Remap_grid_class
name_super_grid_of_setting_coord_values	CoR/remap_grid_class.h	/^        char name_super_grid_of_setting_coord_values[NAME_STR_SIZE];$/;"	m	class:Remap_grid_class
ncfile_id	CoR/io_netcdf.h	/^        int ncfile_id;$/;"	m	class:IO_netcdf
netcdf_file_object	Data_MGT/IO_field_mgt.h	/^        IO_netcdf *netcdf_file_object;$/;"	m	class:IO_output_procedure
new_decomp_id	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int new_decomp_id;$/;"	m	class:Gather_scatter_rearrange_info
next	Utils/dictionary.h	/^    struct Dictionary_node *next;$/;"	m	struct:Dictionary_node	typeref:struct:Dictionary_node::Dictionary_node
next	XML/tinyxml.h	/^	TiXmlAttribute*	next;$/;"	m	class:TiXmlAttribute
next	XML/tinyxml.h	/^	TiXmlNode*		next;$/;"	m	class:TiXmlNode
next_edge_in_triangle	CoR/delaunay_voronoi.h	/^        Edge *next_edge_in_triangle;            \/* the next_edge_in_triangle edge, whose tail is the head of this edge but head isn't the tail of this edge *\/$/;"	m	class:Edge
next_timer_date	Runtime_MGT/inout_interface_mgt.h	/^		int next_timer_date;$/;"	m	class:Connection_field_time_info
next_timer_num_elapsed_days	Runtime_MGT/inout_interface_mgt.h	/^        int next_timer_num_elapsed_days;$/;"	m	class:Connection_field_time_info
next_timer_second	Runtime_MGT/inout_interface_mgt.h	/^        int next_timer_second;$/;"	m	class:Connection_field_time_info
node	XML/tinyxml.h	/^	TiXmlNode* node;$/;"	m	class:TiXmlHandle
npos	XML/tinystr.cxx	/^const TiXmlString::size_type TiXmlString::npos = static_cast< TiXmlString::size_type >(-1);$/;"	m	class:TiXmlString	file:
npos	XML/tinystr.h	/^	static const size_type npos; \/\/ = -1;$/;"	m	class:TiXmlString
nullrep_	XML/tinystr.cxx	/^TiXmlString::Rep TiXmlString::nullrep_ = { 0, 0, { '\\0' } };$/;"	m	class:TiXmlString	file:
nullrep_	XML/tinystr.h	/^	static Rep nullrep_;$/;"	m	class:TiXmlString
num_cells	CoR/delaunay_voronoi.h	/^        int num_cells;$/;"	m	class:Delaunay_Voronoi
num_cells	CoR/grid_cell_search.h	/^        int num_cells;$/;"	m	class:H2D_grid_cell_search_engine
num_cells	CoR/grid_cell_search.h	/^        int num_cells;$/;"	m	class:H2D_grid_cell_search_tile
num_coords	CoR/remap_operator_grid.h	/^        int num_coords;$/;"	m	class:Vertex_values_group
num_days_of_month_of_leap_year	Driver/timer_mgt.cxx	/^int num_days_of_month_of_leap_year[] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};$/;"	v
num_days_of_month_of_nonleap_year	Driver/timer_mgt.cxx	/^int num_days_of_month_of_nonleap_year[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};$/;"	v
num_dimensions	CoR/remap_grid_class.h	/^        int num_dimensions;$/;"	m	class:Remap_grid_class
num_dimensions	CoR/remap_operator_basis.h	/^        int num_dimensions;$/;"	m	class:Remap_operator_basis
num_dimensions	Parallel_MGT/routing_info_mgt.h	/^        int num_dimensions;$/;"	m	class:Routing_info
num_dst_fields	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        int num_dst_fields;$/;"	m	class:Runtime_algorithm_basis
num_dst_local_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^		int num_dst_local_routing_mapping_table_entries;$/;"	m	class:Routing_info
num_dst_remote_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^		int num_dst_remote_routing_mapping_table_entries;$/;"	m	class:Routing_info
num_elements	CoR/radix_sort.h	/^        long num_elements;$/;"	m	class:Radix_sort
num_elements	Utils/dictionary.h	/^        int num_elements;$/;"	m	class:Dictionary
num_elements_in_field	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^    int num_elements_in_field;$/;"	m	struct:cumulate_average_field_info
num_elements_transferred	Parallel_MGT/routing_info_mgt.h	/^    int num_elements_transferred;$/;"	m	struct:Routing_info_with_one_process
num_extension_names	CoR/remap_statement_operand.h	/^    int num_extension_names;$/;"	m	struct:Remap_statement_operand
num_field_data_grids_in_remapping_process	CoR/remap_weight_of_strategy_class.h	/^        int num_field_data_grids_in_remapping_process;$/;"	m	class:Remap_weight_of_strategy_class
num_fields_connected	Runtime_MGT/inout_interface_mgt.h	/^        int num_fields_connected;$/;"	m	class:Inout_interface
num_global_cells	Parallel_MGT/decomp_info_mgt.h	/^        int num_global_cells;$/;"	m	class:Decomp_info
num_grid_dimensions	CoR/remap_operator_grid.h	/^        int num_grid_dimensions;$/;"	m	class:Remap_operator_grid
num_hashing_entries	Utils/dictionary.h	/^        int num_hashing_entries;$/;"	m	class:Dictionary
num_leaf_grids_of_remap_operator_grid_dst	CoR/runtime_remap_function.h	/^        int num_leaf_grids_of_remap_operator_grid_dst;$/;"	m	class:Runtime_remap_function
num_leaf_grids_of_remap_operator_grid_src	CoR/runtime_remap_function.h	/^        int num_leaf_grids_of_remap_operator_grid_src;$/;"	m	class:Runtime_remap_function
num_levels	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int num_levels;$/;"	m	class:Gather_scatter_rearrange_info
num_local_cells	Parallel_MGT/decomp_info_mgt.h	/^        int num_local_cells;$/;"	m	class:Decomp_info
num_local_indx_segments	Parallel_MGT/routing_info_mgt.h	/^    int num_local_indx_segments;$/;"	m	struct:Routing_info_with_one_process
num_local_procs	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int num_local_procs;$/;"	m	class:Gather_scatter_rearrange_info
num_local_procs	Runtime_MGT/runtime_trans_algorithm.h	/^        int num_local_procs;$/;"	m	class:Runtime_trans_algorithm
num_nearest_points	CoR/remap_operator_bilinear.h	/^        int num_nearest_points;$/;"	m	class:Remap_operator_bilinear
num_nearest_points	CoR/remap_operator_distwgt.h	/^        int num_nearest_points;$/;"	m	class:Remap_operator_distwgt
num_neighbors	CoR/remap_operator_grid.h	/^        int num_neighbors;$/;"	m	class:Remap_operator_grid
num_neighbors	CoR/remap_operator_grid.h	/^        int num_neighbors;$/;"	m	class:Vertex_values_group
num_order	CoR/remap_operator_conserv_2D.h	/^        int num_order;$/;"	m	class:Remap_operator_conserv_2D
num_period	CoR/remap_operator_regrid.h	/^        int num_period;$/;"	m	class:Remap_operator_regrid
num_period	CoR/remap_operator_smooth.h	/^        int num_period;$/;"	m	class:Remap_operator_smooth
num_points_in_each_cell	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int num_points_in_each_cell;$/;"	m	class:Gather_scatter_rearrange_info
num_power	CoR/remap_operator_bilinear.h	/^        double num_power;$/;"	m	class:Remap_operator_bilinear
num_power	CoR/remap_operator_distwgt.h	/^        double num_power;$/;"	m	class:Remap_operator_distwgt
num_radixes	CoR/radix_sort.h	/^        int num_radixes;$/;"	m	class:Radix_sort
num_recv_procs_related	Runtime_MGT/runtime_trans_algorithm.h	/^        int num_recv_procs_related;$/;"	m	class:Runtime_trans_algorithm
num_remaped_dst_cells_indexes	CoR/remap_weight_sparse_matrix.h	/^        long num_remaped_dst_cells_indexes;$/;"	m	class:Remap_weight_sparse_matrix
num_remapping_times	CoR/runtime_remap_function.h	/^        long num_remapping_times;$/;"	m	class:Runtime_remap_function
num_remote_procs	Runtime_MGT/runtime_trans_algorithm.h	/^        int num_remote_procs;$/;"	m	class:Runtime_trans_algorithm
num_remote_procs_related	Runtime_MGT/runtime_trans_algorithm.h	/^        int num_remote_procs_related;$/;"	m	class:Runtime_trans_algorithm
num_sized_grids_of_interchanged_grid	CoR/runtime_remap_function.h	/^        int num_sized_grids_of_interchanged_grid;$/;"	m	class:Runtime_remap_function
num_src_fields	Runtime_MGT/Runtime_Algorithm_Basis.h	/^        int num_src_fields;$/;"	m	class:Runtime_algorithm_basis
num_src_local_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^        int num_src_local_routing_mapping_table_entries;$/;"	m	class:Routing_info
num_src_remote_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^        int num_src_remote_routing_mapping_table_entries;$/;"	m	class:Routing_info
num_total_cells	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int num_total_cells;$/;"	m	class:Gather_scatter_rearrange_info
num_total_global_procs	Parallel_MGT/compset_communicators_info_mgt.h	/^        int num_total_global_procs;$/;"	m	class:Comp_comm_group_mgt_mgr
num_total_steps	Driver/timer_mgt.h	/^        long num_total_steps;$/;"	m	class:Time_mgt
num_transfered_fields	Runtime_MGT/runtime_trans_algorithm.h	/^        int num_transfered_fields;$/;"	m	class:Runtime_trans_algorithm
num_useful_src_cells	CoR/remap_operator_1D_basis.h	/^        int num_useful_src_cells;$/;"	m	class:Remap_operator_1D_basis
num_vertex	CoR/grid_cell_search.h	/^        int num_vertex;$/;"	m	class:H2D_grid_cell_search_cell
num_vertex	CoR/remap_operator_grid.h	/^        int num_vertex;$/;"	m	class:Vertex_values_group
num_vertex_values_groups	CoR/remap_operator_grid.h	/^        int num_vertex_values_groups;$/;"	m	class:Remap_operator_grid
num_vertexes	CoR/remap_grid_class.h	/^        int num_vertexes;$/;"	m	class:Remap_grid_class
num_vertexes	CoR/remap_operator_grid.h	/^        int num_vertexes;$/;"	m	class:Remap_operator_grid
num_visited_cells	CoR/remap_operator_grid.h	/^        long num_visited_cells;$/;"	m	class:Remap_operator_grid
num_weights	CoR/remap_weight_sparse_matrix.h	/^        long num_weights;$/;"	m	class:Remap_weight_sparse_matrix
num_wgts	Runtime_MGT/remapping_configuration_mgt.h	/^        long num_wgts;$/;"	m	class:H2D_remapping_wgt_file_info
object	CoR/remap_statement_operand.h	/^    Remap_statement_object *object;$/;"	m	struct:Remap_statement_operand
object_name	CoR/io_basis.h	/^        char object_name[256];$/;"	m	class:IO_basis
object_name	CoR/remap_operator_basis.h	/^        char object_name[256];$/;"	m	class:Remap_operator_basis
object_name	CoR/remap_statement_operand.h	/^    char object_name[256];$/;"	m	struct:Remap_statement_object
object_name	CoR/remap_weight_of_strategy_class.h	/^        char object_name[NAME_STR_SIZE];$/;"	m	class:Remap_weight_of_strategy_class
object_pointer	CoR/remap_statement_operand.h	/^    void *object_pointer;$/;"	m	struct:Remap_statement_object
object_type	CoR/remap_statement_operand.h	/^    char object_type[256];$/;"	m	struct:Remap_statement_object
open_XML_file_to_read	Driver/CCPL_api_mgt.cxx	/^TiXmlDocument *open_XML_file_to_read(int comp_id, const char *XML_file_name, MPI_Comm comm, bool wait_file)$/;"	f
open_comp_model_log_file	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_node::open_comp_model_log_file(int *log_file_device_id)$/;"	f	class:Comp_comm_group_mgt_node
open_format	CoR/io_basis.h	/^        char open_format[256];$/;"	m	class:IO_basis
operator !=	XML/tinystr.h	/^inline bool operator != (const TiXmlString & a, const TiXmlString & b) { return !(a == b); }$/;"	f
operator !=	XML/tinystr.h	/^inline bool operator != (const TiXmlString & a, const char* b) { return !(a == b); }$/;"	f
operator !=	XML/tinystr.h	/^inline bool operator != (const char* a, const TiXmlString & b) { return !(b == a); }$/;"	f
operator +	XML/tinystr.cxx	/^TiXmlString operator + (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator +	XML/tinystr.cxx	/^TiXmlString operator + (const TiXmlString & a, const char* b)$/;"	f
operator +	XML/tinystr.cxx	/^TiXmlString operator + (const char* a, const TiXmlString & b)$/;"	f
operator +=	XML/tinystr.h	/^	TiXmlString& operator += (char single)$/;"	f	class:TiXmlString
operator +=	XML/tinystr.h	/^	TiXmlString& operator += (const TiXmlString & suffix)$/;"	f	class:TiXmlString
operator +=	XML/tinystr.h	/^	TiXmlString& operator += (const char * suffix)$/;"	f	class:TiXmlString
operator <	Parallel_MGT/routing_info_mgt.h	/^    bool operator<(const routing_mapping_table_entry b) const { return this->key < b.key; }$/;"	f	struct:routing_mapping_table_entry
operator <	XML/tinystr.h	/^inline bool operator < (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator <	XML/tinyxml.h	/^	bool operator<( const TiXmlAttribute& rhs )	 const { return name < rhs.name; }$/;"	f	class:TiXmlAttribute
operator <<	CoR/delaunay_voronoi.cxx	/^ostream& operator<<(ostream &out, const Point &point)$/;"	f
operator <<	XML/tinystr.h	/^	TiXmlOutStream & operator << (const TiXmlString & in)$/;"	f	class:TiXmlOutStream
operator <<	XML/tinystr.h	/^	TiXmlOutStream & operator << (const char * in)$/;"	f	class:TiXmlOutStream
operator <<	XML/tinyxml.cxx	/^std::ostream& operator<< (std::ostream & out, const TiXmlNode & base)$/;"	f
operator <<	XML/tinyxml.cxx	/^std::string& operator<< (std::string& out, const TiXmlNode& base )$/;"	f
operator <=	XML/tinystr.h	/^inline bool operator <= (const TiXmlString & a, const TiXmlString & b) { return !(b < a); }$/;"	f
operator =	XML/tinystr.h	/^	TiXmlString& operator = (const TiXmlString & copy)$/;"	f	class:TiXmlString
operator =	XML/tinystr.h	/^	TiXmlString& operator = (const char * copy)$/;"	f	class:TiXmlString
operator =	XML/tinyxml.cxx	/^TiXmlComment& TiXmlComment::operator=( const TiXmlComment& base )$/;"	f	class:TiXmlComment
operator =	XML/tinyxml.cxx	/^TiXmlDeclaration& TiXmlDeclaration::operator=( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration
operator =	XML/tinyxml.cxx	/^TiXmlDocument& TiXmlDocument::operator=( const TiXmlDocument& copy )$/;"	f	class:TiXmlDocument
operator =	XML/tinyxml.cxx	/^TiXmlElement& TiXmlElement::operator=( const TiXmlElement& base )$/;"	f	class:TiXmlElement
operator =	XML/tinyxml.h	/^	TiXmlHandle operator=( const TiXmlHandle& ref ) { if ( &ref != this ) this->node = ref.node; return *this; }$/;"	f	class:TiXmlHandle
operator =	XML/tinyxml.h	/^	TiXmlText& operator=( const TiXmlText& base )							 	{ base.CopyTo( this ); return *this; }$/;"	f	class:TiXmlText
operator =	XML/tinyxml.h	/^	TiXmlUnknown& operator=( const TiXmlUnknown& copy )										{ copy.CopyTo( this ); return *this; }$/;"	f	class:TiXmlUnknown
operator ==	Parallel_MGT/routing_info_mgt.h	/^    bool operator==(const routing_mapping_table_entry b) const { return this->key == b.key; }$/;"	f	struct:routing_mapping_table_entry
operator ==	XML/tinystr.h	/^inline bool operator == (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator ==	XML/tinystr.h	/^inline bool operator == (const TiXmlString & a, const char* b) { return strcmp(a.c_str(), b) == 0; }$/;"	f
operator ==	XML/tinystr.h	/^inline bool operator == (const char* a, const TiXmlString & b) { return b == a; }$/;"	f
operator ==	XML/tinyxml.h	/^	bool operator==( const TiXmlAttribute& rhs ) const { return rhs.name == name; }$/;"	f	class:TiXmlAttribute
operator >	Parallel_MGT/routing_info_mgt.h	/^    bool operator>(const routing_mapping_table_entry b) const { return this->key > b.key; }   $/;"	f	struct:routing_mapping_table_entry
operator >	XML/tinystr.h	/^inline bool operator >  (const TiXmlString & a, const TiXmlString & b) { return b < a; }$/;"	f
operator >	XML/tinyxml.h	/^	bool operator>( const TiXmlAttribute& rhs )  const { return name > rhs.name; }$/;"	f	class:TiXmlAttribute
operator >=	XML/tinystr.h	/^inline bool operator >= (const TiXmlString & a, const TiXmlString & b) { return !(a < b); }$/;"	f
operator >>	XML/tinyxml.cxx	/^std::istream& operator>> (std::istream & in, TiXmlNode & base)$/;"	f
operator []	XML/tinystr.h	/^	char& operator [] (size_type index) const$/;"	f	class:TiXmlString
operator_grid_dst	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *operator_grid_dst;$/;"	m	class:Remap_weight_of_operator_class
operator_grid_src	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_class *operator_grid_src;$/;"	m	class:Remap_weight_of_operator_class
operator_name	CoR/remap_operator_basis.h	/^        char operator_name[256];$/;"	m	class:Remap_operator_basis
or_or_and	Driver/timer_mgt.h	/^        int or_or_and;$/;"	m	class:Coupling_timer
original_CoR_grid	Data_MGT/original_grid_mgt.h	/^        Remap_grid_class *original_CoR_grid;$/;"	m	class:Original_grid_info
original_decomp_id	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int original_decomp_id;$/;"	m	class:Gather_scatter_rearrange_info
original_grid	CoR/remap_grid_class.h	/^        Remap_grid_class *original_grid;$/;"	m	class:Remap_grid_class
original_grid	Parallel_MGT/decomp_grid_mgt.h	/^        Remap_grid_class *original_grid;$/;"	m	class:Decomp_grid_info
original_grid_mask_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *original_grid_mask_field;$/;"	m	class:Remap_grid_class
original_grid_mgr	Driver/global_data.cxx	/^Original_grid_mgt *original_grid_mgr = NULL;$/;"	v
original_grids	Data_MGT/original_grid_mgt.h	/^        std::vector<Original_grid_info*> original_grids;$/;"	m	class:Original_grid_mgt
original_remap_operator	CoR/remap_weight_of_strategy_class.h	/^        Remap_operator_basis *original_remap_operator;$/;"	m	class:Remap_weight_of_operator_class
output_CCPL_log	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void output_CCPL_log(const char *log_string, const char *log_file_name, char **log_buffer, int &log_buffer_content_size, bool flush_log_file)$/;"	f
output_log	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::output_log(const char *log_string, bool flush_log_file)$/;"	f	class:Comp_comm_group_mgt_mgr
output_log	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::output_log(const char *log_string, bool flush_log_file)$/;"	f	class:Comp_comm_group_mgt_node
output_performance_timing	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::output_performance_timing()$/;"	f	class:Comp_comm_group_mgt_mgr
output_routing_mapping_table	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::output_routing_mapping_table(routing_mapping_table_entry *routing_mapping_table_entries, char *hint, int num_local_routing_mapping_table_entries, int current_proc_id)$/;"	f	class:Routing_info
pack_MD_data	Runtime_MGT/runtime_trans_algorithm.cxx	/^void Runtime_trans_algorithm::pack_MD_data(int remote_proc_index, int field_index, int * offset)$/;"	f	class:Runtime_trans_algorithm
pack_segment_data	Runtime_MGT/runtime_trans_algorithm.cxx	/^template <class T> void Runtime_trans_algorithm::pack_segment_data(T *mpi_buf, T *field_data_buf, int segment_start, int segment_size, int field_2D_size, int num_lev, bool is_V1D_sub_grid_after_H2D_sub_grid)$/;"	f	class:Runtime_trans_algorithm
packed_data_values_src	CoR/remap_operator_1D_basis.h	/^        double *packed_data_values_src;$/;"	m	class:Remap_operator_1D_basis
parallel_remap_weight_of_operator_manager	CoR/cor_global_data.cxx	/^Remap_weight_of_operator_mgt *parallel_remap_weight_of_operator_manager;$/;"	v
parallel_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_weight_of_strategy_class *parallel_remapping_weights;$/;"	m	class:Runtime_remapping_weights
parameters_name	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<char *> parameters_name;$/;"	m	class:Remapping_algorithm_specification
parameters_value	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<char *> parameters_value;$/;"	m	class:Remapping_algorithm_specification
parent	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_tile *parent;$/;"	m	class:H2D_grid_cell_search_tile
parent	Parallel_MGT/compset_communicators_info_mgt.h	/^        Comp_comm_group_mgt_node *parent;$/;"	m	class:Comp_comm_group_mgt_node
parent	XML/tinyxml.h	/^	TiXmlNode*		parent;$/;"	m	class:TiXmlNode
parse_statement	CoR/remap_mgt.cxx	/^void Remap_mgt::parse_statement(const int num_words_in_statement, char **words_in_statement)$/;"	f	class:Remap_mgt
partial_areas	CoR/remap_grid_class.h	/^        std::vector<Partial_area *> partial_areas;$/;"	m	class:Remap_grid_class
partial_nerghbors_indexes	CoR/remap_operator_grid.h	/^        long *partial_nerghbors_indexes;$/;"	m	class:Vertex_values_group
partition	CoR/quick_sort.h	/^template <class T1, class T2> long partition(T1 *sorted_values,$/;"	f
partition	CoR/radix_sort.h	/^template <class T1, class T2> long Radix_sort<T1,T2>::partition(long segment_start, long segment_end, int radix_id, T1 pivot)$/;"	f	class:Radix_sort
pass_transfer_parameters	Runtime_MGT/runtime_trans_algorithm.cxx	/^void Runtime_trans_algorithm::pass_transfer_parameters(long current_remote_fields_time, int bypass_counter)$/;"	f	class:Runtime_trans_algorithm
performance_timing_add	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_mgt::performance_timing_add(int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword, double time_inc)$/;"	f	class:Performance_timing_mgt
performance_timing_mgr	Driver/global_data.cxx	/^Performance_timing_mgt *performance_timing_mgr = NULL;$/;"	v
performance_timing_mgr	Parallel_MGT/compset_communicators_info_mgt.h	/^        Performance_timing_mgt *performance_timing_mgr;$/;"	m	class:Comp_comm_group_mgt_node
performance_timing_output	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_mgt::performance_timing_output()$/;"	f	class:Performance_timing_mgt
performance_timing_reset	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_mgt::performance_timing_reset()$/;"	f	class:Performance_timing_mgt
performance_timing_start	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_mgt::performance_timing_start(int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword)$/;"	f	class:Performance_timing_mgt
performance_timing_stop	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_mgt::performance_timing_stop(int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword)$/;"	f	class:Performance_timing_mgt
performance_timing_units	Parallel_MGT/performance_timing_mgt.h	/^        std::vector<Performance_timing_unit*> performance_timing_units;$/;"	m	class:Performance_timing_mgt
period	CoR/remap_operator_1D_basis.h	/^        double period;$/;"	m	class:Remap_operator_1D_basis
periodic	CoR/remap_operator_1D_basis.h	/^        bool periodic;$/;"	m	class:Remap_operator_1D_basis
perturb_a_field_through_reverse_last_bit	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::perturb_a_field_through_reverse_last_bit(void *field_data_buf, const char *data_type, long field_size, int current_random_number)$/;"	f	class:Ensemble_mgt
perturb_a_field_through_set_last_bit_to_0	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::perturb_a_field_through_set_last_bit_to_0(void *field_data_buf, const char *data_type, long field_size, int current_random_number)$/;"	f	class:Ensemble_mgt
perturb_a_field_through_set_last_bit_to_1	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::perturb_a_field_through_set_last_bit_to_1(void *field_data_buf, const char *data_type, long field_size, int current_random_number)$/;"	f	class:Ensemble_mgt
perturb_a_field_through_xor_last_bit_with_a_bit	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::perturb_a_field_through_xor_last_bit_with_a_bit(void *field_data_buf, const char *data_type, long field_size, int current_random_number)$/;"	f	class:Ensemble_mgt
perturb_a_model_array	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::perturb_a_model_array(void *field_data_buf, const char *data_type, long field_size)$/;"	f	class:Ensemble_mgt
perturb_an_array	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::perturb_an_array(void *field_data_buf, const char *data_type, long field_size, int current_random_number)$/;"	f	class:Ensemble_mgt
perturbation_type_id	Runtime_MGT/ensemble_mgt.h	/^        int perturbation_type_id;$/;"	m	class:Ensemble_mgt
pop_comp_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node *Comp_comm_group_mgt_mgr::pop_comp_node()$/;"	f	class:Comp_comm_group_mgt_mgr
position_to_edge	CoR/delaunay_voronoi.cxx	/^int Point::position_to_edge(const Point *pt1, const Point *pt2) const$/;"	f	class:Point
position_to_triangle	CoR/delaunay_voronoi.cxx	/^int Point::position_to_triangle(const Triangle *triangle) const$/;"	f	class:Point
postprocess_field_value	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::postprocess_field_value(double *data_values_dst)$/;"	f	class:Remap_operator_1D_basis
postprocessing_for_frac_based_remapping	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::postprocessing_for_frac_based_remapping(bool bypass_timer)$/;"	f	class:Inout_interface
preprocess	Runtime_MGT/runtime_trans_algorithm.cxx	/^void Runtime_trans_algorithm::preprocess()$/;"	f	class:Runtime_trans_algorithm
preprocess_field_value	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::preprocess_field_value(double *data_values_src)$/;"	f	class:Remap_operator_1D_basis
preprocessing_for_frac_based_remapping	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::preprocessing_for_frac_based_remapping()$/;"	f	class:Inout_interface
prev	XML/tinyxml.h	/^	TiXmlAttribute*	prev;$/;"	m	class:TiXmlAttribute
prev	XML/tinyxml.h	/^	TiXmlNode*		prev;$/;"	m	class:TiXmlNode
prev_edge_in_triangle	CoR/delaunay_voronoi.h	/^        Edge *prev_edge_in_triangle;            \/* the prev_edge_in_triangle edge, whose head is the tail of this edge but tail isn't the head of this edge *\/$/;"	m	class:Edge
previous_day	Driver/timer_mgt.h	/^        int previous_day; $/;"	m	class:Time_mgt
previous_month	Driver/timer_mgt.h	/^        int previous_month;$/;"	m	class:Time_mgt
previous_second	Driver/timer_mgt.h	/^        int previous_second; $/;"	m	class:Time_mgt
previous_time	Parallel_MGT/performance_timing_mgt.h	/^        double previous_time;$/;"	m	class:Performance_timing_unit
previous_year	Driver/timer_mgt.h	/^        int previous_year;   $/;"	m	class:Time_mgt
print	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::print()$/;"	f	class:Remap_weight_sparse_matrix
print	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_mgt::print()$/;"	f	class:H2D_remapping_wgt_file_mgt
print	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_algorithm_specification::print()$/;"	f	class:Remapping_algorithm_specification
print	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::print()$/;"	f	class:Remapping_setting
proc_latest_model_time	Parallel_MGT/compset_communicators_info_mgt.h	/^        long *proc_latest_model_time;$/;"	m	class:Comp_comm_group_mgt_node
procedure_id	Data_MGT/IO_field_mgt.h	/^        int procedure_id;$/;"	m	class:IO_output_procedure
process_statement	CoR/remap_mgt.cxx	/^void Remap_mgt::process_statement()$/;"	f	class:Remap_mgt
producers_info	Runtime_MGT/coupling_generator.h	/^        std::vector<std::pair<const char*, const char*> > producers_info;$/;"	m	class:Import_direction_setting
public_remap_weights_of_operators	CoR/remap_weight_of_strategy_class.h	/^        bool public_remap_weights_of_operators;$/;"	m	class:Remap_weight_of_strategy_class
push_back_all_words	CoR/remap_mgt.cxx	/^void Remap_mgt::push_back_all_words()$/;"	f	class:Remap_mgt
push_back_attribute	CoR/remap_statement_operand.h	/^        void push_back_attribute(Remap_field_attribute field_attribute) { field_attributes.push_back(field_attribute); }$/;"	f	class:Remap_data_field
push_back_words	CoR/remap_mgt.cxx	/^void Remap_mgt::push_back_words(const char *type, const char *word)$/;"	f	class:Remap_mgt
push_back_words	CoR/remap_parser.cxx	/^void Remap_parser::push_back_words(const char *type, const char *word)$/;"	f	class:Remap_parser
push_comp_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::push_comp_node(Comp_comm_group_mgt_node *comp_node) $/;"	f	class:Comp_comm_group_mgt_mgr
put_global_attr	CoR/io_netcdf.cxx	/^void IO_netcdf::put_global_attr(const char *text_title, const void *attr_value, const char *local_data_type, const char *nc_data_type, int size)$/;"	f	class:IO_netcdf
quit	XML/tinystr.h	/^	void quit()$/;"	f	class:TiXmlString
radix_sort_swap	CoR/radix_sort.h	/^template <class T1, class T2> void Radix_sort<T1,T2>::radix_sort_swap(long pos1, long pos2)$/;"	f	class:Radix_sort
radix_values	CoR/radix_sort.h	/^        T1 *radix_values[256];$/;"	m	class:Radix_sort
rcode	CoR/io_netcdf.h	/^        int rcode;$/;"	m	class:IO_netcdf
read_all_restarted_fields	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::read_all_restarted_fields(const char *annotation)$/;"	f	class:Restart_mgt
read_connection_fields_info_from_array	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::read_connection_fields_info_from_array(std::vector<Interface_field_info*> &fields_info, const char *array_buffer, long buffer_content_iter, int comp_id, Coupling_timer **timer, int &inst_or_aver, int &time_step_in_second,$/;"	f	class:Coupling_connection
read_data	CoR/io_binary.cxx	/^bool IO_binary::read_data(Remap_data_field *read_data_field, int time_pos, bool check_existence)$/;"	f	class:IO_binary
read_data	CoR/io_mgt.cxx	/^bool IO_mgt::read_data(const char *IO_object_name, Remap_data_field *read_data_field, bool check_existence)$/;"	f	class:IO_mgt
read_data	CoR/io_netcdf.cxx	/^bool IO_netcdf::read_data(Remap_data_field *read_data_field, int time_pos, bool check_existence)$/;"	f	class:IO_netcdf
read_data_from_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::read_data_from_array(void *data, int data_size, const char *input_array, FILE *fp_binary, long &current_array_pos, long array_size, bool read_weight_values)$/;"	f	class:Remap_weight_of_strategy_class
read_data_from_array_buffer	Utils/common_utils.cxx	/^bool read_data_from_array_buffer(void *data, long data_size, const char *temp_array_buffer, long &buffer_content_iter, bool report_error)$/;"	f
read_data_size	CoR/remap_statement_operand.h	/^        long read_data_size;$/;"	m	class:Remap_data_field
read_fields_info_from_array	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::read_fields_info_from_array(std::vector<Interface_field_info*> &fields_info, const char *array_buffer, long buffer_content_iter)$/;"	f	class:Coupling_connection
read_file_field	CoR/io_netcdf.cxx	/^void IO_netcdf::read_file_field(const char *field_name, void **data_array_ptr, int *field_size, char *data_type, MPI_Comm comm, bool is_root_proc)$/;"	f	class:IO_netcdf
read_fill_value	CoR/remap_statement_operand.cxx	/^void Remap_data_field::read_fill_value()$/;"	f	class:Remap_data_field
read_grid_data_from_IO	CoR/remap_grid_class.cxx	/^void Remap_grid_class::read_grid_data_from_IO(char extension_names[16][256], $/;"	f	class:Remap_grid_class
read_grid_data_from_array	CoR/remap_grid_class.cxx	/^void Remap_grid_class::read_grid_data_from_array(const char *coord_label, const char *coord_name, const char *data_type, const char *array_data, int num_vertexes)$/;"	f	class:Remap_grid_class
read_grid_data_through_span	CoR/remap_grid_class.cxx	/^void Remap_grid_class::read_grid_data_through_span(char extension_names[16][256], $/;"	f	class:Remap_grid_class
read_grid_field_from_array	CoR/remap_grid_class.cxx	/^void Remap_grid_class::read_grid_field_from_array(Remap_grid_data_class **grid_field, const char *array, long &buffer_content_iter)$/;"	f	class:Remap_grid_class
read_grid_info_from_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::read_grid_info_from_array(Remap_grid_class *grid, bool consider_area_or_volumn, const char *input_array, FILE *fp_binary, long &current_array_pos, long array_size)$/;"	f	class:Remap_weight_of_strategy_class
read_grid_size	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_info::read_grid_size(int comp_id, const char *label, int &grid_size)$/;"	f	class:H2D_remapping_wgt_file_info
read_remap_operator_instance_from_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::read_remap_operator_instance_from_array(Remap_grid_class *field_data_grid_src, Remap_grid_class *field_data_grid_dst,$/;"	f	class:Remap_weight_of_strategy_class
read_remap_weights	CoR/io_binary.cxx	/^void IO_binary::read_remap_weights(Remap_weight_of_strategy_class *remap_weights, Remap_strategy_class *remap_strategy, bool read_weight_values)$/;"	f	class:IO_binary
read_remap_weights	CoR/io_netcdf.cxx	/^void IO_netcdf::read_remap_weights(Remap_weight_of_strategy_class *remap_weights, Remap_strategy_class *remap_strategy, bool read_weight_values)$/;"	f	class:IO_netcdf
read_remap_weights_from_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::read_remap_weights_from_array(const char *input_array, FILE *fp_binary, long array_size, bool read_grid, Remap_grid_class **remap_related_decomp_grids, bool read_weight_values)$/;"	f	class:Remap_weight_of_strategy_class
read_remapping_setting_from_array	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::read_remapping_setting_from_array(const char *array, long &buffer_content_iter)$/;"	f	class:Remapping_setting
read_remapping_weights	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_info::read_remapping_weights(int comp_id)$/;"	f	class:H2D_remapping_wgt_file_info
read_restart_field_data	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::read_restart_field_data(Field_mem_info *field_instance, const char *interface_name, const char *label, bool use_time_info, const char *API_label, bool optional, const char *annotation)$/;"	f	class:Restart_mgt
read_restart_fields	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::read_restart_fields(int API_id, const char *annotation)$/;"	f	class:Inout_interface
read_restart_mgt_info	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::read_restart_mgt_info(bool check_existing_data, const char *file_name, const char *annotation)$/;"	f	class:Restart_mgt
read_restart_mgt_info	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::read_restart_mgt_info(const char *specified_file_name, const char *annotation)$/;"	f	class:Restart_mgt
read_scale_factor_and_add_offset	CoR/remap_statement_operand.cxx	/^void Remap_data_field::read_scale_factor_and_add_offset(double *scale_factor, double *add_offset)$/;"	f	class:Remap_data_field
read_scatter_field	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^bool Fields_gather_scatter_mgt::read_scatter_field(IO_netcdf *nc_file, Field_mem_info *local_field, const char *field_IO_name, int time_pos, bool check_existence)$/;"	f	class:Fields_gather_scatter_mgt
read_weight_grid_data	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_info::read_weight_grid_data(int comp_id, const char *label, const char *required_data_type, void **buffer_ptr, int buffer_size, bool necessary)$/;"	f	class:H2D_remapping_wgt_file_info
rearrange_gather_data	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^template <class T> void Gather_scatter_rearrange_info::rearrange_gather_data(T *buf_src, T *buf_dst, int num_cells_in_fully_decomp)$/;"	f	class:Gather_scatter_rearrange_info
rearrange_indexes	Parallel_MGT/fields_gather_scatter_mgt.h	/^        int *rearrange_indexes;$/;"	m	class:Gather_scatter_rearrange_info
rearrange_scatter_data	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^template <class T> void Gather_scatter_rearrange_info::rearrange_scatter_data(T *buf_src, T *buf_dst, int num_cells_in_fully_decomp)$/;"	f	class:Gather_scatter_rearrange_info
receive_data_in_temp_buffer	Runtime_MGT/runtime_trans_algorithm.cxx	/^void Runtime_trans_algorithm::receive_data_in_temp_buffer()$/;"	f	class:Runtime_trans_algorithm
record_time	Parallel_MGT/routing_info_mgt.cxx	/^void record_time(double duration, char* prefix)$/;"	f
recorded_grids	CoR/io_basis.h	/^        std::vector<const Remap_grid_class*> recorded_grids;$/;"	m	class:IO_basis
recursively_do_radix_sort	CoR/radix_sort.h	/^template <class T1, class T2> void Radix_sort<T1,T2>::recursively_do_radix_sort(long segment_start, long segment_end, int radix_id)$/;"	f	class:Radix_sort
recursively_remove_directory	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void recursively_remove_directory()$/;"	f
recursively_search_initial_boundary	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_engine::recursively_search_initial_boundary(double center_lon, double center_lat, double dlon, double dlat, double &result_center_lon, $/;"	f	class:H2D_grid_cell_search_engine
recv	Runtime_MGT/runtime_trans_algorithm.cxx	/^bool Runtime_trans_algorithm::recv(bool bypass_timer)$/;"	f	class:Runtime_trans_algorithm
recv_displs_in_current_proc	Runtime_MGT/runtime_trans_algorithm.h	/^        int *recv_displs_in_current_proc;$/;"	m	class:Runtime_trans_algorithm
recv_from_remote_procs_routing_info	Parallel_MGT/routing_info_mgt.h	/^        std::vector<Routing_info_with_one_process *> recv_from_remote_procs_routing_info;$/;"	m	class:Routing_info
recv_proc_start	Runtime_MGT/runtime_trans_algorithm.h	/^        int recv_proc_start;$/;"	m	class:Runtime_trans_algorithm
reduce_buf_real16	Driver/c_coupler_interface_mod.F90	/^   REAL(R16), allocatable, private :: reduce_buf_real16(/;"	v	module:CCPL_interface_mod
reduce_buf_real16_size	Driver/c_coupler_interface_mod.F90	/^   integer,                private :: reduce_buf_real16_size$/;"	v	module:CCPL_interface_mod
redundant_cell_mark	CoR/remap_grid_class.h	/^        bool *redundant_cell_mark;$/;"	m	class:Remap_grid_class
redundant_cell_mark	CoR/remap_operator_grid.h	/^        bool *redundant_cell_mark;$/;"	m	class:Remap_operator_grid
redundant_cell_mark_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *redundant_cell_mark_field;$/;"	m	class:Remap_grid_class
reference_count	CoR/delaunay_voronoi.h	/^        int reference_count;    \/* reference count, used to destruct *\/$/;"	m	class:Triangle
reference_day	Driver/timer_mgt.h	/^        int reference_day;$/;"	m	class:Time_mgt
reference_month	Driver/timer_mgt.h	/^        int reference_month;$/;"	m	class:Time_mgt
reference_year	Driver/timer_mgt.h	/^        int reference_year;$/;"	m	class:Time_mgt
register_H2D_grid_via_comp	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::register_H2D_grid_via_comp(int comp_id, const char *grid_name, const char *annotation)$/;"	f	class:Original_grid_mgt
register_H2D_grid_via_file	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::register_H2D_grid_via_file(int comp_id, const char *grid_name, const char *data_file_name, const char *annotation)$/;"	f	class:Original_grid_mgt
register_H2D_grid_via_global_data	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::register_H2D_grid_via_global_data(int comp_id, const char *grid_name, const char *edge_type, const char *coord_unit, char *cyclic_or_acyclic, const char *data_type, int dim_size1, int dim_size2, int size_center_lon, int size_center_lat, $/;"	f	class:Original_grid_mgt
register_H2D_grid_via_local_data	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::register_H2D_grid_via_local_data(int comp_id, const char *grid_name, const char *edge_type, const char *coord_unit, char *cyclic_or_acyclic, const char *data_type, int grid_size, int num_local_cells, int size_local_cells_global_index, int size_center_lon, int size_center_lat, $/;"	f	class:Original_grid_mgt
register_H2D_parallel_decomposition	Parallel_MGT/decomp_info_mgt.cxx	/^int Decomp_info_mgt::register_H2D_parallel_decomposition(const char *decomp_name, int grid_id, int num_local_cells, const int *cell_indexes_in_decomp, const char *annotation)$/;"	f	class:Decomp_info_mgt
register_IO_field	Data_MGT/IO_field_mgt.cxx	/^int IO_field_mgt::register_IO_field(int comp_or_grid_id, int decomp_id, int field_size, void *data_buffer, const char * field_IO_name, const char *long_name, const char *unit, const char *data_type, const char * annotation)$/;"	f	class:IO_field_mgt
register_IO_field	Data_MGT/IO_field_mgt.cxx	/^int IO_field_mgt::register_IO_field(int field_instance_id, const char *field_IO_name, const char *annotation)$/;"	f	class:IO_field_mgt
register_IO_fields	Data_MGT/IO_field_mgt.cxx	/^int IO_field_mgt::register_IO_fields(int num_field_inst, int size_field_inst_ids, int *field_inst_ids, const char *annotation)$/;"	f	class:IO_field_mgt
register_V1D_grid_via_data	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::register_V1D_grid_via_data(int API_id, int comp_id, const char *grid_name, int grid_type, const char *coord_unit, int grid_size, $/;"	f	class:Original_grid_mgt
register_a_field_for_perturbation	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::register_a_field_for_perturbation(void *data_buf)$/;"	f	class:Ensemble_mgt
register_a_new_io_field	Driver/coupling_interface.cxx	/^extern "C" void register_a_new_io_field$/;"	f
register_an_io_field_from_field_instance	Driver/coupling_interface.cxx	/^extern "C" void register_an_io_field_from_field_instance$/;"	f
register_component	Driver/coupling_interface.cxx	/^extern "C" void register_component$/;"	f
register_component	Parallel_MGT/compset_communicators_info_mgt.cxx	/^int Comp_comm_group_mgt_mgr::register_component(const char *comp_name, const char *comp_type, MPI_Comm &comm, int parent_local_id, bool enabled_in_parent_coupling_gen, int change_dir, const char *annotation)$/;"	f	class:Comp_comm_group_mgt_mgr
register_cor_defined_grid	Driver/coupling_interface.cxx	/^extern "C" void register_cor_defined_grid$/;"	f
register_external_field_instance	Data_MGT/memory_mgt.cxx	/^int Memory_mgt::register_external_field_instance(const char *field_name, void *data_buffer, int field_size, int decomp_id, int comp_or_grid_id, $/;"	f	class:Memory_mgt
register_external_field_instance	Driver/coupling_interface.cxx	/^extern "C" void register_external_field_instance$/;"	f
register_frac_based_remap_interface	Driver/coupling_interface.cxx	/^extern "C" void register_frac_based_remap_interface$/;"	f
register_frac_based_remap_interface	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface_mgt::register_frac_based_remap_interface(const char *interface_name, int num_fields, int *field_ids_src, int *field_ids_dst, int timer_id, int inst_or_aver, int array_size_src, int array_size_dst, void *frac_src, void *frac_dst, int size_frac_src, int size_frac_dst, const char *frac_data_type, const char *API_label, const char *annotation)$/;"	f	class:Inout_interface_mgt
register_h2d_grid_from_another_component	Driver/coupling_interface.cxx	/^extern "C" void register_h2d_grid_from_another_component$/;"	f
register_h2d_grid_with_file	Driver/coupling_interface.cxx	/^extern "C" void register_h2d_grid_with_file$/;"	f
register_h2d_grid_with_global_data	Driver/coupling_interface.cxx	/^extern "C" void register_h2d_grid_with_global_data$/;"	f
register_h2d_grid_with_local_data	Driver/coupling_interface.cxx	/^extern "C" void register_h2d_grid_with_local_data$/;"	f
register_inout_interface	Driver/coupling_interface.cxx	/^extern "C" void register_inout_interface$/;"	f
register_inout_interface	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface_mgt::register_inout_interface(const char *interface_name, int interface_type, int num_fields, int *field_ids, int array_size, int timer_id, int inst_or_aver, const char *annotation, int interface_source)$/;"	f	class:Inout_interface_mgt
register_io_fields_from_field_instances	Driver/coupling_interface.cxx	/^extern "C" void register_io_fields_from_field_instances$/;"	f
register_md_grid_via_multi_grids	Data_MGT/original_grid_mgt.cxx	/^int Original_grid_mgt::register_md_grid_via_multi_grids(int comp_id, const char *grid_name, int sub_grid1_id, int sub_grid2_id, int sub_grid3_id, int size_mask, int *mask, const char *annotation)$/;"	f	class:Original_grid_mgt
register_md_grid_via_multi_grids	Driver/coupling_interface.cxx	/^extern "C" void register_md_grid_via_multi_grids$/;"	f
register_mid_point_grid	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::register_mid_point_grid(int level_3D_grid_id, int *mid_3D_grid_id, int *mid_1D_grid_id, int size_mask, const int *mask, const char *annotation, const char *API_label)$/;"	f	class:Original_grid_mgt
register_mid_point_grid	Driver/coupling_interface.cxx	/^extern "C" void register_mid_point_grid$/;"	f
register_normal_remap_interface	Driver/coupling_interface.cxx	/^extern "C" void register_normal_remap_interface$/;"	f
register_normal_remap_interface	Runtime_MGT/inout_interface_mgt.cxx	/^int Inout_interface_mgt::register_normal_remap_interface(const char *interface_name, int num_fields, int *field_ids_src, int *field_ids_dst, int timer_id, int inst_or_aver, int array_size_src, int array_size_dst, const char *API_label, const char *annotation)$/;"	f	class:Inout_interface_mgt
register_parallel_decomposition	Driver/coupling_interface.cxx	/^extern "C" void register_parallel_decomposition$/;"	f
register_remap_grids	CoR/remap_operator_basis.cxx	/^void Remap_operator_basis::register_remap_grids(int num_remap_grids, Remap_grid_class **remap_grids)$/;"	f	class:Remap_operator_basis
register_root_component	Driver/coupling_interface.cxx	/^extern "C" void register_root_component$/;"	f
register_v1d_grid_with_data	Driver/coupling_interface.cxx	/^extern "C" void register_v1d_grid_with_data$/;"	f
register_v1d_grid_without_data	Driver/coupling_interface.cxx	/^extern "C" void register_v1d_grid_without_data$/;"	f
registered_fields_for_perturbation	Runtime_MGT/ensemble_mgt.h	/^        std::vector<Field_mem_info *> registered_fields_for_perturbation;$/;"	m	class:Ensemble_mgt
release_statement	CoR/remap_mgt.cxx	/^void Remap_mgt::release_statement()$/;"	f	class:Remap_mgt
remained_points_in_triangle	CoR/delaunay_voronoi.h	/^        vector<Point*> remained_points_in_triangle;$/;"	m	class:Triangle
remap_beg_iter	CoR/remap_weight_of_strategy_class.h	/^        int remap_beg_iter;$/;"	m	class:Remap_weight_of_operator_instance_class
remap_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        long remap_decomp_size;$/;"	m	class:Routing_info
remap_end_iter	CoR/remap_weight_of_strategy_class.h	/^        int remap_end_iter;$/;"	m	class:Remap_weight_of_operator_instance_class
remap_field_data_dst	CoR/runtime_remap_function.h	/^        Remap_grid_data_class *remap_field_data_dst;$/;"	m	class:Runtime_remap_function
remap_field_data_manager	CoR/cor_global_data.cxx	/^Remap_field_data_mgt *remap_field_data_manager;$/;"	v
remap_field_data_redundant_mark_field_src	CoR/runtime_remap_function.h	/^        Remap_grid_data_class *remap_field_data_redundant_mark_field_src;$/;"	m	class:Runtime_remap_function
remap_field_data_src	CoR/runtime_remap_function.h	/^        Remap_grid_data_class *remap_field_data_src;$/;"	m	class:Runtime_remap_function
remap_fields	CoR/remap_strategy_class.cxx	/^void Remap_strategy_class::remap_fields(const char *field_data_name_src, const char *field_data_name_dst)$/;"	f	class:Remap_strategy_class
remap_grid	CoR/grid_cell_search.h	/^        const Remap_grid_class *remap_grid;$/;"	m	class:H2D_grid_cell_search_engine
remap_grid	CoR/remap_operator_grid.h	/^        Remap_grid_class *remap_grid;$/;"	m	class:Remap_operator_grid
remap_grid_manager	CoR/cor_global_data.cxx	/^Remap_grid_mgt *remap_grid_manager;$/;"	v
remap_grids	CoR/remap_grid_mgt.h	/^        std::vector<Remap_grid_class*> remap_grids;$/;"	m	class:Remap_grid_mgt
remap_operator	CoR/remap_operator_grid.h	/^        Remap_operator_basis *remap_operator;$/;"	m	class:Remap_operator_grid
remap_operator	CoR/remap_weight_sparse_matrix.h	/^        Remap_operator_basis *remap_operator;$/;"	m	class:Remap_weight_sparse_matrix
remap_operator_manager	CoR/cor_global_data.cxx	/^Remap_operator_mgt *remap_operator_manager;$/;"	v
remap_operator_runtime_grid_dst	CoR/runtime_remap_function.h	/^        Remap_grid_class *remap_operator_runtime_grid_dst;$/;"	m	class:Runtime_remap_function
remap_operator_runtime_grid_src	CoR/runtime_remap_function.h	/^        Remap_grid_class *remap_operator_runtime_grid_src;$/;"	m	class:Runtime_remap_function
remap_operators	CoR/remap_operator_mgt.h	/^        std::vector<Remap_operator_basis *> remap_operators;$/;"	m	class:Remap_operator_mgt
remap_operators	CoR/remap_strategy_class.h	/^        std::vector<Remap_operator_basis *> remap_operators;$/;"	m	class:Remap_strategy_class
remap_statement	CoR/remap_mgt.h	/^        Remap_statement *remap_statement;$/;"	m	class:Remap_mgt
remap_strategies	CoR/remap_strategy_mgt.h	/^        std::vector<Remap_strategy_class *> remap_strategies;$/;"	m	class:Remap_strategy_mgt
remap_strategy	CoR/remap_weight_of_strategy_class.h	/^        Remap_strategy_class *remap_strategy;$/;"	m	class:Remap_weight_of_strategy_class
remap_strategy_manager	CoR/cor_global_data.cxx	/^Remap_strategy_mgt *remap_strategy_manager;$/;"	v
remap_values	CoR/remap_weight_sparse_matrix.cxx	/^void Remap_weight_sparse_matrix::remap_values(double *data_values_src, double *data_values_dst, int dst_array_size)$/;"	f	class:Remap_weight_sparse_matrix
remap_weight_of_operator	CoR/remap_weight_of_strategy_class.h	/^		Remap_weight_of_operator_class *remap_weight_of_operator;$/;"	m	class:Remap_weight_of_operator_instance_class
remap_weight_of_strategy	CoR/runtime_remap_function.h	/^        Remap_weight_of_strategy_class *remap_weight_of_strategy;$/;"	m	class:Runtime_remap_function
remap_weights_groups	CoR/remap_operator_basis.h	/^        std::vector<Remap_weight_sparse_matrix*> remap_weights_groups;$/;"	m	class:Remap_operator_basis
remap_weights_of_operator_instances	CoR/remap_weight_of_strategy_class.h	/^        std::vector<Remap_weight_of_operator_instance_class*> remap_weights_of_operator_instances;$/;"	m	class:Remap_weight_of_operator_class
remap_weights_of_operators	CoR/remap_weight_of_strategy_class.h	/^        std::vector<Remap_weight_of_operator_class*> remap_weights_of_operators;$/;"	m	class:Remap_weight_of_strategy_class
remap_weights_of_operators	CoR/remap_weight_of_strategy_mgt.h	/^        std::vector<Remap_weight_of_operator_class *> remap_weights_of_operators;$/;"	m	class:Remap_weight_of_operator_mgt
remap_weights_of_strategies	CoR/remap_weight_of_strategy_mgt.h	/^        std::vector<Remap_weight_of_strategy_class*> remap_weights_of_strategies;$/;"	m	class:Remap_weight_of_strategy_mgt
remap_weights_of_strategy_manager	CoR/cor_global_data.cxx	/^Remap_weight_of_strategy_mgt *remap_weights_of_strategy_manager;$/;"	v
remaped_dst_cells_indexes	CoR/remap_weight_sparse_matrix.h	/^        long *remaped_dst_cells_indexes;$/;"	m	class:Remap_weight_sparse_matrix
remaped_dst_cells_indexes_array_size	CoR/remap_weight_sparse_matrix.h	/^        long remaped_dst_cells_indexes_array_size;$/;"	m	class:Remap_weight_sparse_matrix
remapping_configuration_mgr	Driver/global_data.cxx	/^Remapping_configuration_mgt *remapping_configuration_mgr = NULL;$/;"	v
remapping_configurations	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<Remapping_configuration*> remapping_configurations;$/;"	m	class:Remapping_configuration_mgt
remapping_setting	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remapping_setting *remapping_setting;$/;"	m	class:Runtime_remapping_weights
remapping_settings	Runtime_MGT/remapping_configuration_mgt.h	/^        std::vector<Remapping_setting*> remapping_settings;$/;"	m	class:Remapping_configuration
remapping_strategy	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_strategy_class *remapping_strategy;$/;"	m	class:Runtime_remapping_weights
remote_bypass_counter	Runtime_MGT/inout_interface_mgt.h	/^        int remote_bypass_counter;$/;"	m	class:Connection_coupling_procedure
remote_comp_full_name	Runtime_MGT/runtime_trans_algorithm.h	/^        char remote_comp_full_name[NAME_STR_SIZE];$/;"	m	class:Runtime_trans_algorithm
remote_comp_name	Parallel_MGT/routing_info_mgt.h	/^        char remote_comp_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
remote_comp_node	Runtime_MGT/runtime_trans_algorithm.h	/^        Comp_comm_group_mgt_node * remote_comp_node;$/;"	m	class:Runtime_trans_algorithm
remote_comp_node_updated	Runtime_MGT/runtime_trans_algorithm.h	/^        bool remote_comp_node_updated;$/;"	m	class:Runtime_trans_algorithm
remote_decomp_name	Parallel_MGT/routing_info_mgt.h	/^        char remote_decomp_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
remote_lag_count	Driver/timer_mgt.h	/^        int remote_lag_count;$/;"	m	class:Coupling_timer
remote_local_index	Parallel_MGT/routing_info_mgt.h	/^    int remote_local_index;   $/;"	m	struct:routing_mapping_table_entry
remote_local_process_id	Parallel_MGT/routing_info_mgt.h	/^    int remote_local_process_id;$/;"	m	struct:routing_mapping_table_entry
remote_proc_global_id	Parallel_MGT/routing_info_mgt.h	/^    int remote_proc_global_id;$/;"	m	struct:Routing_info_with_one_process
remote_proc_idx_begin	Runtime_MGT/runtime_trans_algorithm.h	/^        int remote_proc_idx_begin;$/;"	m	class:Runtime_trans_algorithm
remote_proc_ranks_in_union_comm	Runtime_MGT/runtime_trans_algorithm.h	/^        int * remote_proc_ranks_in_union_comm;$/;"	m	class:Runtime_trans_algorithm
remove	Utils/dictionary.h	/^void Dictionary<T>::remove(const char *key)$/;"	f	class:Dictionary
remove_directory	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void remove_directory(const char *path)$/;"	f
remove_redundant_cells	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::remove_redundant_cells()$/;"	f	class:Remap_operator_grid
remove_redundant_vertex_values	CoR/remap_grid_class.cxx	/^void Remap_grid_class::remove_redundant_vertex_values()$/;"	f	class:Remap_grid_class
renew_dynamic_V1D_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^void Runtime_remapping_weights::renew_dynamic_V1D_remapping_weights()$/;"	f	class:Runtime_remapping_weights
renew_lev_grid_coord_values	CoR/remap_grid_class.cxx	/^void Remap_grid_class::renew_lev_grid_coord_values(double *new_center_coord_values, double *new_vertex_coord_values)$/;"	f	class:Remap_grid_class
renew_object_name	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::renew_object_name(const char*new_object_name)$/;"	f	class:Remap_weight_of_strategy_class
renew_remapping_time_end_iter	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_operator_instance_class::renew_remapping_time_end_iter(long time_end_iter)$/;"	f	class:Remap_weight_of_operator_instance_class
renew_vertical_remap_weights	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_operator_class::renew_vertical_remap_weights(Remap_grid_class *runtime_remap_grid_src, Remap_grid_class *runtime_remap_grid_dst)$/;"	f	class:Remap_weight_of_operator_class
rep_	XML/tinystr.h	/^	Rep * rep_;$/;"	m	class:TiXmlString
report_common_field_instances	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::report_common_field_instances(const Inout_interface *another_interface)$/;"	f	class:Inout_interface
report_error_enabled	Utils/execution_report.cxx	/^bool report_error_enabled;$/;"	v
report_external_log_enabled	Utils/execution_report.cxx	/^bool report_external_log_enabled;$/;"	v
report_header	Utils/execution_report.cxx	/^void report_header(int report_type, int comp_id, bool &condition, char *output_format)$/;"	f
report_internal_log_enabled	Utils/execution_report.cxx	/^bool report_internal_log_enabled;$/;"	v
report_nc_error	CoR/io_netcdf.cxx	/^void IO_netcdf::report_nc_error()$/;"	f	class:IO_netcdf
report_progress_enabled	Utils/execution_report.cxx	/^bool report_progress_enabled;$/;"	v
request	Runtime_MGT/runtime_trans_algorithm.h	/^        MPI_Request * request;$/;"	m	class:Runtime_trans_algorithm
require_grid_cell_neighborhood	CoR/remap_operator_basis.h	/^        bool require_grid_cell_neighborhood;$/;"	m	class:Remap_operator_basis
require_grid_vertex_values	CoR/remap_operator_basis.h	/^        bool require_grid_vertex_values;$/;"	m	class:Remap_operator_basis
require_vertex_fields	CoR/remap_operator_grid.h	/^        bool require_vertex_fields;$/;"	m	class:Remap_operator_grid
required_data_size	CoR/remap_statement_operand.h	/^        long required_data_size;$/;"	m	class:Remap_data_field
reserve	XML/tinystr.cxx	/^void TiXmlString::reserve (size_type cap)$/;"	f	class:TiXmlString
reserved_words	CoR/remap_mgt.h	/^        std::vector<char*> reserved_words;$/;"	m	class:Remap_mgt
reserved_words	CoR/remap_parser.h	/^        std::vector<char*> reserved_words;$/;"	m	class:Remap_parser
reset_checksum	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::reset_checksum()$/;"	f	class:Field_mem_info
reset_component_current_time_to_start_time	Driver/coupling_interface.cxx	/^extern "C" void reset_component_current_time_to_start_time$/;"	f
reset_current_proc_local_id	Parallel_MGT/compset_communicators_info_mgt.h	/^        void reset_current_proc_local_id(int new_current_proc_local_id) { current_proc_local_id = new_current_proc_local_id; }$/;"	f	class:Comp_comm_group_mgt_node
reset_current_time_to_start_time	Driver/timer_mgt.cxx	/^void Time_mgt::reset_current_time_to_start_time(const char *annotation)$/;"	f	class:Time_mgt
reset_field_name	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::reset_field_name(const char *new_name)$/;"	f	class:Field_mem_info
reset_grid_data	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::reset_grid_data()$/;"	f	class:Original_grid_info
reset_last_timer_info	Runtime_MGT/inout_interface_mgt.h	/^        void reset_last_timer_info() { last_timer_num_elapsed_days = -1; last_timer_second = -1; }$/;"	f	class:Connection_field_time_info
reset_local_node_id	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::reset_local_node_id(int new_id) $/;"	f	class:Comp_comm_group_mgt_node
reset_mem_buf	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::reset_mem_buf(void * buf, bool is_external_field, int usage_tag)$/;"	f	class:Field_mem_info
reset_remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::reset_remapping_setting()$/;"	f	class:Remapping_setting
reset_remote_lag_count	Driver/timer_mgt.h	/^        void reset_remote_lag_count() { remote_lag_count = 0; }$/;"	f	class:Coupling_timer
reset_sized_grids	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::reset_sized_grids(int num_sized_grids, Remap_grid_class **sized_grids)$/;"	f	class:Remap_grid_data_class
reset_super_grids_of_setting_mask_value	CoR/remap_grid_class.cxx	/^void Remap_grid_class::reset_super_grids_of_setting_mask_value(Remap_grid_class *super_grid)$/;"	f	class:Remap_grid_class
rest_freq_count	Driver/timer_mgt.h	/^        int rest_freq_count;$/;"	m	class:Time_mgt
rest_freq_unit	Driver/timer_mgt.h	/^        char rest_freq_unit[NAME_STR_SIZE];$/;"	m	class:Time_mgt
rest_refcase	Driver/timer_mgt.h	/^        char rest_refcase[NAME_STR_SIZE];$/;"	m	class:Time_mgt
rest_refdate	Driver/timer_mgt.h	/^        int rest_refdate;$/;"	m	class:Time_mgt
rest_refsecond	Driver/timer_mgt.h	/^        int rest_refsecond;$/;"	m	class:Time_mgt
restart_common_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char restart_common_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
restart_full_time	Driver/timer_mgt.h	/^        long restart_full_time;$/;"	m	class:Time_mgt
restart_mgr	Data_MGT/restart_mgt.h	/^        Restart_mgt *restart_mgr;$/;"	m	class:Restart_buffer_container
restart_mgr	Parallel_MGT/compset_communicators_info_mgt.h	/^        Restart_mgt *restart_mgr;$/;"	m	class:Comp_comm_group_mgt_node
restart_mgr	Runtime_MGT/inout_interface_mgt.h	/^        Restart_mgt *restart_mgr;$/;"	m	class:Connection_coupling_procedure
restart_mgr	Runtime_MGT/inout_interface_mgt.h	/^        Restart_mgt *restart_mgr;$/;"	m	class:Inout_interface
restart_mgt_info_written	Data_MGT/restart_mgt.h	/^        bool restart_mgt_info_written;$/;"	m	class:Restart_mgt
restart_normal_fields_enabled	Data_MGT/restart_mgt.h	/^        bool restart_normal_fields_enabled;$/;"	m	class:Restart_mgt
restart_num_elapsed_day	Driver/timer_mgt.h	/^        int restart_num_elapsed_day;        $/;"	m	class:Time_mgt
restart_read	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^void Runtime_cumulate_average_algorithm::restart_read(Restart_buffer_container *restart_buffer, const char *label)$/;"	f	class:Runtime_cumulate_average_algorithm
restart_read_annotation	Data_MGT/restart_mgt.h	/^        char *restart_read_annotation;$/;"	m	class:Restart_mgt
restart_read_buffer_containers	Data_MGT/restart_mgt.h	/^        std::vector<Restart_buffer_container*> restart_read_buffer_containers;$/;"	m	class:Restart_mgt
restart_read_data_file_name	Data_MGT/restart_mgt.h	/^        char *restart_read_data_file_name;$/;"	m	class:Restart_mgt
restart_read_timer_mgr	Driver/global_data.cxx	/^Time_mgt *restart_read_timer_mgr = NULL;$/;"	v
restart_second	Driver/timer_mgt.h	/^        int restart_second;$/;"	m	class:Time_mgt
restart_timer	Driver/timer_mgt.h	/^        Coupling_timer *restart_timer;$/;"	m	class:Time_mgt
restart_write	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^void Runtime_cumulate_average_algorithm::restart_write(Restart_buffer_container *restart_buffer, const char *label)$/;"	f	class:Runtime_cumulate_average_algorithm
restart_write_buffer_containers	Data_MGT/restart_mgt.h	/^        std::vector<Restart_buffer_container*> restart_write_buffer_containers;$/;"	m	class:Restart_mgt
restart_write_data_file	Data_MGT/restart_mgt.h	/^        IO_netcdf *restart_write_data_file;$/;"	m	class:Restart_mgt
restarted_field_instances	Data_MGT/restart_mgt.h	/^        std::vector<std::pair<Field_mem_info*, bool> > restarted_field_instances;$/;"	m	class:Restart_mgt
restarted_step_id	Driver/timer_mgt.h	/^        int restarted_step_id;$/;"	m	class:Time_mgt
result_leaf_triangles	CoR/delaunay_voronoi.h	/^        vector<Triangle*> result_leaf_triangles;$/;"	m	class:Delaunay_Voronoi
result_operand	CoR/remap_mgt.h	/^            Remap_statement_operand *result_operand;$/;"	m	struct:Remap_mgt::Remap_statement
root_comp_config_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char root_comp_config_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
root_comps_enabled_in_parent_coupling_generation	Parallel_MGT/compset_communicators_info_mgt.h	/^        std::vector<bool> root_comps_enabled_in_parent_coupling_generation;$/;"	m	class:Comp_comm_group_mgt_mgr
root_comps_full_names	Parallel_MGT/compset_communicators_info_mgt.h	/^        std::vector<const char*> root_comps_full_names;$/;"	m	class:Comp_comm_group_mgt_mgr
root_random_seed_for_perturbation	Runtime_MGT/ensemble_mgt.h	/^        int root_random_seed_for_perturbation;$/;"	m	class:Ensemble_mgt
root_tile	CoR/grid_cell_search.h	/^        H2D_grid_cell_search_tile *root_tile;$/;"	m	class:H2D_grid_cell_search_engine
root_working_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char root_working_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
rotate_sphere_coordinate	CoR/remap_common_utils.cxx	/^void rotate_sphere_coordinate(double lon_original, double lat_original, double &lon_rotated, double &lat_rotated)$/;"	f
rotate_sphere_grid	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::rotate_sphere_grid()$/;"	f	class:Remap_operator_grid
rotated_remap_operator_grid	CoR/remap_operator_grid.h	/^        Remap_operator_grid *rotated_remap_operator_grid;$/;"	m	class:Remap_operator_grid
routers	Parallel_MGT/routing_info_mgt.h	/^        std::vector<Routing_info *> routers;$/;"	m	class:Routing_info_mgt
routing_info_mgr	Driver/global_data.cxx	/^Routing_info_mgt *routing_info_mgr = NULL;$/;"	v
routing_mapping_table_entry	Parallel_MGT/routing_info_mgt.h	/^struct routing_mapping_table_entry$/;"	s
row	XML/tinyxml.h	/^	int row;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor
run	Runtime_MGT/ensemble_mgt.cxx	/^void Ensemble_mgt::run()$/;"	f	class:Ensemble_mgt
run	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^bool Runtime_cumulate_average_algorithm::run(bool do_average)$/;"	f	class:Runtime_cumulate_average_algorithm
run	Runtime_MGT/runtime_datatype_transformer.cxx	/^bool Runtime_datatype_transformer::run(bool bypass_timer)$/;"	f	class:Runtime_datatype_transformer
run	Runtime_MGT/runtime_remap_algorithm.cxx	/^bool Runtime_remap_algorithm::run(bool is_algorithm_in_kernel_stage)$/;"	f	class:Runtime_remap_algorithm
run	Runtime_MGT/runtime_trans_algorithm.cxx	/^bool Runtime_trans_algorithm::run(bool bypass_timer)$/;"	f	class:Runtime_trans_algorithm
run_type	Driver/timer_mgt.h	/^        char run_type[NAME_STR_SIZE];$/;"	m	class:Time_mgt
runtime_V1D_remap_grid_dst	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_grid_class *runtime_V1D_remap_grid_dst;$/;"	m	class:Runtime_remapping_weights
runtime_V1D_remap_grid_src	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_grid_class *runtime_V1D_remap_grid_src;$/;"	m	class:Runtime_remapping_weights
runtime_algorithm_common_initialize	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^void Runtime_algorithm_basis::runtime_algorithm_common_initialize(const int num_src_fields, const int num_dst_fields)$/;"	f	class:Runtime_algorithm_basis
runtime_config_root_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char runtime_config_root_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_mgr
runtime_data_transfer_algorithm	Runtime_MGT/inout_interface_mgt.h	/^        Runtime_trans_algorithm *runtime_data_transfer_algorithm;$/;"	m	class:Connection_coupling_procedure
runtime_datatype_transform_algorithms	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Runtime_datatype_transformer*> runtime_datatype_transform_algorithms;$/;"	m	class:Connection_coupling_procedure
runtime_inner_averaging_algorithm	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Runtime_cumulate_average_algorithm*> runtime_inner_averaging_algorithm;$/;"	m	class:Connection_coupling_procedure
runtime_inter_averaging_algorithm	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Runtime_cumulate_average_algorithm*> runtime_inter_averaging_algorithm;$/;"	m	class:Connection_coupling_procedure
runtime_mask_fields_in_remapping_process	CoR/remap_weight_of_strategy_class.h	/^        Remap_grid_data_class *runtime_mask_fields_in_remapping_process[512];$/;"	m	class:Remap_weight_of_strategy_class
runtime_receive_algorithms_receive_data	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::runtime_receive_algorithms_receive_data()$/;"	f	class:Inout_interface_mgt
runtime_remap_algorithms	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Runtime_remap_algorithm*> runtime_remap_algorithms;$/;"	m	class:Connection_coupling_procedure
runtime_remap_operator	CoR/runtime_remap_function.h	/^        Remap_operator_basis *runtime_remap_operator;$/;"	m	class:Runtime_remap_function
runtime_remap_operator_grid_dst	CoR/runtime_remap_function.h	/^        Remap_operator_grid *runtime_remap_operator_grid_dst;$/;"	m	class:Runtime_remap_function
runtime_remap_operator_grid_src	CoR/runtime_remap_function.h	/^        Remap_operator_grid *runtime_remap_operator_grid_src;$/;"	m	class:Runtime_remap_function
runtime_remapping_weights	Runtime_MGT/coupling_generator.h	/^    Runtime_remapping_weights *runtime_remapping_weights;$/;"	m	struct:Interface_field_info
runtime_remapping_weights	Runtime_MGT/runtime_remap_algorithm.h	/^        Runtime_remapping_weights *runtime_remapping_weights;$/;"	m	class:Runtime_remap_algorithm
runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        std::vector<Runtime_remapping_weights*> runtime_remapping_weights;$/;"	m	class:Runtime_remapping_weights_mgt
runtime_remapping_weights_mgr	Driver/global_data.cxx	/^Runtime_remapping_weights_mgt *runtime_remapping_weights_mgr = NULL;$/;"	v
runtime_unit_transform_algorithms	Runtime_MGT/inout_interface_mgt.h	/^        std::vector<Runtime_algorithm_basis*> runtime_unit_transform_algorithms;$/;"	m	class:Connection_coupling_procedure
runtype_mark	Driver/timer_mgt.h	/^        int runtype_mark;$/;"	m	class:Time_mgt
scatter_field	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^void Gather_scatter_rearrange_info::scatter_field(Field_mem_info *local_field_mem, bool &has_field_in_file)$/;"	f	class:Gather_scatter_rearrange_info
script_fp	CoR/remap_parser.h	/^        FILE *script_fp;$/;"	m	class:Remap_parser
search	Utils/dictionary.h	/^T Dictionary<T>::search(const char *key, bool check)$/;"	f	class:Dictionary
search_H2D_remapping_weight	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info *H2D_remapping_wgt_file_mgt::search_H2D_remapping_weight(Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid, const char *algorithm_name, int comp_id)$/;"	f	class:H2D_remapping_wgt_file_mgt
search_H2D_remapping_weight	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info *H2D_remapping_wgt_file_mgt::search_H2D_remapping_weight(const char *file_name)$/;"	f	class:H2D_remapping_wgt_file_mgt
search_H2D_remapping_weight	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info *Remapping_setting::search_H2D_remapping_weight(Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid, int remapping_host_comp_id)$/;"	f	class:Remapping_setting
search_IO_field	Data_MGT/IO_field_mgt.cxx	/^IO_field *IO_field_mgt::search_IO_field(int comp_id, const char *field_IO_name)$/;"	f	class:IO_field_mgt
search_IO_object	CoR/io_mgt.cxx	/^IO_basis *IO_mgt::search_IO_object(const char *object_name)$/;"	f	class:IO_mgt
search_an_inout_interface_executed_with_timer	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface *Inout_interface_mgt::search_an_inout_interface_executed_with_timer(int comp_id)$/;"	f	class:Inout_interface_mgt
search_at_least_16_nearnest_src_points_for_bilinear	CoR/remap_operator_bilinear.cxx	/^int Remap_operator_bilinear::search_at_least_16_nearnest_src_points_for_bilinear(double *dst_cell_center_values,$/;"	f	class:Remap_operator_bilinear
search_cell_in_src_grid	CoR/remap_operator_c_interface.cxx	/^void search_cell_in_src_grid(double *point_coord_values, long *cell_index, bool accurately_match) $/;"	f
search_cell_of_locating_point	CoR/grid_cell_search.cxx	/^int H2D_grid_cell_search_engine::search_cell_of_locating_point(double point_lon, double point_lat, bool accurately_match) const$/;"	f	class:H2D_grid_cell_search_engine
search_cell_of_locating_point	CoR/remap_operator_grid.cxx	/^long Remap_operator_grid::search_cell_of_locating_point(double *point_coord_values, bool accurately_match)$/;"	f	class:Remap_operator_grid
search_comp_with_comp_name	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node *Comp_comm_group_mgt_mgr::search_comp_with_comp_name(const char *comp_name)$/;"	f	class:Comp_comm_group_mgt_mgr
search_decomp_grid_info	Parallel_MGT/decomp_grid_mgt.cxx	/^Decomp_grid_info *Decomp_grid_mgt::search_decomp_grid_info(int decomp_id, Remap_grid_class *original_grid, bool diag)$/;"	f	class:Decomp_grid_mgt
search_decomp_grid_original_grid	Parallel_MGT/decomp_grid_mgt.cxx	/^Remap_grid_class *Decomp_grid_mgt::search_decomp_grid_original_grid(int decomp_id, Remap_grid_class *decomp_grid)$/;"	f	class:Decomp_grid_mgt
search_decomp_info	Parallel_MGT/decomp_info_mgt.cxx	/^Decomp_info *Decomp_info_mgt::search_decomp_info(const char *decomp_name, int comp_id)$/;"	f	class:Decomp_info_mgt
search_field_info	Data_MGT/field_info_mgt.cxx	/^const field_attr *Field_info_mgt::search_field_info(const char *field_name)$/;"	f	class:Field_info_mgt
search_field_instance	Data_MGT/memory_mgt.cxx	/^Field_mem_info *Memory_mgt::search_field_instance(const char *field_name, int decomp_id, int comp_or_grid_id, int buf_mark)$/;"	f	class:Memory_mgt
search_field_via_data_buf	Data_MGT/memory_mgt.cxx	/^Field_mem_info *Memory_mgt::search_field_via_data_buf(const void *data_buf, bool diag)$/;"	f	class:Memory_mgt
search_global_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node *Comp_comm_group_mgt_mgr::search_global_node(const char *full_name)$/;"	f	class:Comp_comm_group_mgt_mgr
search_global_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node *Comp_comm_group_mgt_mgr::search_global_node(int global_node_id)$/;"	f	class:Comp_comm_group_mgt_mgr
search_grid_info	Data_MGT/original_grid_mgt.cxx	/^Original_grid_info *Original_grid_mgt::search_grid_info(const char *grid_name, int comp_id)$/;"	f	class:Original_grid_mgt
search_grid_info	Data_MGT/original_grid_mgt.cxx	/^Original_grid_info *Original_grid_mgt::search_grid_info(int grid_id)$/;"	f	class:Original_grid_mgt
search_nearest_points_var_distance	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_engine::search_nearest_points_var_distance(double dist_threshold, double dst_point_lon, double dst_point_lat, int &num_found_points, long *found_points_indx, double *found_points_dist, bool early_quit)$/;"	f	class:H2D_grid_cell_search_engine
search_nearest_points_var_number	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_engine::search_nearest_points_var_number(int num_required_points, double dst_point_lon, double dst_point_lat, int &num_found_points, long *found_points_indx, double *found_points_dist, bool early_quit)$/;"	f	class:H2D_grid_cell_search_engine
search_or_add_remap_weight_of_strategy	CoR/remap_weight_of_strategy_mgt.cxx	/^Remap_weight_of_strategy_class *Remap_weight_of_strategy_mgt::search_or_add_remap_weight_of_strategy(Remap_grid_class *field_grid_src, Remap_grid_class *field_grid_dst, Remap_strategy_class *remap_strategy, const char *weight_object_name,$/;"	f	class:Remap_weight_of_strategy_mgt
search_or_add_router	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info *Routing_info_mgt::search_or_add_router(const int src_comp_id, const int dst_comp_id, const char *src_decomp_name, const char *dst_decomp_name)$/;"	f	class:Routing_info_mgt
search_or_generate_runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^Runtime_remapping_weights *Runtime_remapping_weights_mgt::search_or_generate_runtime_remapping_weights(const char *src_comp_full_name, const char *dst_comp_full_name, Original_grid_info *src_original_grid, Original_grid_info *dst_original_grid, Remapping_setting *remapping_setting, Decomp_info *dst_decomp_info)$/;"	f	class:Runtime_remapping_weights_mgt
search_or_register_internal_grid	Data_MGT/original_grid_mgt.cxx	/^Original_grid_info *Original_grid_mgt::search_or_register_internal_grid(int comp_id, Remap_grid_class *CoR_grid)$/;"	f	class:Original_grid_mgt
search_overlapping_cells	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_engine::search_overlapping_cells(int &num_overlapping_cells, long *overlapping_cells_index, const H2D_grid_cell_search_cell *dst_cell, bool accurately_match, bool early_quit) const$/;"	f	class:H2D_grid_cell_search_engine
search_overlapping_cells	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_tile::search_overlapping_cells(int &num_overlapping_cells, long *overlapping_cells_index, const H2D_grid_cell_search_cell *dst_cell, bool accurately_match, bool early_quit)$/;"	f	class:H2D_grid_cell_search_tile
search_points_within_distance	CoR/grid_cell_search.cxx	/^bool H2D_grid_cell_search_tile::search_points_within_distance(double dist_threshold, double dst_point_lon, double dst_point_lat, int &num_found_points, long *found_points_indx, double *found_points_dist, bool early_quit)$/;"	f	class:H2D_grid_cell_search_tile
search_registered_field_instance	Runtime_MGT/inout_interface_mgt.cxx	/^Field_mem_info *Inout_interface::search_registered_field_instance(const char *field_name, int &field_local_index)$/;"	f	class:Inout_interface
search_remap_field_data	CoR/remap_grid_data_mgt.cxx	/^Remap_grid_data_class *Remap_field_data_mgt::search_remap_field_data(const char *field_data_name)$/;"	f	class:Remap_field_data_mgt
search_remap_grid_with_coord_name	CoR/remap_grid_mgt.cxx	/^Remap_grid_class *Remap_grid_mgt::search_remap_grid_with_coord_name(const char *coord_label)$/;"	f	class:Remap_grid_mgt
search_remap_grid_with_grid_name	CoR/remap_grid_mgt.cxx	/^Remap_grid_class *Remap_grid_mgt::search_remap_grid_with_grid_name(const char *grid_name)$/;"	f	class:Remap_grid_mgt
search_remap_grid_with_sized_sub_grids	CoR/remap_grid_mgt.cxx	/^Remap_grid_class *Remap_grid_mgt::search_remap_grid_with_sized_sub_grids(int num_sized_sub_grids, Remap_grid_class **sized_sub_grids)$/;"	f	class:Remap_grid_mgt
search_remap_operator	CoR/remap_operator_mgt.cxx	/^Remap_operator_basis *Remap_operator_mgt::search_remap_operator(Remap_grid_class *grid_src, Remap_grid_class *grid_dst, const char *operator_name)$/;"	f	class:Remap_operator_mgt
search_remap_operator	CoR/remap_operator_mgt.cxx	/^Remap_operator_basis *Remap_operator_mgt::search_remap_operator(const char *object_name)$/;"	f	class:Remap_operator_mgt
search_remap_strategy	CoR/remap_strategy_mgt.cxx	/^Remap_strategy_class *Remap_strategy_mgt::search_remap_strategy(const char *strategy_name)$/;"	f	class:Remap_strategy_mgt
search_remap_weight_of_strategy	CoR/remap_weight_of_strategy_mgt.cxx	/^Remap_weight_of_strategy_class *Remap_weight_of_strategy_mgt::search_remap_weight_of_strategy(const char *object_name)$/;"	f	class:Remap_weight_of_strategy_mgt
search_remap_weights_of_operator	CoR/remap_weight_of_strategy_mgt.cxx	/^Remap_weight_of_operator_class *Remap_weight_of_operator_mgt::search_remap_weights_of_operator(Remap_grid_class *field_data_grid_src, Remap_grid_class *field_data_grid_dst, Remap_operator_basis *original_remap_operator)$/;"	f	class:Remap_weight_of_operator_mgt
search_remapping_configuration	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_configuration *Remapping_configuration_mgt::search_remapping_configuration(int comp_id)$/;"	f	class:Remapping_configuration_mgt
search_restart_buffer	Data_MGT/restart_mgt.cxx	/^Restart_buffer_container *Restart_mgt::search_restart_buffer(const char *buf_type, const char *keyword)$/;"	f	class:Restart_mgt
search_router	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info *Routing_info_mgt::search_router(const int src_comp_id, const int dst_comp_id, const char *src_decomp_name, const char *dst_decomp_name)$/;"	f	class:Routing_info_mgt
search_same_remap_grid	CoR/remap_grid_mgt.cxx	/^Remap_grid_class *Remap_grid_mgt::search_same_remap_grid(Remap_grid_class *remap_grid)$/;"	f	class:Remap_grid_mgt
search_src_cells_around_dst_cell	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::search_src_cells_around_dst_cell(double coord_value_dst, int src_index_start, int src_index_end, int &src_cell_index_left, int &src_cell_index_right)$/;"	f	class:Remap_operator_1D_basis
search_src_cells_around_dst_cell_recursively	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::search_src_cells_around_dst_cell_recursively(double coord_value_dst, int src_index_start, int src_index_end, int &src_cell_index_left, int &src_cell_index_right)$/;"	f	class:Remap_operator_1D_basis
search_sub_grid	CoR/remap_grid_class.cxx	/^Remap_grid_class *Remap_grid_class::search_sub_grid(const char *grid_name)$/;"	f	class:Remap_grid_class
search_timing_unit	Parallel_MGT/performance_timing_mgt.cxx	/^int Performance_timing_mgt::search_timing_unit(int unit_type, int unit_behavior, int unit_int_keyword, const char *unit_char_keyword)$/;"	f	class:Performance_timing_mgt
search_triangle_with_point	CoR/delaunay_voronoi.cxx	/^Triangle *Delaunay_Voronoi::search_triangle_with_point(Triangle *cur_triangle, const Point *pt)$/;"	f	class:Delaunay_Voronoi
search_wgt_file_info	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info *H2D_remapping_wgt_file_container::search_wgt_file_info(const char *wgt_file_name)$/;"	f	class:H2D_remapping_wgt_file_container
send	Runtime_MGT/runtime_trans_algorithm.cxx	/^bool Runtime_trans_algorithm::send(bool bypass_timer)$/;"	f	class:Runtime_trans_algorithm
send_displs_in_remote_procs	Runtime_MGT/runtime_trans_algorithm.h	/^        int *send_displs_in_remote_procs;$/;"	m	class:Runtime_trans_algorithm
send_fields	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_coupling_procedure::send_fields(bool bypass_timer)$/;"	f	class:Connection_coupling_procedure
send_or_receive	Runtime_MGT/runtime_trans_algorithm.h	/^        bool send_or_receive;    \/\/ true means send and false means receive$/;"	m	class:Runtime_trans_algorithm
send_or_recv	Parallel_MGT/routing_info_mgt.h	/^    bool send_or_recv;                           \/\/ true is send and false is recv$/;"	m	struct:Routing_info_with_one_process
send_tag_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        long * send_tag_buf;$/;"	m	class:Runtime_trans_algorithm
send_to_remote_procs_routing_info	Parallel_MGT/routing_info_mgt.h	/^        std::vector<Routing_info_with_one_process *> send_to_remote_procs_routing_info;$/;"	m	class:Routing_info
sender_time_has_matched	Runtime_MGT/runtime_trans_algorithm.h	/^        bool sender_time_has_matched;$/;"	m	class:Runtime_trans_algorithm
sentinel	XML/tinyxml.h	/^	TiXmlAttribute sentinel;$/;"	m	class:TiXmlAttributeSet
seperate_cells_in_children_tiles	CoR/grid_cell_search.cxx	/^void seperate_cells_in_children_tiles(int num_cells, H2D_grid_cell_search_cell **cells, double center_lon, double center_lat, $/;"	f
seperator_words	CoR/remap_parser.h	/^        std::vector<char*> seperator_words;$/;"	m	class:Remap_parser
sequential_remap_weight_of_operator_manager	CoR/cor_global_data.cxx	/^Remap_weight_of_operator_mgt *sequential_remap_weight_of_operator_manager;$/;"	v
sequential_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Remap_weight_of_strategy_class *sequential_remapping_weights;$/;"	m	class:Runtime_remapping_weights
set_1D_coord_vertex_values_in_default	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_1D_coord_vertex_values_in_default(const double *center_values, $/;"	f	class:Remap_grid_class
set_2D_coord_vertex_values_in_default	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_2D_coord_vertex_values_in_default(const double *center_values_dim1, $/;"	f	class:Remap_grid_class
set_3D_grid_3D_vertical_coord_field_inst	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::set_3D_grid_3D_vertical_coord_field_inst(int grid_id, int field_id, const char *static_or_dynamic, const char *annotation)$/;"	f	class:Original_grid_mgt
set_3d_grid_3d_vertical_coord_field	Driver/coupling_interface.cxx	/^extern "C" void set_3d_grid_3d_vertical_coord_field$/;"	f
set_3d_grid_bottom_field	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_mgt::set_3d_grid_bottom_field(int comp_id, int grid_id, int field_id, int static_or_dynamic_or_external, int API_id, const char *API_label, const char *annotation)$/;"	f	class:Original_grid_mgt
set_3d_grid_surface_field	Driver/coupling_interface.cxx	/^extern "C" void set_3d_grid_surface_field$/;"	f
set_H2D_grids_area	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^void Runtime_remapping_weights::set_H2D_grids_area(const double *src_area, const double *dst_area, long src_grid_size, long dst_grid_size)$/;"	f	class:Runtime_remapping_weights
set_V3D_lev_field_variation_type	Data_MGT/original_grid_mgt.h	/^		void set_V3D_lev_field_variation_type(int type) { V3D_lev_field_variation_type = type; }$/;"	f	class:Original_grid_info
set_basic_fields	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::set_basic_fields(const char *object_name, Remap_strategy_class *remap_strategy, Remap_grid_class *data_grid_src, Remap_grid_class *data_grid_dst)$/;"	f	class:Remap_weight_of_strategy_class
set_bottom_field_variation_type	Data_MGT/original_grid_mgt.h	/^        void set_bottom_field_variation_type(int type) { bottom_field_variation_type = type; }$/;"	f	class:Original_grid_info
set_common_parameter	CoR/remap_operator_1D_basis.cxx	/^void Remap_operator_1D_basis::set_common_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_1D_basis
set_component_time_step	Driver/coupling_interface.cxx	/^extern "C" void set_component_time_step$/;"	f
set_component_time_step	Driver/timer_mgt.cxx	/^void Components_time_mgt::set_component_time_step(int comp_id, int time_step, const char *annotation)$/;"	f	class:Components_time_mgt
set_coord_vertex_values_in_default	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_coord_vertex_values_in_default()$/;"	f	class:Remap_grid_class
set_coupling_connections_dumped	Runtime_MGT/inout_interface_mgt.h	/^        void set_coupling_connections_dumped(){ coupling_connections_dumped = true;}$/;"	f	class:Connection_coupling_procedure
set_current_proc_current_time	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::set_current_proc_current_time(int comp_id, int days, int second)$/;"	f	class:Comp_comm_group_mgt_mgr
set_current_proc_current_time	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::set_current_proc_current_time(int days, int second)$/;"	f	class:Comp_comm_group_mgt_node
set_data_win	Runtime_MGT/runtime_trans_algorithm.h	/^        void set_data_win(MPI_Win win) {data_win = win;}$/;"	f	class:Runtime_trans_algorithm
set_decomp_grids_using_3D_level_coord	Parallel_MGT/decomp_grid_mgt.cxx	/^void Decomp_grid_mgt::set_decomp_grids_using_3D_level_coord(Remap_grid_class *original_V3D_grid)$/;"	f	class:Decomp_grid_mgt
set_decomp_name	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_decomp_name(const char *decomp_name)$/;"	f	class:Remap_grid_class
set_define_order_count	Data_MGT/memory_mgt.h	/^        void set_define_order_count(long count) { define_order_count = count; }$/;"	f	class:Field_mem_info
set_dst_grid	CoR/remap_operator_basis.h	/^        void set_dst_grid(Remap_grid_class *new_dst_grid) { dst_grid = new_dst_grid; }$/;"	f	class:Remap_operator_basis
set_enable_extrapolation	CoR/remap_operator_1D_basis.h	/^        bool set_enable_extrapolation;$/;"	m	class:Remap_operator_1D_basis
set_field_instance_id	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::set_field_instance_id(int field_instance_id, const char *annotation)$/;"	f	class:Field_mem_info
set_field_long_name	CoR/remap_statement_operand.cxx	/^void Remap_data_field::set_field_long_name(const char *long_name)$/;"	f	class:Remap_data_field
set_field_unit	CoR/remap_statement_operand.cxx	/^void Remap_data_field::set_field_unit(const char *unit)$/;"	f	class:Remap_data_field
set_fields_necessity	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::set_fields_necessity(int *necessity, int size_necessity, const char *annotation)$/;"	f	class:Inout_interface
set_fill_value	CoR/remap_statement_operand.cxx	/^void Remap_data_field::set_fill_value(void *given_fill_value)$/;"	f	class:Remap_data_field
set_grid_boundary	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_grid_boundary(double min_lon, double max_lon, double min_lat, double max_lat)$/;"	f	class:Remap_grid_class
set_grid_checksum	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::set_grid_checksum(long checksum_mask)$/;"	f	class:Original_grid_info
set_import_interface_fields_necessity	Driver/coupling_interface.cxx	/^extern "C" void set_import_interface_fields_necessity$/;"	f
set_keep_monotonicity	CoR/remap_operator_spline_1D.h	/^        bool set_keep_monotonicity;$/;"	m	class:Remap_operator_spline_1D
set_latest_connection_id	Runtime_MGT/coupling_generator.h	/^        void set_latest_connection_id(int connection_id) { latest_connection_id = connection_id; }$/;"	f	class:Coupling_generator
set_lev_grid_sigma_info	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_lev_grid_sigma_info(const char *sigma_value_field_name, double top_value, double scale_factor, const char *hybrid_grid_coefficient_field_name)$/;"	f	class:Remap_grid_class
set_lev_grid_sigma_info	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_lev_grid_sigma_info(double top_value, const double *sigma_values, const double *hybrid_grid_coefficients, double scale_factor)$/;"	f	class:Remap_grid_class
set_level_V3D_coord_dynamic_trigger_field	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_level_V3D_coord_dynamic_trigger_field(Remap_grid_data_class *value_field)$/;"	f	class:Remap_grid_class
set_local_tags	Runtime_MGT/runtime_trans_algorithm.cxx	/^bool Runtime_trans_algorithm::set_local_tags()$/;"	f	class:Runtime_trans_algorithm
set_mask	CoR/grid_cell_search.h	/^        void set_mask(bool new_mask) { mask = new_mask; } $/;"	f	class:H2D_grid_cell_search_cell
set_masked_cell_to_missing_value	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::set_masked_cell_to_missing_value()$/;"	f	class:Remap_grid_data_class
set_mid_point_grid	CoR/remap_grid_class.h	/^		void set_mid_point_grid(Remap_grid_class *mid_point_grid) { this->mid_point_grid = mid_point_grid; }$/;"	f	class:Remap_grid_class
set_mid_point_grid	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::set_mid_point_grid(Original_grid_info *new_grid)$/;"	f	class:Original_grid_info
set_original_grid	CoR/remap_grid_class.h	/^        void set_original_grid(Remap_grid_class *grid) { original_grid = grid; }$/;"	f	class:Remap_grid_class
set_parameter	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_bilinear
set_parameter	CoR/remap_operator_conserv_2D.cxx	/^void Remap_operator_conserv_2D::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_conserv_2D
set_parameter	CoR/remap_operator_distwgt.cxx	/^void Remap_operator_distwgt::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_distwgt
set_parameter	CoR/remap_operator_linear.cxx	/^void Remap_operator_linear::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_linear
set_parameter	CoR/remap_operator_regrid.cxx	/^void Remap_operator_regrid::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_regrid
set_parameter	CoR/remap_operator_smooth.cxx	/^void Remap_operator_smooth::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_smooth
set_parameter	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::set_parameter(const char *parameter_name, const char *parameter_value)$/;"	f	class:Remap_operator_spline_1D
set_period	CoR/remap_operator_1D_basis.h	/^        bool set_period;$/;"	m	class:Remap_operator_1D_basis
set_periodic	CoR/remap_operator_1D_basis.h	/^        bool set_periodic;$/;"	m	class:Remap_operator_1D_basis
set_proc_latest_model_time	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::set_proc_latest_model_time(int proc_id, long model_time)$/;"	f	class:Comp_comm_group_mgt_node
set_remap_weight_of_operator	CoR/remap_weight_of_strategy_class.h	/^		void set_remap_weight_of_operator(Remap_weight_of_operator_class *remap_weight_of_operator) { this->remap_weight_of_operator = remap_weight_of_operator; } ;$/;"	f	class:Remap_weight_of_operator_instance_class
set_scale_factor_and_add_offset	CoR/remap_statement_operand.cxx	/^void Remap_data_field::set_scale_factor_and_add_offset(double scale_factor, double add_offset)$/;"	f	class:Remap_data_field
set_size	XML/tinystr.h	/^	void set_size(size_type sz) { rep_->str[ rep_->size = sz ] = '\\0'; }$/;"	f	class:TiXmlString
set_src_grid	CoR/remap_operator_basis.h	/^        void set_src_grid(Remap_grid_class *new_src_grid) { src_grid = new_src_grid; }$/;"	f	class:Remap_operator_basis
set_super_grid_of_setting_coord_values	CoR/remap_grid_class.h	/^		void set_super_grid_of_setting_coord_values(Remap_grid_class *super_grid) { super_grid_of_setting_coord_values = super_grid; }$/;"	f	class:Remap_grid_class
set_tag_win	Runtime_MGT/runtime_trans_algorithm.h	/^        void set_tag_win(MPI_Win win) {tag_win = win;}$/;"	f	class:Runtime_trans_algorithm
set_time_step_in_second	Driver/timer_mgt.cxx	/^bool Time_mgt::set_time_step_in_second(int time_step_in_second, const char *annotation, bool check_error)$/;"	f	class:Time_mgt
set_unique_3D_lev_field	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::set_unique_3D_lev_field(int field_id, const char *type, const char *annotation) $/;"	f	class:Original_grid_info
set_unique_bottom_field	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::set_unique_bottom_field(int field_id, int type, const char *annotation) $/;"	f	class:Original_grid_info
set_use_exponent_coordinate	CoR/remap_operator_1D_basis.h	/^        bool set_use_exponent_coordinate;$/;"	m	class:Remap_operator_1D_basis
set_use_logarithmic_coordinate	CoR/remap_operator_1D_basis.h	/^        bool set_use_logarithmic_coordinate;$/;"	m	class:Remap_operator_1D_basis
set_using_V3D_level_coord	CoR/remap_grid_class.cxx	/^void Remap_grid_class::set_using_V3D_level_coord()$/;"	f	class:Remap_grid_class
shrink	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_mgt::shrink(Original_grid_info *src_grid, Original_grid_info *dst_grid)$/;"	f	class:H2D_remapping_wgt_file_mgt
shrink	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::shrink(Original_grid_info *src_grid, Original_grid_info *dst_grid)$/;"	f	class:Remapping_setting
sigma_grid_scale_factor	CoR/remap_grid_class.h	/^        double sigma_grid_scale_factor;$/;"	m	class:Remap_grid_class
sigma_grid_sigma_value_field	CoR/remap_grid_class.h	/^        Remap_grid_data_class *sigma_grid_sigma_value_field;$/;"	m	class:Remap_grid_class
sigma_grid_top_value	CoR/remap_grid_class.h	/^        double sigma_grid_top_value;$/;"	m	class:Remap_grid_class
simpleTextPrint	XML/tinyxml.h	/^	bool simpleTextPrint;$/;"	m	class:TiXmlPrinter
sind	CoR/delaunay_voronoi.cxx	/^static inline double sind(double x)$/;"	f	file:
size	XML/tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep
size	XML/tinystr.h	/^	size_type size () const { return rep_->size; }$/;"	f	class:TiXmlString
size_common_buffer_for_1D_remap_operator	CoR/remap_operator_1D_basis.cxx	/^int size_common_buffer_for_1D_remap_operator = 0;$/;"	v
size_dst_H2D_grid_area	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        int size_dst_H2D_grid_area;$/;"	m	class:Runtime_remapping_weights
size_index_src_cells_overlap_with_dst_cells	CoR/remap_operator_basis.h	/^        long size_index_src_cells_overlap_with_dst_cells;$/;"	m	class:Remap_operator_basis
size_src_H2D_grid_area	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        int size_src_H2D_grid_area;$/;"	m	class:Runtime_remapping_weights
size_type	XML/tinystr.h	/^  	typedef size_t size_type;$/;"	t	class:TiXmlString
sized_grids	CoR/remap_grid_data_class.h	/^        std::vector<Remap_grid_class *> sized_grids;$/;"	m	class:Remap_grid_data_class
sized_grids_map	CoR/io_basis.h	/^        std::map<const Remap_grid_class*, int> sized_grids_map;$/;"	m	class:IO_basis
sized_grids_of_interchanged_grid	CoR/runtime_remap_function.h	/^        Remap_grid_class *sized_grids_of_interchanged_grid[256];$/;"	m	class:Runtime_remap_function
software_name	Driver/global_data.cxx	/^char software_name[16] = "CoR";$/;"	v
solve_aperiodic_tridiagonal_system	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::solve_aperiodic_tridiagonal_system(double *a, double *b, double *c, double *f, int n)$/;"	f	class:Remap_operator_spline_1D
solve_periodic_tridiagonal_system	CoR/remap_operator_spline_1D.cxx	/^void Remap_operator_spline_1D::solve_periodic_tridiagonal_system(double *a, double *b, double *c, double *f, int n)$/;"	f	class:Remap_operator_spline_1D
solve_two_bilinear_ratios	CoR/remap_operator_bilinear.cxx	/^void Remap_operator_bilinear::solve_two_bilinear_ratios(long *bilinear_box_vertexes_src_cell_indexes, $/;"	f	class:Remap_operator_bilinear
sort_comp_full_names	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::sort_comp_full_names(std::vector<const char*> &comp_full_names, std::vector<int> *comp_index)$/;"	f	class:Coupling_generator
sort_polygon_vertexes	CoR/remap_operator_c_interface.cxx	/^void sort_polygon_vertexes(double point_coord_value_dim1, $/;"	f
sort_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.cxx	/^void Routing_info::sort_routing_mapping_table_entries(routing_mapping_table_entry** routing_mapping_table_entries, Decomp_info* decomp_info, Comp_comm_group_mgt_node* comp_node, int* num_local_routing_mapping_table_entries, int current_proc_id, int num_local_procs, int num_local_procs_adjust, int num_remote_procs_adjust, int compare_option)$/;"	f	class:Routing_info
sort_vertexes_of_sphere_cell	CoR/remap_operator_c_interface.cxx	/^void sort_vertexes_of_sphere_cell(int num_vertexes,$/;"	f
span_data_array	CoR/remap_grid_data_class.cxx	/^template<class T1, class T2> void span_data_array(T1 *spanned_array, T2 bound_start, T2 bound_end, long num_elements)$/;"	f
specified_dst_field_instance	Runtime_MGT/runtime_remap_algorithm.h	/^        Field_mem_info *specified_dst_field_instance;$/;"	m	class:Runtime_remap_algorithm
specified_src_field_instance	Runtime_MGT/runtime_remap_algorithm.h	/^        Field_mem_info *specified_src_field_instance;$/;"	m	class:Runtime_remap_algorithm
src_H2D_grid_area	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        double *src_H2D_grid_area;$/;"	m	class:Runtime_remapping_weights
src_area	Runtime_MGT/remapping_configuration_mgt.h	/^        double *src_area;$/;"	m	class:H2D_remapping_wgt_file_info
src_bottom_fields_coupling_info	Runtime_MGT/coupling_generator.h	/^        std::vector<V3D_grid_bottom_field_coupling_info*> src_bottom_fields_coupling_info; $/;"	m	class:Coupling_connection
src_cell_and_dst_cell_have_overlap	CoR/remap_operator_c_interface.cxx	/^bool src_cell_and_dst_cell_have_overlap(long cell_index_src, long cell_index_dst)$/;"	f
src_cell_index_left	CoR/remap_operator_1D_basis.h	/^        int *src_cell_index_left;$/;"	m	class:Remap_operator_1D_basis
src_cell_index_right	CoR/remap_operator_1D_basis.h	/^        int *src_cell_index_right;$/;"	m	class:Remap_operator_1D_basis
src_center_lat	Runtime_MGT/remapping_configuration_mgt.h	/^        double *src_center_lat;$/;"	m	class:H2D_remapping_wgt_file_info
src_center_lon	Runtime_MGT/remapping_configuration_mgt.h	/^        double *src_center_lon;$/;"	m	class:H2D_remapping_wgt_file_info
src_comp_full_name	Parallel_MGT/routing_info_mgt.h	/^        char src_comp_full_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
src_comp_full_name	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        const char *src_comp_full_name;$/;"	m	class:Runtime_remapping_weights
src_comp_id	Parallel_MGT/routing_info_mgt.h	/^        int src_comp_id;$/;"	m	class:Routing_info
src_comp_interfaces	Runtime_MGT/coupling_generator.h	/^        std::vector<std::pair<const char*, const char*> > src_comp_interfaces;$/;"	m	class:Coupling_connection
src_comp_node	Parallel_MGT/routing_info_mgt.h	/^        Comp_comm_group_mgt_node * src_comp_node;$/;"	m	class:Routing_info
src_comp_node	Runtime_MGT/coupling_generator.h	/^        Comp_comm_group_mgt_node *src_comp_node;$/;"	m	class:Coupling_connection
src_comp_node_id	Parallel_MGT/routing_info_mgt.h	/^        int src_comp_node_id;$/;"	m	class:Routing_info
src_comp_root_proc_global_id	Runtime_MGT/coupling_generator.h	/^        int src_comp_root_proc_global_id;$/;"	m	class:Coupling_connection
src_current_day	Runtime_MGT/coupling_generator.h	/^        int src_current_year, src_current_month, src_current_day, src_current_second;$/;"	m	class:Coupling_connection
src_current_month	Runtime_MGT/coupling_generator.h	/^        int src_current_year, src_current_month, src_current_day, src_current_second;$/;"	m	class:Coupling_connection
src_current_second	Runtime_MGT/coupling_generator.h	/^        int src_current_year, src_current_month, src_current_day, src_current_second;$/;"	m	class:Coupling_connection
src_current_year	Runtime_MGT/coupling_generator.h	/^        int src_current_year, src_current_month, src_current_day, src_current_second;$/;"	m	class:Coupling_connection
src_decomp_info	Parallel_MGT/routing_info_mgt.h	/^        Decomp_info *src_decomp_info;$/;"	m	class:Routing_info
src_decomp_info	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Decomp_info *src_decomp_info;$/;"	m	class:Runtime_remapping_weights
src_decomp_name	Parallel_MGT/routing_info_mgt.h	/^        char src_decomp_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
src_decomp_size	Parallel_MGT/routing_info_mgt.h	/^        int src_decomp_size;$/;"	m	class:Routing_info
src_fields	Runtime_MGT/runtime_datatype_transformer.h	/^        std::vector<Field_mem_info*> src_fields;$/;"	m	class:Runtime_datatype_transformer
src_fields_info	Runtime_MGT/coupling_generator.h	/^        std::vector<Interface_field_info*> src_fields_info;$/;"	m	class:Coupling_connection
src_grid	CoR/remap_operator_basis.h	/^        Remap_grid_class *src_grid;$/;"	m	class:Remap_operator_basis
src_grid_size	Runtime_MGT/remapping_configuration_mgt.h	/^        int src_grid_size;$/;"	m	class:H2D_remapping_wgt_file_info
src_inst_or_aver	Runtime_MGT/coupling_generator.h	/^        int src_inst_or_aver;$/;"	m	class:Coupling_connection
src_local_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^        routing_mapping_table_entry *src_local_routing_mapping_table_entries;$/;"	m	class:Routing_info
src_operands	CoR/remap_mgt.h	/^            std::vector<Remap_statement_operand*> src_operands;$/;"	m	struct:Remap_mgt::Remap_statement
src_original_grid	Runtime_MGT/runtime_remapping_weights_mgt.h	/^        Original_grid_info *src_original_grid;$/;"	m	class:Runtime_remapping_weights
src_proc_ranks_in_union_comm	Runtime_MGT/coupling_generator.h	/^        int * src_proc_ranks_in_union_comm;$/;"	m	class:Coupling_connection
src_remote_routing_mapping_table_entries	Parallel_MGT/routing_info_mgt.h	/^        routing_mapping_table_entry *src_remote_routing_mapping_table_entries;$/;"	m	class:Routing_info
src_time_step_in_second	Runtime_MGT/coupling_generator.h	/^        int src_time_step_in_second;$/;"	m	class:Coupling_connection
src_timer	Runtime_MGT/coupling_generator.h	/^        Coupling_timer *src_timer;$/;"	m	class:Coupling_connection
stamp	XML/tinyxmlparser.cxx	/^	const char*		stamp;$/;"	m	class:TiXmlParsingData	file:
standalone	XML/tinyxml.h	/^	TIXML_STRING standalone;$/;"	m	class:TiXmlDeclaration
start	XML/tinystr.h	/^	char* start() const { return rep_->str; }$/;"	f	class:TiXmlString
start_day	Driver/timer_mgt.h	/^        int start_day;$/;"	m	class:Time_mgt
start_month	Driver/timer_mgt.h	/^        int start_month;$/;"	m	class:Time_mgt
start_num_elapsed_day	Driver/timer_mgt.h	/^        int start_num_elapsed_day;$/;"	m	class:Time_mgt
start_second	Driver/timer_mgt.h	/^        int start_second;$/;"	m	class:Time_mgt
start_year	Driver/timer_mgt.h	/^        int start_year;$/;"	m	class:Time_mgt
status	Runtime_MGT/coupling_generator.h	/^        int status;                      \/\/ 0 means off; 1 means on$/;"	m	class:Import_direction_setting
stop_day	Driver/timer_mgt.h	/^        int stop_day;$/;"	m	class:Time_mgt
stop_month	Driver/timer_mgt.h	/^        int stop_month;$/;"	m	class:Time_mgt
stop_n	Driver/timer_mgt.h	/^        int stop_n;$/;"	m	class:Time_mgt
stop_num_elapsed_day	Driver/timer_mgt.h	/^        int stop_num_elapsed_day;$/;"	m	class:Time_mgt
stop_option	Driver/timer_mgt.h	/^        char stop_option[NAME_STR_SIZE];$/;"	m	class:Time_mgt
stop_second	Driver/timer_mgt.h	/^        int stop_second;$/;"	m	class:Time_mgt
stop_year	Driver/timer_mgt.h	/^        int stop_year;$/;"	m	class:Time_mgt
str	XML/tinystr.h	/^		char str[1];$/;"	m	struct:TiXmlString::Rep
str	XML/tinyxml.h	/^		const char*     str;$/;"	m	struct:TiXmlBase::Entity
strLength	XML/tinyxml.h	/^		unsigned int	strLength;$/;"	m	struct:TiXmlBase::Entity
strategy_name	CoR/remap_strategy_class.h	/^        char strategy_name[256];$/;"	m	class:Remap_strategy_class
string_in_export_fields_dst_components	Runtime_MGT/coupling_generator.h	/^        std::vector<const char*> string_in_export_fields_dst_components;$/;"	m	class:Coupling_generator
sub_comm	Runtime_MGT/runtime_trans_algorithm.h	/^        MPI_Comm sub_comm;$/;"	m	class:Runtime_trans_algorithm
sub_grids	CoR/remap_grid_class.h	/^        std::vector<Remap_grid_class *> sub_grids;$/;"	m	class:Remap_grid_class
super_grid_of_setting_coord_values	CoR/remap_grid_class.h	/^        Remap_grid_class *super_grid_of_setting_coord_values;$/;"	m	class:Remap_grid_class
super_grids_of_setting_mask_value	CoR/remap_grid_class.h	/^        std::vector<Remap_grid_class *> super_grids_of_setting_mask_value; $/;"	m	class:Remap_grid_class
swap	CoR/quick_sort.h	/^template <class T> void swap(T* k, T* j)$/;"	f
swap	XML/tinystr.h	/^	void swap (TiXmlString& other)$/;"	f	class:TiXmlString
synchronize_comp_processes_for_API	Driver/CCPL_api_mgt.cxx	/^void synchronize_comp_processes_for_API(int comp_id, int API_id, MPI_Comm comm, const char *hint, const char *annotation)$/;"	f
synchronize_latest_connection_id	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::synchronize_latest_connection_id(MPI_Comm comm)$/;"	f	class:Coupling_generator
tabsize	XML/tinyxml.h	/^	int tabsize;$/;"	m	class:TiXmlDocument
tabsize	XML/tinyxmlparser.cxx	/^	int				tabsize;$/;"	m	class:TiXmlParsingData	file:
tag_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        long * tag_buf;$/;"	m	class:Runtime_trans_algorithm
tag_buf_size	Runtime_MGT/runtime_trans_algorithm.h	/^        int tag_buf_size;$/;"	m	class:Runtime_trans_algorithm
tag_win	Runtime_MGT/runtime_trans_algorithm.h	/^        MPI_Win tag_win;$/;"	m	class:Runtime_trans_algorithm
tail	CoR/delaunay_voronoi.h	/^        Point *tail;    \/* the tail of this edge, constant *\/$/;"	m	class:Edge
temp_array_buffer	Parallel_MGT/compset_communicators_info_mgt.h	/^        char *temp_array_buffer;$/;"	m	class:Comp_comm_group_mgt_node
temp_array_column	CoR/remap_operator_spline_1D.h	/^        double *temp_array_column;$/;"	m	class:Remap_operator_spline_1D
temp_array_row	CoR/remap_operator_spline_1D.h	/^        double *temp_array_row;$/;"	m	class:Remap_operator_spline_1D
temp_decomp_map_src	CoR/remap_operator_linear.h	/^        long *temp_decomp_map_src;$/;"	m	class:Remap_operator_linear
temp_grids	CoR/remap_grid_mgt.h	/^        std::vector<Remap_grid_class*> temp_grids;$/;"	m	class:Remap_grid_mgt
temp_receive_data_buffer	Runtime_MGT/runtime_trans_algorithm.h	/^        char *temp_receive_data_buffer;$/;"	m	class:Runtime_trans_algorithm
template_cumulate_or_average	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^template<typename T> void template_cumulate_or_average(T* dst, const T* src, const int length, $/;"	f
threshold_distance	CoR/remap_operator_distwgt.h	/^        double threshold_distance;$/;"	m	class:Remap_operator_distwgt
time_count	CoR/io_netcdf.h	/^        int time_count;$/;"	m	class:IO_netcdf
time_dim_id	CoR/io_netcdf.h	/^        int time_dim_id;$/;"	m	class:IO_netcdf
time_has_been_advanced	Driver/timer_mgt.h	/^        bool time_has_been_advanced;$/;"	m	class:Time_mgt
time_mgr	Data_MGT/IO_field_mgt.h	/^        Time_mgt *time_mgr;$/;"	m	class:IO_output_procedure
time_mgr	Data_MGT/restart_mgt.h	/^        Time_mgt *time_mgr;$/;"	m	class:Restart_mgt
time_mgr	Runtime_MGT/inout_interface_mgt.h	/^        Time_mgt *time_mgr;$/;"	m	class:Inout_interface
time_mgr	Runtime_MGT/runtime_trans_algorithm.h	/^        Time_mgt *time_mgr;$/;"	m	class:Runtime_trans_algorithm
time_step_in_second	Driver/timer_mgt.h	/^        int time_step_in_second; $/;"	m	class:Time_mgt
time_step_in_second	Runtime_MGT/inout_interface_mgt.h	/^        int time_step_in_second;$/;"	m	class:Connection_field_time_info
timer	Runtime_MGT/inout_interface_mgt.h	/^        Coupling_timer *timer;$/;"	m	class:Connection_field_time_info
timer	Runtime_MGT/inout_interface_mgt.h	/^        Coupling_timer *timer;$/;"	m	class:Inout_interface
timer	Runtime_MGT/runtime_cumulate_average_algorithm.h	/^    Coupling_timer *timer;$/;"	m	struct:cumulate_average_field_info
timer_id	Driver/timer_mgt.h	/^        int timer_id;$/;"	m	class:Coupling_timer
timer_mgr	Driver/global_data.cxx	/^Timer_mgt *timer_mgr = NULL;$/;"	v
timer_not_bypassed	Runtime_MGT/runtime_trans_algorithm.h	/^        bool timer_not_bypassed;$/;"	m	class:Runtime_trans_algorithm
timers	Driver/timer_mgt.h	/^        std::vector<Coupling_timer*> timers;$/;"	m	class:Timer_mgt
timing_add	Parallel_MGT/performance_timing_mgt.h	/^        void timing_add(double time_inc) { total_time += time_inc; }$/;"	f	class:Performance_timing_unit
timing_output	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_unit::timing_output()$/;"	f	class:Performance_timing_unit
timing_reset	Parallel_MGT/performance_timing_mgt.h	/^        void timing_reset() { total_time = 0.0; }$/;"	f	class:Performance_timing_unit
timing_start	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_unit::timing_start()$/;"	f	class:Performance_timing_unit
timing_stop	Parallel_MGT/performance_timing_mgt.cxx	/^void Performance_timing_unit::timing_stop()$/;"	f	class:Performance_timing_unit
tolerable_error	CoR/radix_sort.h	/^        T1 tolerable_error;$/;"	m	class:Radix_sort
total_buf	Runtime_MGT/runtime_trans_algorithm.h	/^        char * total_buf;$/;"	m	class:Runtime_trans_algorithm
total_buf_size	Runtime_MGT/runtime_trans_algorithm.h	/^        int total_buf_size;$/;"	m	class:Runtime_trans_algorithm
total_num_transferred_cells	Parallel_MGT/routing_info_mgt.h	/^        int total_num_transferred_cells;$/;"	m	class:Routing_info
total_time	Parallel_MGT/performance_timing_mgt.h	/^        double total_time;$/;"	m	class:Performance_timing_unit
transfer_array_from_one_comp_to_another	Driver/CCPL_api_mgt.cxx	/^void transfer_array_from_one_comp_to_another(int current_proc_local_id_src_comp, int root_proc_global_id_src_comp, int current_proc_local_id_dst_comp, $/;"	f
transfer_data	Runtime_MGT/inout_interface_mgt.h	/^        bool transfer_data;$/;"	m	class:Connection_coupling_procedure
transfer_data_buffer	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::transfer_data_buffer(Comp_comm_group_mgt_node *new_node)$/;"	f	class:Comp_comm_group_mgt_node
transfer_data_from_float_to_short	CoR/io_basis.cxx	/^template <class T> void transfer_data_from_float_to_short(T *data_values_in_application, T fill_value_in_application, short *data_values_in_io, short fill_value_in_io, bool *mask, long size, double add_offset, double scale_factor)$/;"	f
transfer_field_attributes_to_another	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::transfer_field_attributes_to_another(Remap_grid_data_class *another_field)$/;"	f	class:Remap_grid_data_class
transfer_fields_data_type_after_run	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^void Runtime_algorithm_basis::transfer_fields_data_type_after_run() $/;"	f	class:Runtime_algorithm_basis
transfer_fields_data_type_before_run	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^void Runtime_algorithm_basis::transfer_fields_data_type_before_run() $/;"	f	class:Runtime_algorithm_basis
transfer_interfaces_info_from_one_component_to_another	Runtime_MGT/coupling_generator.cxx	/^void Coupling_generator::transfer_interfaces_info_from_one_component_to_another(std::vector<Inout_interface*> &interfaces, Comp_comm_group_mgt_node *comp_node_src, Comp_comm_group_mgt_node *comp_node_dst)$/;"	f	class:Coupling_generator
transfer_runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^void Runtime_remapping_weights_mgt::transfer_runtime_remapping_weights(Runtime_remapping_weights *remapping_weights_from, Runtime_remapping_weights **remapping_weights_to, Comp_comm_group_mgt_node *comp_node_from, Comp_comm_group_mgt_node *comp_node_to)$/;"	f	class:Runtime_remapping_weights_mgt
transfer_size_with_remote_procs	Runtime_MGT/runtime_trans_algorithm.h	/^        int *transfer_size_with_remote_procs;$/;"	m	class:Runtime_trans_algorithm
transform_coord_unit_from_radian_to_degrees	CoR/remap_grid_class.cxx	/^void Remap_grid_class::transform_coord_unit_from_radian_to_degrees()$/;"	f	class:Remap_grid_class
transform_coord_values_from_radian_to_degrees	CoR/remap_grid_class.cxx	/^void Remap_grid_class::transform_coord_values_from_radian_to_degrees(Remap_grid_data_class *remap_grid_data)$/;"	f	class:Remap_grid_class
transform_data_type	Runtime_MGT/runtime_remap_algorithm.h	/^        bool transform_data_type;$/;"	m	class:Runtime_remap_algorithm
transform_datatype_of_arrays	Utils/common_utils.cxx	/^void transform_datatype_of_arrays(const char *src_array, char *dst_array, const char *src_data_type, const char *dst_data_type, long num_local_cells)$/;"	f
transform_datatype_of_arrays	Utils/common_utils.h	/^template <typename T1, typename T2> void transform_datatype_of_arrays(const T1 *src_array, T2 *dst_array, long num_local_cells)$/;"	f
transform_fields_datatype	Runtime_MGT/runtime_datatype_transformer.cxx	/^void Runtime_datatype_transformer::transform_fields_datatype()$/;"	f	class:Runtime_datatype_transformer
transform_global_node_tree_into_array	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_mgr::transform_global_node_tree_into_array(Comp_comm_group_mgt_node *current_global_node, Comp_comm_group_mgt_node **all_global_nodes, int &global_node_id)$/;"	f	class:Comp_comm_group_mgt_mgr
transform_interface_into_array	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::transform_interface_into_array(char **temp_array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Inout_interface
transform_node_into_array	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::transform_node_into_array()$/;"	f	class:Comp_comm_group_mgt_node
triangle	CoR/delaunay_voronoi.h	/^        Triangle *triangle; \/* the triangle which is composed by this edge and its next_edge_in_triangle and prev_edge_in_triangle *\/$/;"	m	class:Edge
triangle_pool	CoR/delaunay_voronoi.h	/^        vector<Triangle*> triangle_pool;$/;"	m	class:Delaunay_Voronoi
triangularization_process	CoR/delaunay_voronoi.cxx	/^void Delaunay_Voronoi::triangularization_process(Triangle *triangle, bool is_global_grid)$/;"	f	class:Delaunay_Voronoi
true_dst_comp_full_name	Parallel_MGT/routing_info_mgt.h	/^        char true_dst_comp_full_name[NAME_STR_SIZE];$/;"	m	class:Routing_info
true_dst_field_instance	Runtime_MGT/runtime_remap_algorithm.h	/^        Field_mem_info *true_dst_field_instance;$/;"	m	class:Runtime_remap_algorithm
true_src_field_instance	Runtime_MGT/runtime_remap_algorithm.h	/^        Field_mem_info *true_src_field_instance;$/;"	m	class:Runtime_remap_algorithm
twin_edge	CoR/delaunay_voronoi.h	/^        Edge *twin_edge;            \/* the twin_edge edge, whose tail is the head of this edge and head is the tail of this edge *\/$/;"	m	class:Edge
two_bounding_boxes_have_overlap	CoR/remap_operator_c_interface.cxx	/^bool two_bounding_boxes_have_overlap(double *bounding_box1, double *bounding_box2, int num_grid_dimensions)$/;"	f
two_cells_have_common_bound	CoR/remap_operator_grid.cxx	/^bool Remap_operator_grid::two_cells_have_common_bound(long cell_id1, $/;"	f	class:Remap_operator_grid
type	XML/tinyxml.h	/^	NodeType		type;$/;"	m	class:TiXmlNode
type_id	Runtime_MGT/remapping_configuration_mgt.h	/^        int type_id;$/;"	m	class:Remapping_algorithm_specification
union_comm	Runtime_MGT/coupling_generator.h	/^        MPI_Comm union_comm;$/;"	m	class:Coupling_connection
union_comm	Runtime_MGT/runtime_trans_algorithm.h	/^        MPI_Comm union_comm;$/;"	m	class:Runtime_trans_algorithm
unique_comp_id_indx	Parallel_MGT/compset_communicators_info_mgt.h	/^        int unique_comp_id_indx;$/;"	m	class:Comp_comm_group_mgt_mgr
unit	Runtime_MGT/coupling_generator.h	/^    char unit[NAME_STR_SIZE];$/;"	m	struct:Interface_field_info
unit_behavior	Parallel_MGT/performance_timing_mgt.h	/^        int unit_behavior;$/;"	m	class:Performance_timing_unit
unit_char_keyword	Parallel_MGT/performance_timing_mgt.h	/^        char unit_char_keyword[256];$/;"	m	class:Performance_timing_unit
unit_int_keyword	Parallel_MGT/performance_timing_mgt.h	/^        int unit_int_keyword;$/;"	m	class:Performance_timing_unit
unit_type	Parallel_MGT/performance_timing_mgt.h	/^        int unit_type;$/;"	m	class:Performance_timing_unit
unpack_MD_data	Runtime_MGT/runtime_trans_algorithm.cxx	/^void Runtime_trans_algorithm::unpack_MD_data(void *data_buf, int remote_proc_index, int field_index, void *field_data_buffer, int * offset)$/;"	f	class:Runtime_trans_algorithm
unpack_segment_data	Runtime_MGT/runtime_trans_algorithm.cxx	/^template <class T> void Runtime_trans_algorithm::unpack_segment_data(T *mpi_buf, T *field_data_buf, int segment_start, int segment_size, int field_2D_size, int num_lev, bool is_V1D_sub_grid_after_H2D_sub_grid)$/;"	f	class:Runtime_trans_algorithm
update	CoR/grid_cell_search.cxx	/^void H2D_grid_cell_search_engine::update(const bool *new_masks)$/;"	f	class:H2D_grid_cell_search_engine
update_child	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::update_child(const Comp_comm_group_mgt_node *child_old, Comp_comm_group_mgt_node *child_new)$/;"	f	class:Comp_comm_group_mgt_node
update_coord_values	CoR/delaunay_voronoi.cxx	/^void Point::update_coord_values(double lon, double lat)$/;"	f	class:Point
update_grid_center_3D_level_field_from_external	CoR/remap_grid_class.cxx	/^void Remap_grid_class::update_grid_center_3D_level_field_from_external()$/;"	f	class:Remap_grid_class
update_min_max_remote_lag_seconds	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::update_min_max_remote_lag_seconds(int remote_lag_seconds)$/;"	f	class:Comp_comm_group_mgt_node
update_operator_grid_data	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::update_operator_grid_data()$/;"	f	class:Remap_operator_grid
update_unique_weight_sparse_matrix	CoR/remap_operator_basis.cxx	/^void Remap_operator_basis::update_unique_weight_sparse_matrix(Remap_weight_sparse_matrix *new_sparse_matrix)$/;"	f	class:Remap_operator_basis
usage_tag	Data_MGT/memory_mgt.h	/^        int usage_tag;$/;"	m	class:Field_mem_info
useMicrosoftBOM	XML/tinyxml.h	/^	bool useMicrosoftBOM;		\/\/ the UTF-8 BOM were found when read. Note this, and try to write.$/;"	m	class:TiXmlDocument
use_exponent_coordinate	CoR/remap_operator_1D_basis.h	/^        bool use_exponent_coordinate;$/;"	m	class:Remap_operator_1D_basis
use_field_values	Data_MGT/memory_mgt.cxx	/^void Field_mem_info::use_field_values(const char *annotation)$/;"	f	class:Field_mem_info
use_logarithmic_coordinate	CoR/remap_operator_1D_basis.h	/^        bool use_logarithmic_coordinate;$/;"	m	class:Remap_operator_1D_basis
useful_src_cells_global_index	CoR/remap_operator_1D_basis.h	/^        int *useful_src_cells_global_index;$/;"	m	class:Remap_operator_1D_basis
userData	XML/tinyxml.h	/^	void*			userData;$/;"	m	class:TiXmlBase
using_V3D_level_coord	CoR/remap_grid_class.h	/^		bool using_V3D_level_coord;$/;"	m	class:Remap_grid_class
using_rotated_grid_data	CoR/remap_operator_c_interface.cxx	/^bool using_rotated_grid_data;$/;"	v
utf8ByteTable	XML/tinyxml.h	/^	static const int utf8ByteTable[256];$/;"	m	class:TiXmlBase
utf8ByteTable	XML/tinyxmlparser.cxx	/^const int TiXmlBase::utf8ByteTable[256] = $/;"	m	class:TiXmlBase	file:
v	CoR/delaunay_voronoi.h	/^        Point *v[3];    \/* vertexes of triangle *\/$/;"	m	class:Triangle
value	Utils/dictionary.h	/^    T value;$/;"	m	struct:Dictionary_node
value	XML/tinyxml.h	/^	TIXML_STRING	value;$/;"	m	class:TiXmlNode
value	XML/tinyxml.h	/^	TIXML_STRING value;$/;"	m	class:TiXmlAttribute
version	XML/tinyxml.h	/^	TIXML_STRING version;$/;"	m	class:TiXmlDeclaration
vertex_coord_values	CoR/remap_operator_grid.h	/^        double *vertex_coord_values[256];$/;"	m	class:Remap_operator_grid
vertex_coord_values	CoR/remap_operator_grid.h	/^        double *vertex_coord_values[256];$/;"	m	class:Vertex_values_group
vertex_lats	CoR/grid_cell_search.h	/^        double *vertex_lats;$/;"	m	class:H2D_grid_cell_search_cell
vertex_lons	CoR/grid_cell_search.h	/^        double *vertex_lons;$/;"	m	class:H2D_grid_cell_search_cell
vertex_values_groups	CoR/remap_operator_grid.h	/^        Vertex_values_group *vertex_values_groups[256];$/;"	m	class:Remap_operator_grid
vertex_x	CoR/grid_cell_search.h	/^        double *vertex_x;$/;"	m	struct:H2D_grid_cell_cartesian_coord
vertex_y	CoR/grid_cell_search.h	/^        double *vertex_y;$/;"	m	struct:H2D_grid_cell_cartesian_coord
vertex_z	CoR/grid_cell_search.h	/^        double *vertex_z;$/;"	m	struct:H2D_grid_cell_cartesian_coord
vertexes_lats	CoR/delaunay_voronoi.h	/^    vector<double> vertexes_lats;$/;"	m	struct:Cell
vertexes_lons	CoR/delaunay_voronoi.h	/^    vector<double> vertexes_lons;$/;"	m	struct:Cell
visit_cell	CoR/remap_operator_grid.cxx	/^void Remap_operator_grid::visit_cell(long cell_index)$/;"	f	class:Remap_operator_grid
visited	CoR/delaunay_voronoi.h	/^        bool visited;$/;"	m	class:Triangle
visited_cells_indexes	CoR/remap_operator_grid.h	/^        long *visited_cells_indexes;$/;"	m	class:Remap_operator_grid
weight_arrays_size	CoR/remap_weight_sparse_matrix.h	/^        long weight_arrays_size;$/;"	m	class:Remap_weight_sparse_matrix
weight_values	CoR/remap_weight_sparse_matrix.h	/^        double *weight_values;$/;"	m	class:Remap_weight_sparse_matrix
weigt_values_of_one_dst_cell	CoR/remap_operator_bilinear.h	/^        double *weigt_values_of_one_dst_cell;$/;"	m	class:Remap_operator_bilinear
weigt_values_of_one_dst_cell	CoR/remap_operator_distwgt.h	/^        double *weigt_values_of_one_dst_cell;$/;"	m	class:Remap_operator_distwgt
wgt_file_name	Runtime_MGT/remapping_configuration_mgt.h	/^        const char *wgt_file_name;$/;"	m	class:H2D_remapping_wgt_file_info
wgts_dst_indexes	Runtime_MGT/remapping_configuration_mgt.h	/^        long *wgts_dst_indexes;$/;"	m	class:H2D_remapping_wgt_file_info
wgts_src_indexes	Runtime_MGT/remapping_configuration_mgt.h	/^        long *wgts_src_indexes;$/;"	m	class:H2D_remapping_wgt_file_info
wgts_values	Runtime_MGT/remapping_configuration_mgt.h	/^        double *wgts_values;$/;"	m	class:H2D_remapping_wgt_file_info
whole_grid	CoR/remap_grid_class.h	/^        Remap_grid_class *whole_grid;$/;"	m	class:Remap_grid_class
words_are_the_same	CoR/remap_common_utils.cxx	/^bool words_are_the_same(const char *word1, const char *word2)$/;"	f
working_dir	Parallel_MGT/compset_communicators_info_mgt.h	/^        char working_dir[NAME_STR_SIZE];$/;"	m	class:Comp_comm_group_mgt_node
write_comp_export_info_into_XML_file	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::write_comp_export_info_into_XML_file(int comp_id)$/;"	f	class:Inout_interface_mgt
write_connection_fields_info_into_array	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::write_connection_fields_info_into_array(Inout_interface *inout_interface, char **array, long &buffer_max_size, long &buffer_content_size, Coupling_timer **timer, int &inst_or_aver, int &time_step_in_second, $/;"	f	class:Coupling_connection
write_data_into_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::write_data_into_array(void *data, int data_size, char **array, long &current_array_size, long &max_array_size)$/;"	f	class:Remap_weight_of_strategy_class
write_data_into_array_buffer	Utils/common_utils.cxx	/^void write_data_into_array_buffer(const void *data, long data_size, char **temp_array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f
write_export_info_into_XML_file	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::write_export_info_into_XML_file(TiXmlElement *parent_element)$/;"	f	class:Inout_interface
write_field_data	CoR/io_binary.cxx	/^void IO_binary::write_field_data(Remap_grid_data_class *field_data, $/;"	f	class:IO_binary
write_field_data	CoR/io_netcdf.cxx	/^void IO_netcdf::write_field_data(Remap_grid_data_class *field_data, $/;"	f	class:IO_netcdf
write_field_info_into_array	Runtime_MGT/coupling_generator.cxx	/^void Coupling_connection::write_field_info_into_array(Field_mem_info *field, char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Coupling_connection
write_grid	CoR/io_binary.cxx	/^void IO_binary::write_grid(Remap_grid_class *associated_grid, bool write_grid_name, bool use_scrip_format)$/;"	f	class:IO_binary
write_grid	CoR/io_netcdf.cxx	/^void IO_netcdf::write_grid(Remap_grid_class *associated_grid, bool write_grid_name, bool use_script_format)$/;"	f	class:IO_netcdf
write_grid_data_into_array	CoR/remap_grid_data_class.cxx	/^void Remap_grid_data_class::write_grid_data_into_array(char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Remap_grid_data_class
write_grid_field_into_array	CoR/remap_grid_class.cxx	/^void Remap_grid_class::write_grid_field_into_array(Remap_grid_data_class *grid_field, char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Remap_grid_class
write_grid_info_into_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::write_grid_info_into_array(Remap_grid_class *grid, bool consider_area_or_volumn, char **array, long &current_array_size, long &max_array_size)$/;"	f	class:Remap_weight_of_strategy_class
write_grid_into_array	CoR/remap_grid_class.cxx	/^void Remap_grid_class::write_grid_into_array(char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Remap_grid_class
write_grid_into_array	Data_MGT/original_grid_mgt.cxx	/^void Original_grid_info::write_grid_into_array(char **temp_array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Original_grid_info
write_grid_name	Data_MGT/IO_field_mgt.h	/^        bool write_grid_name;$/;"	m	class:IO_output_procedure
write_grid_name_into_array	CoR/remap_grid_class.cxx	/^void Remap_grid_class::write_grid_name_into_array(Remap_grid_class *grid, char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Remap_grid_class
write_grided_data	CoR/io_binary.cxx	/^void IO_binary::write_grided_data(Remap_grid_data_class *grided_data, bool write_grid_name, int date, int  datesec, bool is_restart_field)$/;"	f	class:IO_binary
write_grided_data	CoR/io_netcdf.cxx	/^void IO_netcdf::write_grided_data(Remap_grid_data_class *grided_data, bool write_grid_name, int date, int datesec, bool is_restart_field)$/;"	f	class:IO_netcdf
write_into_restart_buffers	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface_mgt::write_into_restart_buffers(int comp_id)$/;"	f	class:Inout_interface_mgt
write_node_into_XML	Parallel_MGT/compset_communicators_info_mgt.cxx	/^void Comp_comm_group_mgt_node::write_node_into_XML(TiXmlElement *parent_element)$/;"	f	class:Comp_comm_group_mgt_node
write_overall_H2D_remapping_weights	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::write_overall_H2D_remapping_weights(int comp_id)$/;"	f	class:Remap_weight_of_strategy_class
write_overall_remapping_weights	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_operator_class::write_overall_remapping_weights(int comp_id)$/;"	f	class:Remap_weight_of_operator_class
write_remap_weights	CoR/io_binary.cxx	/^void IO_binary::write_remap_weights(Remap_weight_of_strategy_class *remap_weights)$/;"	f	class:IO_binary
write_remap_weights	CoR/io_netcdf.cxx	/^void IO_netcdf::write_remap_weights(Remap_weight_of_strategy_class *remap_weights)$/;"	f	class:IO_netcdf
write_remap_weights_into_array	CoR/remap_weight_of_strategy_class.cxx	/^void Remap_weight_of_strategy_class::write_remap_weights_into_array(char **array, long &array_size, bool write_grid)$/;"	f	class:Remap_weight_of_strategy_class
write_remapping_algorithm_specification_into_array	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_algorithm_specification::write_remapping_algorithm_specification_into_array(char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Remapping_algorithm_specification
write_remapping_setting_into_array	Runtime_MGT/remapping_configuration_mgt.cxx	/^void Remapping_setting::write_remapping_setting_into_array(char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Remapping_setting
write_remapping_wgt_file_info_into_array	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_info::write_remapping_wgt_file_info_into_array(char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:H2D_remapping_wgt_file_info
write_remapping_wgt_files_info_into_array	Runtime_MGT/remapping_configuration_mgt.cxx	/^void H2D_remapping_wgt_file_mgt::write_remapping_wgt_files_info_into_array(char **array, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:H2D_remapping_wgt_file_mgt
write_restart_field_data	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::write_restart_field_data(Field_mem_info *field_instance, const char *interface_name, const char*label, bool use_time_info)$/;"	f	class:Restart_mgt
write_restart_mgt_info	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_coupling_procedure::write_restart_mgt_info(Restart_buffer_container *restart_buffer)$/;"	f	class:Connection_coupling_procedure
write_restart_mgt_info	Runtime_MGT/inout_interface_mgt.cxx	/^void Connection_field_time_info::write_restart_mgt_info(Restart_buffer_container *restart_buffer)$/;"	f	class:Connection_field_time_info
write_restart_mgt_info	Runtime_MGT/inout_interface_mgt.cxx	/^void Inout_interface::write_restart_mgt_info(Restart_buffer_container *restart_buffer)$/;"	f	class:Inout_interface
write_restart_mgt_into_file	Data_MGT/restart_mgt.cxx	/^void Restart_mgt::write_restart_mgt_into_file()$/;"	f	class:Restart_mgt
write_string_into_array_buffer	Utils/common_utils.cxx	/^void write_string_into_array_buffer(const char *full_string, long array_size, char **temp_array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f
write_time_mgt_into_array	Driver/timer_mgt.cxx	/^void Time_mgt::write_time_mgt_into_array(char **array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Time_mgt
write_timer_into_array	Driver/timer_mgt.cxx	/^void Coupling_timer::write_timer_into_array(char **array_buffer, long &buffer_max_size, long &buffer_content_size)$/;"	f	class:Coupling_timer
wtime	Utils/execution_report.cxx	/^void wtime(double *t)$/;"	f
x	CoR/delaunay_voronoi.h	/^        double x;    $/;"	m	class:Point
y	CoR/delaunay_voronoi.h	/^        double y;$/;"	m	class:Point
z	CoR/delaunay_voronoi.h	/^        double z;$/;"	m	class:Point
~Annotation_mgt	Utils/annotation_mgt.cxx	/^Annotation_mgt::~Annotation_mgt()$/;"	f	class:Annotation_mgt
~Comp_comm_group_mgt_mgr	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_mgr::~Comp_comm_group_mgt_mgr()$/;"	f	class:Comp_comm_group_mgt_mgr
~Comp_comm_group_mgt_node	Parallel_MGT/compset_communicators_info_mgt.cxx	/^Comp_comm_group_mgt_node::~Comp_comm_group_mgt_node()$/;"	f	class:Comp_comm_group_mgt_node
~Component_IO_output_procedures	Data_MGT/IO_field_mgt.cxx	/^Component_IO_output_procedures::~Component_IO_output_procedures()$/;"	f	class:Component_IO_output_procedures
~Component_import_interfaces_configuration	Runtime_MGT/coupling_generator.cxx	/^Component_import_interfaces_configuration::~Component_import_interfaces_configuration()$/;"	f	class:Component_import_interfaces_configuration
~Components_IO_output_procedures_mgt	Data_MGT/IO_field_mgt.cxx	/^Components_IO_output_procedures_mgt::~Components_IO_output_procedures_mgt()$/;"	f	class:Components_IO_output_procedures_mgt
~Components_time_mgt	Driver/timer_mgt.cxx	/^Components_time_mgt::~Components_time_mgt()$/;"	f	class:Components_time_mgt
~Connection_coupling_procedure	Runtime_MGT/inout_interface_mgt.cxx	/^Connection_coupling_procedure::~Connection_coupling_procedure()$/;"	f	class:Connection_coupling_procedure
~Coupling_connection	Runtime_MGT/coupling_generator.cxx	/^Coupling_connection::~Coupling_connection()$/;"	f	class:Coupling_connection
~Coupling_generator	Runtime_MGT/coupling_generator.cxx	/^Coupling_generator::~Coupling_generator()$/;"	f	class:Coupling_generator
~Coupling_timer	Driver/timer_mgt.cxx	/^Coupling_timer::~Coupling_timer()$/;"	f	class:Coupling_timer
~Decomp_grid_info	Parallel_MGT/decomp_grid_mgt.cxx	/^Decomp_grid_info::~Decomp_grid_info()$/;"	f	class:Decomp_grid_info
~Decomp_grid_mgt	Parallel_MGT/decomp_grid_mgt.cxx	/^Decomp_grid_mgt::~Decomp_grid_mgt()$/;"	f	class:Decomp_grid_mgt
~Decomp_info	Parallel_MGT/decomp_info_mgt.cxx	/^Decomp_info::~Decomp_info()$/;"	f	class:Decomp_info
~Decomp_info_mgt	Parallel_MGT/decomp_info_mgt.cxx	/^Decomp_info_mgt::~Decomp_info_mgt()$/;"	f	class:Decomp_info_mgt
~Delaunay_Voronoi	CoR/delaunay_voronoi.cxx	/^Delaunay_Voronoi::~Delaunay_Voronoi()$/;"	f	class:Delaunay_Voronoi
~Dictionary	Utils/dictionary.h	/^Dictionary<T>::~Dictionary()$/;"	f	class:Dictionary
~Edge	CoR/delaunay_voronoi.cxx	/^Edge::~Edge()$/;"	f	class:Edge
~Ensemble_mgt	Runtime_MGT/ensemble_mgt.h	/^        ~Ensemble_mgt() {}$/;"	f	class:Ensemble_mgt
~Field_info_mgt	Data_MGT/field_info_mgt.h	/^    ~Field_info_mgt() {}$/;"	f	class:Field_info_mgt
~Field_mem_info	Data_MGT/memory_mgt.cxx	/^Field_mem_info::~Field_mem_info()$/;"	f	class:Field_mem_info
~Fields_gather_scatter_mgt	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Fields_gather_scatter_mgt::~Fields_gather_scatter_mgt()$/;"	f	class:Fields_gather_scatter_mgt
~Gather_scatter_rearrange_info	Parallel_MGT/fields_gather_scatter_mgt.cxx	/^Gather_scatter_rearrange_info::~Gather_scatter_rearrange_info()$/;"	f	class:Gather_scatter_rearrange_info
~H2D_grid_cell_cartesian_coord	CoR/grid_cell_search.cxx	/^H2D_grid_cell_cartesian_coord::~H2D_grid_cell_cartesian_coord()$/;"	f	class:H2D_grid_cell_cartesian_coord
~H2D_grid_cell_search_cell	CoR/grid_cell_search.cxx	/^H2D_grid_cell_search_cell::~H2D_grid_cell_search_cell()$/;"	f	class:H2D_grid_cell_search_cell
~H2D_grid_cell_search_engine	CoR/grid_cell_search.cxx	/^H2D_grid_cell_search_engine::~H2D_grid_cell_search_engine()$/;"	f	class:H2D_grid_cell_search_engine
~H2D_grid_cell_search_tile	CoR/grid_cell_search.cxx	/^H2D_grid_cell_search_tile::~H2D_grid_cell_search_tile()$/;"	f	class:H2D_grid_cell_search_tile
~H2D_remapping_wgt_file_container	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_container::~H2D_remapping_wgt_file_container()$/;"	f	class:H2D_remapping_wgt_file_container
~H2D_remapping_wgt_file_info	Runtime_MGT/remapping_configuration_mgt.cxx	/^H2D_remapping_wgt_file_info::~H2D_remapping_wgt_file_info()$/;"	f	class:H2D_remapping_wgt_file_info
~H2D_remapping_wgt_file_mgt	Runtime_MGT/remapping_configuration_mgt.h	/^        ~H2D_remapping_wgt_file_mgt() {}        $/;"	f	class:H2D_remapping_wgt_file_mgt
~IO_basis	CoR/io_basis.h	/^        ~IO_basis(){}$/;"	f	class:IO_basis
~IO_binary	CoR/io_binary.cxx	/^IO_binary::~IO_binary()$/;"	f	class:IO_binary
~IO_field	Data_MGT/IO_field_mgt.h	/^        ~IO_field() {}$/;"	f	class:IO_field
~IO_field_mgt	Data_MGT/IO_field_mgt.cxx	/^IO_field_mgt::~IO_field_mgt()$/;"	f	class:IO_field_mgt
~IO_mgt	CoR/io_mgt.cxx	/^IO_mgt::~IO_mgt()$/;"	f	class:IO_mgt
~IO_netcdf	CoR/io_netcdf.cxx	/^IO_netcdf::~IO_netcdf()$/;"	f	class:IO_netcdf
~IO_output_procedure	Data_MGT/IO_field_mgt.cxx	/^IO_output_procedure::~IO_output_procedure()$/;"	f	class:IO_output_procedure
~Import_direction_setting	Runtime_MGT/coupling_generator.cxx	/^Import_direction_setting::~Import_direction_setting()$/;"	f	class:Import_direction_setting
~Import_interface_configuration	Runtime_MGT/coupling_generator.cxx	/^Import_interface_configuration::~Import_interface_configuration()$/;"	f	class:Import_interface_configuration
~Inout_interface	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface::~Inout_interface()$/;"	f	class:Inout_interface
~Inout_interface_mgt	Runtime_MGT/inout_interface_mgt.cxx	/^Inout_interface_mgt::~Inout_interface_mgt()$/;"	f	class:Inout_interface_mgt
~Memory_mgt	Data_MGT/memory_mgt.cxx	/^Memory_mgt::~Memory_mgt()$/;"	f	class:Memory_mgt
~Original_grid_info	Data_MGT/original_grid_mgt.cxx	/^Original_grid_info::~Original_grid_info()$/;"	f	class:Original_grid_info
~Original_grid_mgt	Data_MGT/original_grid_mgt.cxx	/^Original_grid_mgt::~Original_grid_mgt()$/;"	f	class:Original_grid_mgt
~Performance_timing_mgt	Parallel_MGT/performance_timing_mgt.cxx	/^Performance_timing_mgt::~Performance_timing_mgt()$/;"	f	class:Performance_timing_mgt
~Performance_timing_unit	Parallel_MGT/performance_timing_mgt.h	/^        ~Performance_timing_unit(){}$/;"	f	class:Performance_timing_unit
~Point	CoR/delaunay_voronoi.h	/^        ~Point() {}$/;"	f	class:Point
~Radix_sort	CoR/radix_sort.h	/^template <class T1, class T2> Radix_sort<T1,T2>::~Radix_sort()$/;"	f	class:Radix_sort
~Remap_data_field	CoR/remap_statement_operand.cxx	/^Remap_data_field::~Remap_data_field()$/;"	f	class:Remap_data_field
~Remap_field_data_mgt	CoR/remap_grid_data_mgt.cxx	/^Remap_field_data_mgt::~Remap_field_data_mgt()$/;"	f	class:Remap_field_data_mgt
~Remap_grid_class	CoR/remap_grid_class.cxx	/^Remap_grid_class::~Remap_grid_class()$/;"	f	class:Remap_grid_class
~Remap_grid_data_class	CoR/remap_grid_data_class.cxx	/^Remap_grid_data_class::~Remap_grid_data_class()$/;"	f	class:Remap_grid_data_class
~Remap_grid_mgt	CoR/remap_grid_mgt.cxx	/^Remap_grid_mgt::~Remap_grid_mgt()$/;"	f	class:Remap_grid_mgt
~Remap_mgt	CoR/remap_mgt.cxx	/^Remap_mgt::~Remap_mgt()$/;"	f	class:Remap_mgt
~Remap_operator_1D_basis	CoR/remap_operator_1D_basis.cxx	/^Remap_operator_1D_basis::~Remap_operator_1D_basis()$/;"	f	class:Remap_operator_1D_basis
~Remap_operator_basis	CoR/remap_operator_basis.cxx	/^Remap_operator_basis::~Remap_operator_basis()$/;"	f	class:Remap_operator_basis
~Remap_operator_bilinear	CoR/remap_operator_bilinear.cxx	/^Remap_operator_bilinear::~Remap_operator_bilinear()$/;"	f	class:Remap_operator_bilinear
~Remap_operator_conserv_2D	CoR/remap_operator_conserv_2D.h	/^        ~Remap_operator_conserv_2D() {}$/;"	f	class:Remap_operator_conserv_2D
~Remap_operator_distwgt	CoR/remap_operator_distwgt.cxx	/^Remap_operator_distwgt::~Remap_operator_distwgt()$/;"	f	class:Remap_operator_distwgt
~Remap_operator_grid	CoR/remap_operator_grid.cxx	/^Remap_operator_grid::~Remap_operator_grid()$/;"	f	class:Remap_operator_grid
~Remap_operator_linear	CoR/remap_operator_linear.cxx	/^Remap_operator_linear::~Remap_operator_linear()$/;"	f	class:Remap_operator_linear
~Remap_operator_mgt	CoR/remap_operator_mgt.cxx	/^Remap_operator_mgt::~Remap_operator_mgt()$/;"	f	class:Remap_operator_mgt
~Remap_operator_regrid	CoR/remap_operator_regrid.h	/^        ~Remap_operator_regrid() {}$/;"	f	class:Remap_operator_regrid
~Remap_operator_smooth	CoR/remap_operator_smooth.h	/^        ~Remap_operator_smooth() {}$/;"	f	class:Remap_operator_smooth
~Remap_operator_spline_1D	CoR/remap_operator_spline_1D.cxx	/^Remap_operator_spline_1D::~Remap_operator_spline_1D()$/;"	f	class:Remap_operator_spline_1D
~Remap_parser	CoR/remap_parser.cxx	/^Remap_parser::~Remap_parser()$/;"	f	class:Remap_parser
~Remap_strategy_class	CoR/remap_strategy_class.h	/^        ~Remap_strategy_class() {}$/;"	f	class:Remap_strategy_class
~Remap_strategy_mgt	CoR/remap_strategy_mgt.cxx	/^Remap_strategy_mgt::~Remap_strategy_mgt()$/;"	f	class:Remap_strategy_mgt
~Remap_weight_of_operator_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_class::~Remap_weight_of_operator_class()$/;"	f	class:Remap_weight_of_operator_class
~Remap_weight_of_operator_instance_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_operator_instance_class::~Remap_weight_of_operator_instance_class()$/;"	f	class:Remap_weight_of_operator_instance_class
~Remap_weight_of_operator_mgt	CoR/remap_weight_of_strategy_mgt.cxx	/^Remap_weight_of_operator_mgt::~Remap_weight_of_operator_mgt()$/;"	f	class:Remap_weight_of_operator_mgt
~Remap_weight_of_strategy_class	CoR/remap_weight_of_strategy_class.cxx	/^Remap_weight_of_strategy_class::~Remap_weight_of_strategy_class()$/;"	f	class:Remap_weight_of_strategy_class
~Remap_weight_of_strategy_mgt	CoR/remap_weight_of_strategy_mgt.cxx	/^Remap_weight_of_strategy_mgt::~Remap_weight_of_strategy_mgt()$/;"	f	class:Remap_weight_of_strategy_mgt
~Remap_weight_sparse_matrix	CoR/remap_weight_sparse_matrix.cxx	/^Remap_weight_sparse_matrix::~Remap_weight_sparse_matrix()$/;"	f	class:Remap_weight_sparse_matrix
~Remapping_algorithm_specification	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_algorithm_specification::~Remapping_algorithm_specification()$/;"	f	class:Remapping_algorithm_specification
~Remapping_configuration	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_configuration::~Remapping_configuration()$/;"	f	class:Remapping_configuration
~Remapping_configuration_mgt	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_configuration_mgt::~Remapping_configuration_mgt()$/;"	f	class:Remapping_configuration_mgt
~Remapping_setting	Runtime_MGT/remapping_configuration_mgt.cxx	/^Remapping_setting::~Remapping_setting()$/;"	f	class:Remapping_setting
~Restart_buffer_container	Data_MGT/restart_mgt.h	/^        ~Restart_buffer_container() { delete [] buffer_content; }        $/;"	f	class:Restart_buffer_container
~Restart_mgt	Data_MGT/restart_mgt.cxx	/^Restart_mgt::~Restart_mgt()$/;"	f	class:Restart_mgt
~Routing_info	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info::~Routing_info()$/;"	f	class:Routing_info
~Routing_info_mgt	Parallel_MGT/routing_info_mgt.cxx	/^Routing_info_mgt::~Routing_info_mgt()$/;"	f	class:Routing_info_mgt
~Runtime_algorithm_basis	Runtime_MGT/Runtime_Algorithm_Basis.cxx	/^Runtime_algorithm_basis::~Runtime_algorithm_basis()$/;"	f	class:Runtime_algorithm_basis
~Runtime_cumulate_average_algorithm	Runtime_MGT/runtime_cumulate_average_algorithm.cxx	/^Runtime_cumulate_average_algorithm::~Runtime_cumulate_average_algorithm()$/;"	f	class:Runtime_cumulate_average_algorithm
~Runtime_datatype_transformer	Runtime_MGT/runtime_datatype_transformer.h	/^        ~Runtime_datatype_transformer() {}$/;"	f	class:Runtime_datatype_transformer
~Runtime_remap_algorithm	Runtime_MGT/runtime_remap_algorithm.cxx	/^Runtime_remap_algorithm::~Runtime_remap_algorithm()$/;"	f	class:Runtime_remap_algorithm
~Runtime_remap_function	CoR/runtime_remap_function.cxx	/^Runtime_remap_function::~Runtime_remap_function()$/;"	f	class:Runtime_remap_function
~Runtime_remapping_weights	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^Runtime_remapping_weights::~Runtime_remapping_weights()$/;"	f	class:Runtime_remapping_weights
~Runtime_remapping_weights_mgt	Runtime_MGT/runtime_remapping_weights_mgt.cxx	/^Runtime_remapping_weights_mgt::~Runtime_remapping_weights_mgt()$/;"	f	class:Runtime_remapping_weights_mgt
~Runtime_trans_algorithm	Runtime_MGT/runtime_trans_algorithm.cxx	/^Runtime_trans_algorithm::~Runtime_trans_algorithm()$/;"	f	class:Runtime_trans_algorithm
~TiXmlAttributeSet	XML/tinyxml.cxx	/^TiXmlAttributeSet::~TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
~TiXmlBase	XML/tinyxml.h	/^	virtual ~TiXmlBase()			{}$/;"	f	class:TiXmlBase
~TiXmlComment	XML/tinyxml.h	/^	virtual ~TiXmlComment()	{}$/;"	f	class:TiXmlComment
~TiXmlDeclaration	XML/tinyxml.h	/^	virtual ~TiXmlDeclaration()	{}$/;"	f	class:TiXmlDeclaration
~TiXmlDocument	XML/tinyxml.h	/^	virtual ~TiXmlDocument() {}$/;"	f	class:TiXmlDocument
~TiXmlElement	XML/tinyxml.cxx	/^TiXmlElement::~TiXmlElement()$/;"	f	class:TiXmlElement
~TiXmlNode	XML/tinyxml.cxx	/^TiXmlNode::~TiXmlNode()$/;"	f	class:TiXmlNode
~TiXmlString	XML/tinystr.h	/^	~TiXmlString ()$/;"	f	class:TiXmlString
~TiXmlText	XML/tinyxml.h	/^	virtual ~TiXmlText() {}$/;"	f	class:TiXmlText
~TiXmlUnknown	XML/tinyxml.h	/^	virtual ~TiXmlUnknown() {}$/;"	f	class:TiXmlUnknown
~TiXmlVisitor	XML/tinyxml.h	/^	virtual ~TiXmlVisitor() {}$/;"	f	class:TiXmlVisitor
~Time_mgt	Driver/timer_mgt.cxx	/^Time_mgt::~Time_mgt()$/;"	f	class:Time_mgt
~Timer_mgt	Driver/timer_mgt.cxx	/^Timer_mgt::~Timer_mgt()$/;"	f	class:Timer_mgt
~Triangle	CoR/delaunay_voronoi.cxx	/^Triangle::~Triangle()$/;"	f	class:Triangle
~Vertex_values_group	CoR/remap_operator_grid.cxx	/^Vertex_values_group::~Vertex_values_group()$/;"	f	class:Vertex_values_group
