!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AVSharedIndices	m_AttrVect.F90	/^    type AVSharedIndices$/;"	t	module:m_AttrVect
AVSharedIndicesOneType	m_AttrVect.F90	/^    type AVSharedIndicesOneType$/;"	t	module:m_AttrVect
Accumulator	m_Accumulator.F90	/^    Type Accumulator$/;"	t	module:m_Accumulator
AllReduce_	m_AttrVectReduce.F90	/^ subroutine AllReduce_(/;"	s	module:m_AttrVectReduce
AttrVect	m_AttrVect.F90	/^    type AttrVect$/;"	t	module:m_AttrVect
AttrVectMAX	m_AttrVectReduce.F90	/^    integer, parameter :: AttrVectMAX /;"	v	module:m_AttrVectReduce
AttrVectMIN	m_AttrVectReduce.F90	/^    integer, parameter :: AttrVectMIN /;"	v	module:m_AttrVectReduce
AttrVectSUM	m_AttrVectReduce.F90	/^    integer, parameter :: AttrVectSUM /;"	v	module:m_AttrVectReduce
Bcast_	m_SparseMatrixComms.F90	/^ subroutine Bcast_(/;"	s	module:m_SparseMatrixComms
ByColumnGSMap_	m_SparseMatrixDecomp.F90	/^ subroutine ByColumnGSMap_(/;"	s	module:m_SparseMatrixDecomp
ByRowGSMap_	m_SparseMatrixDecomp.F90	/^ subroutine ByRowGSMap_(/;"	s	module:m_SparseMatrixDecomp
CheckBounds_	m_SparseMatrix.F90	/^ subroutine CheckBounds_(/;"	s	module:m_SparseMatrix
ComponentIDIndex	m_ExchangeMaps.F90	/^  integer, parameter :: ComponentIDIndex /;"	v	module:m_ExchangeMaps
ComponentNumProcs_	m_MCTWorld.F90	/^ integer function ComponentNumProcs_(/;"	f	module:m_MCTWorld
ComponentRootRank_	m_MCTWorld.F90	/^ integer function ComponentRootRank_(/;"	f	module:m_MCTWorld
ComponentToWorldRank_	m_MCTWorld.F90	/^ integer function ComponentToWorldRank_(/;"	f	module:m_MCTWorld
ComputeSegments_	m_SparseMatrixDecomp.F90	/^ subroutine ComputeSegments_(/;"	s	module:m_SparseMatrixDecomp
ComputeSegments_	m_SparseMatrixToMaps.F90	/^ subroutine ComputeSegments_(/;"	s	module:m_SparseMatrixToMaps
ComputeSparsityDP_	m_SparseMatrix.F90	/^ subroutine ComputeSparsityDP_(/;"	s	module:m_SparseMatrix
ComputeSparsitySP_	m_SparseMatrix.F90	/^ subroutine ComputeSparsitySP_(/;"	s	module:m_SparseMatrix
Copy_	m_AttrVect.F90	/^ subroutine Copy_(/;"	s	module:m_AttrVect
Copy_	m_SparseMatrix.F90	/^ subroutine Copy_(/;"	s	module:m_SparseMatrix
DefaultTag	m_Rearranger.F90	/^  integer,parameter                    :: DefaultTag /;"	v	module:m_Rearranger
DefaultTag	m_SparseMatrixPlus.F90	/^      integer,parameter                    :: DefaultTag /;"	v	module:m_SparseMatrixPlus
DefaultTag	m_Transfer.F90	/^  integer,parameter		       :: DefaultTag /;"	v	module:m_Transfer
ExGMapGSMap_	m_ExchangeMaps.F90	/^ subroutine ExGMapGSMap_(/;"	s	module:m_ExchangeMaps
ExGSMapGSMap_	m_ExchangeMaps.F90	/^ subroutine ExGSMapGSMap_(/;"	s	module:m_ExchangeMaps
GM_gather_	m_AccumulatorComms.F90	/^ subroutine GM_gather_(/;"	s	module:m_AccumulatorComms
GM_gather_	m_AttrVectComms.F90	/^ subroutine GM_gather_(/;"	s	module:m_AttrVectComms
GM_gather_	m_GeneralGridComms.F90	/^ subroutine GM_gather_(/;"	s	module:m_GeneralGridComms
GM_gather_	m_SparseMatrixComms.F90	/^ subroutine GM_gather_(/;"	s	module:m_SparseMatrixComms
GM_scatter_	m_AccumulatorComms.F90	/^ subroutine GM_scatter_(/;"	s	module:m_AccumulatorComms
GM_scatter_	m_AttrVectComms.F90	/^ subroutine GM_scatter_(/;"	s	module:m_AttrVectComms
GM_scatter_	m_GeneralGridComms.F90	/^ subroutine GM_scatter_(/;"	s	module:m_GeneralGridComms
GSM_gather_	m_AccumulatorComms.F90	/^ subroutine GSM_gather_(/;"	s	module:m_AccumulatorComms
GSM_gather_	m_AttrVectComms.F90	/^ subroutine GSM_gather_(/;"	s	module:m_AttrVectComms
GSM_gather_	m_GeneralGridComms.F90	/^ subroutine GSM_gather_(/;"	s	module:m_GeneralGridComms
GSM_gather_	m_SparseMatrixComms.F90	/^ subroutine GSM_gather_(/;"	s	module:m_SparseMatrixComms
GSM_scatter_	m_AccumulatorComms.F90	/^ subroutine GSM_scatter_(/;"	s	module:m_AccumulatorComms
GSM_scatter_	m_AttrVectComms.F90	/^ subroutine GSM_scatter_(/;"	s	module:m_AttrVectComms
GSM_scatter_	m_GeneralGridComms.F90	/^ subroutine GSM_scatter_(/;"	s	module:m_GeneralGridComms
GeneralGrid	m_GeneralGrid.F90	/^    Type GeneralGrid$/;"	t	module:m_GeneralGrid
GlobGridNum	m_GeneralGrid.F90	/^  character(len=*), parameter :: GlobGridNum=/;"	v	module:m_GeneralGrid
GlobalMap	m_GlobalMap.F90	/^    Type GlobalMap$/;"	t	module:m_GlobalMap
GlobalMapFlag	m_ExchangeMaps.F90	/^  integer, parameter :: GlobalMapFlag /;"	v	module:m_ExchangeMaps
GlobalMapToGlobalSegMap_	m_ConvertMaps.F90	/^ subroutine GlobalMapToGlobalSegMap_(/;"	s	module:m_ConvertMaps
GlobalMapToIndex_	m_GlobalToLocal.F90	/^ integer function GlobalMapToIndex_(/;"	f	module:m_GlobalToLocal
GlobalNumElements_	m_SparseMatrix.F90	/^ integer function GlobalNumElements_(/;"	f	module:m_SparseMatrix
GlobalReduce_	m_AttrVectReduce.F90	/^ subroutine GlobalReduce_(/;"	s	module:m_AttrVectReduce
GlobalSegMap	m_GlobalSegMap.F90	/^    type GlobalSegMap$/;"	t	module:m_GlobalSegMap
GlobalSegMapFlag	m_ExchangeMaps.F90	/^  integer, parameter :: GlobalSegMapFlag /;"	v	module:m_ExchangeMaps
GlobalSegMapToGlobalMap_	m_ConvertMaps.F90	/^ subroutine GlobalSegMapToGlobalMap_(/;"	s	module:m_ConvertMaps
GlobalSegMapToIndexArr_	m_GlobalToLocal.F90	/^subroutine GlobalSegMapToIndexArr_(/;"	s	module:m_GlobalToLocal
GlobalSegMapToIndex_	m_GlobalToLocal.F90	/^ integer function GlobalSegMapToIndex_(/;"	f	module:m_GlobalToLocal
GlobalSegMapToIndices_	m_GlobalToLocal.F90	/^ subroutine GlobalSegMapToIndices_(/;"	s	module:m_GlobalToLocal
GlobalSegMapToLocalMatrix_	m_GlobalToLocal.F90	/^ subroutine GlobalSegMapToLocalMatrix_(/;"	s	module:m_GlobalToLocal
GlobalSegMapToNavigator_	m_GlobalToLocal.F90	/^ subroutine GlobalSegMapToNavigator_(/;"	s	module:m_GlobalToLocal
GlobalStorage_	m_GlobalSegMap.F90	/^ integer function GlobalStorage_(/;"	f	module:m_GlobalSegMap
GlobalWeightedSumRAttrDP_	m_AttrVectReduce.F90	/^ subroutine GlobalWeightedSumRAttrDP_(/;"	s	module:m_AttrVectReduce
GlobalWeightedSumRAttrSP_	m_AttrVectReduce.F90	/^ subroutine GlobalWeightedSumRAttrSP_(/;"	s	module:m_AttrVectReduce
GsizeIndex	m_ExchangeMaps.F90	/^  integer, parameter :: GsizeIndex /;"	v	module:m_ExchangeMaps
ICopyL_	m_AttrVect.F90	/^ subroutine ICopyL_(/;"	s	module:m_AttrVect
ICopy_	m_AttrVect.F90	/^ subroutine ICopy_(/;"	s	module:m_AttrVect
LoadGlobalMapPars_	m_ExchangeMaps.F90	/^ subroutine LoadGlobalMapPars_(/;"	s	module:m_ExchangeMaps
LoadGlobalSegMapPars_	m_ExchangeMaps.F90	/^ subroutine LoadGlobalSegMapPars_(/;"	s	module:m_ExchangeMaps
LocalPack	m_Rearranger.F90	/^         integer,dimension(:,:),pointer :: LocalPack$/;"	k	type:Rearranger
LocalReduceRAttr_	m_AttrVectReduce.F90	/^ subroutine LocalReduceRAttr_(/;"	s	module:m_AttrVectReduce
LocalReduce_	m_AttrVectReduce.F90	/^ subroutine LocalReduce_(/;"	s	module:m_AttrVectReduce
LocalSize	m_Rearranger.F90	/^         integer :: LocalSize$/;"	k	type:Rearranger
LocalWeightedSumRAttrDP_	m_AttrVectReduce.F90	/^ subroutine LocalWeightedSumRAttrDP_(/;"	s	module:m_AttrVectReduce
LocalWeightedSumRAttrSP_	m_AttrVectReduce.F90	/^ subroutine LocalWeightedSumRAttrSP_(/;"	s	module:m_AttrVectReduce
MCTFLAGS	Makefile	/^MCTFLAGS = $(INCFLAG)$(MPEUPATH)$/;"	m
MCTWorld	m_MCTWorld.F90	/^    type MCTWorld$/;"	t	module:m_MCTWorld
MCT_AVG	m_Accumulator.F90	/^    integer, parameter :: MCT_AVG /;"	v	module:m_Accumulator
MCT_SUM	m_Accumulator.F90	/^    integer, parameter :: MCT_SUM /;"	v	module:m_Accumulator
MCT_comm	m_MCTWorld.F90	/^      integer :: MCT_comm /;"	k	type:MCTWorld
MODULE	Makefile	/^MODULE		= mct$/;"	m
MapHandshake_	m_ExchangeMaps.F90	/^ subroutine MapHandshake_(/;"	s	module:m_ExchangeMaps
MapTypeIndex	m_ExchangeMaps.F90	/^  integer, parameter :: MapTypeIndex /;"	v	module:m_ExchangeMaps
MaskedSpatialAverageRAttrGG_	m_SpatialIntegral.F90	/^ subroutine MaskedSpatialAverageRAttrGG_(/;"	s	module:m_SpatialIntegral
MaskedSpatialAverageRAttrVDP_	m_SpatialIntegralV.F90	/^ subroutine MaskedSpatialAverageRAttrVDP_(/;"	s	module:m_SpatialIntegralV
MaskedSpatialAverageRAttrVSP_	m_SpatialIntegralV.F90	/^ subroutine MaskedSpatialAverageRAttrVSP_(/;"	s	module:m_SpatialIntegralV
MaskedSpatialIntegralRAttrGG_	m_SpatialIntegral.F90	/^ subroutine MaskedSpatialIntegralRAttrGG_(/;"	s	module:m_SpatialIntegral
MaskedSpatialIntegralRAttrVDP_	m_SpatialIntegralV.F90	/^ subroutine MaskedSpatialIntegralRAttrVDP_(/;"	s	module:m_SpatialIntegralV
MaskedSpatialIntegralRAttrVSP_	m_SpatialIntegralV.F90	/^ subroutine MaskedSpatialIntegralRAttrVSP_(/;"	s	module:m_SpatialIntegralV
Matrix	m_SparseMatrixPlus.F90	/^        type(SparseMatrix)/;"	k	type:SparseMatrixPlus
MergeFourGGDP_	m_Merge.F90	/^ subroutine MergeFourGGDP_(/;"	s	module:m_Merge
MergeFourGGSP_	m_Merge.F90	/^ subroutine MergeFourGGSP_(/;"	s	module:m_Merge
MergeInDataGGDP_	m_Merge.F90	/^ subroutine MergeInDataGGDP_(/;"	s	module:m_Merge
MergeInDataGGSP_	m_Merge.F90	/^ subroutine MergeInDataGGSP_(/;"	s	module:m_Merge
MergeThreeGGDP_	m_Merge.F90	/^ subroutine MergeThreeGGDP_(/;"	s	module:m_Merge
MergeThreeGGSP_	m_Merge.F90	/^ subroutine MergeThreeGGSP_(/;"	s	module:m_Merge
MergeTwoGGDP_	m_Merge.F90	/^ subroutine MergeTwoGGDP_(/;"	s	module:m_Merge
MergeTwoGGSP_	m_Merge.F90	/^ subroutine MergeTwoGGSP_(/;"	s	module:m_Merge
Navigator	m_Navigator.F90	/^    Type Navigator$/;"	t	module:m_Navigator
NumComponents_	m_MCTWorld.F90	/^ integer function NumComponents_(/;"	f	module:m_MCTWorld
NumHandshakePars	m_ExchangeMaps.F90	/^  integer, parameter :: NumHandshakePars /;"	v	module:m_ExchangeMaps
NumMapTypes	m_ExchangeMaps.F90	/^  integer, parameter :: NumMapTypes /;"	v	module:m_ExchangeMaps
NumSegIndex	m_ExchangeMaps.F90	/^  integer, parameter :: NumSegIndex /;"	v	module:m_ExchangeMaps
NumSegments	m_Navigator.F90	/^      integer :: NumSegments	/;"	k	type:Navigator
NumSegments_	m_Navigator.F90	/^ integer function NumSegments_(/;"	f	module:m_Navigator
NumSteps_	m_Accumulator.F90	/^ integer function NumSteps_(/;"	f	module:m_Accumulator
OBJS_ALL	Makefile	/^OBJS_ALL	= $(SRCS_F90:.F90=.o)$/;"	m
OrderedPoints_	m_GlobalSegMap.F90	/^    subroutine OrderedPoints_(/;"	s	module:m_GlobalSegMap
PairedMaskedAverageRAttrGG_	m_SpatialIntegral.F90	/^ subroutine PairedMaskedAverageRAttrGG_(/;"	s	module:m_SpatialIntegral
PairedMaskedIntegralRAttrGG_	m_SpatialIntegral.F90	/^ subroutine PairedMaskedIntegralRAttrGG_(/;"	s	module:m_SpatialIntegral
PairedSpatialAverageRAttrGG_	m_SpatialIntegral.F90	/^ subroutine PairedSpatialAverageRAttrGG_(/;"	s	module:m_SpatialIntegral
PairedSpatialAverageRAttrVDP_	m_SpatialIntegralV.F90	/^ subroutine PairedSpatialAverageRAttrVDP_(/;"	s	module:m_SpatialIntegralV
PairedSpatialAverageRAttrVSP_	m_SpatialIntegralV.F90	/^ subroutine PairedSpatialAverageRAttrVSP_(/;"	s	module:m_SpatialIntegralV
PairedSpatialIntegralRAttrGG_	m_SpatialIntegral.F90	/^ subroutine PairedSpatialIntegralRAttrGG_(/;"	s	module:m_SpatialIntegral
PairedSpatialIntegralRAttrVDP_	m_SpatialIntegralV.F90	/^ subroutine PairedSpatialIntegralRAttrVDP_(/;"	s	module:m_SpatialIntegralV
PairedSpatialIntegralRAttrVSP_	m_SpatialIntegralV.F90	/^ subroutine PairedSpatialIntegralRAttrVSP_(/;"	s	module:m_SpatialIntegralV
PermuteInPlace_	m_GlobalSegMap.F90	/^    subroutine PermuteInPlace_(/;"	s	module:m_GlobalSegMap
Permute_	m_AttrVect.F90	/^ subroutine Permute_(/;"	s	module:m_AttrVect
Permute_	m_GeneralGrid.F90	/^ subroutine Permute_(/;"	s	module:m_GeneralGrid
Permute_	m_SparseMatrix.F90	/^ subroutine Permute_(/;"	s	module:m_SparseMatrix
ProcessStorage_	m_GlobalSegMap.F90	/^ integer function ProcessStorage_(/;"	f	module:m_GlobalSegMap
RCopyL_	m_AttrVect.F90	/^ subroutine RCopyL_(/;"	s	module:m_AttrVect
RCopy_	m_AttrVect.F90	/^ subroutine RCopy_(/;"	s	module:m_AttrVect
Rearranger	m_Rearranger.F90	/^      type :: Rearranger$/;"	t	module:m_Rearranger
RecvRouter	m_Rearranger.F90	/^         type(Router) :: RecvRouter$/;"	k	type:Rearranger
Router	m_Router.F90	/^    type Router$/;"	t	module:m_Router
SHELL	Makefile	/^SHELL           = \/bin\/sh$/;"	m
SRCS_F90	Makefile	/^SRCS_F90	= m_MCTWorld.F90		\\$/;"	m
ScatterByColumnGSMap_	m_SparseMatrixComms.F90	/^ subroutine ScatterByColumnGSMap_(/;"	s	module:m_SparseMatrixComms
ScatterByRowGSMap_	m_SparseMatrixComms.F90	/^ subroutine ScatterByRowGSMap_(/;"	s	module:m_SparseMatrixComms
SendRouter	m_Rearranger.F90	/^         type(Router) :: SendRouter$/;"	k	type:Rearranger
SharedIndicesOneType_	m_AttrVect.F90	/^ subroutine SharedIndicesOneType_(/;"	s	module:m_AttrVect
SharedIndices_	m_AttrVect.F90	/^ subroutine SharedIndices_(/;"	s	module:m_AttrVect
SortPermuteInPlace_	m_GlobalSegMap.F90	/^    subroutine SortPermuteInPlace_(/;"	s	module:m_GlobalSegMap
SortPermute_	m_AttrVect.F90	/^ subroutine SortPermute_(/;"	s	module:m_AttrVect
SortPermute_	m_GeneralGrid.F90	/^ subroutine SortPermute_(/;"	s	module:m_GeneralGrid
SortPermute_	m_SparseMatrix.F90	/^ subroutine SortPermute_(/;"	s	module:m_SparseMatrix
Sort_	m_AttrVect.F90	/^ subroutine Sort_(/;"	s	module:m_AttrVect
Sort_	m_GeneralGrid.F90	/^ subroutine Sort_(/;"	s	module:m_GeneralGrid
Sort_	m_GlobalSegMap.F90	/^    subroutine Sort_(/;"	s	module:m_GlobalSegMap
Sort_	m_SparseMatrix.F90	/^ subroutine Sort_(/;"	s	module:m_SparseMatrix
Sortg_	m_GeneralGrid.F90	/^ subroutine Sortg_(/;"	s	module:m_GeneralGrid
SparseMatrix	m_SparseMatrix.F90	/^      Type SparseMatrix$/;"	t	module:m_SparseMatrix
SparseMatrixPlus	m_SparseMatrixPlus.F90	/^      Type SparseMatrixPlus$/;"	t	module:m_SparseMatrixPlus
SparseMatrixToXGlobalSegMap_	m_SparseMatrixToMaps.F90	/^ subroutine SparseMatrixToXGlobalSegMap_(/;"	s	module:m_SparseMatrixToMaps
SparseMatrixToYGlobalSegMap_	m_SparseMatrixToMaps.F90	/^ subroutine SparseMatrixToYGlobalSegMap_(/;"	s	module:m_SparseMatrixToMaps
SparseMatrix_iList	m_SparseMatrix.F90	/^  character(len=*),parameter :: SparseMatrix_iList=/;"	v	module:m_SparseMatrix
SparseMatrix_igcol	m_SparseMatrix.F90	/^  integer,parameter :: SparseMatrix_igcol=/;"	v	module:m_SparseMatrix
SparseMatrix_igrow	m_SparseMatrix.F90	/^  integer,parameter :: SparseMatrix_igrow=/;"	v	module:m_SparseMatrix
SparseMatrix_ilcol	m_SparseMatrix.F90	/^  integer,parameter :: SparseMatrix_ilcol=/;"	v	module:m_SparseMatrix
SparseMatrix_ilrow	m_SparseMatrix.F90	/^  integer,parameter :: SparseMatrix_ilrow=/;"	v	module:m_SparseMatrix
SparseMatrix_iweight	m_SparseMatrix.F90	/^  integer,parameter :: SparseMatrix_iweight=/;"	v	module:m_SparseMatrix
SparseMatrix_rList	m_SparseMatrix.F90	/^  character(len=*),parameter :: SparseMatrix_rList=/;"	v	module:m_SparseMatrix
SpatialAverageRAttrGG_	m_SpatialIntegral.F90	/^ subroutine SpatialAverageRAttrGG_(/;"	s	module:m_SpatialIntegral
SpatialAverageRAttrVDP_	m_SpatialIntegralV.F90	/^ subroutine SpatialAverageRAttrVDP_(/;"	s	module:m_SpatialIntegralV
SpatialAverageRAttrVSP_	m_SpatialIntegralV.F90	/^ subroutine SpatialAverageRAttrVSP_(/;"	s	module:m_SpatialIntegralV
SpatialIntegralRAttrGG_	m_SpatialIntegral.F90	/^ subroutine SpatialIntegralRAttrGG_(/;"	s	module:m_SpatialIntegral
SpatialIntegralRAttrVDP_	m_SpatialIntegralV.F90	/^ subroutine SpatialIntegralRAttrVDP_(/;"	s	module:m_SpatialIntegralV
SpatialIntegralRAttrVSP_	m_SpatialIntegralV.F90	/^ subroutine SpatialIntegralRAttrVSP_(/;"	s	module:m_SpatialIntegralV
StepsDone_	m_Accumulator.F90	/^ integer function StepsDone_(/;"	f	module:m_Accumulator
Strategy	m_SparseMatrixPlus.F90	/^        type(String) :: Strategy$/;"	k	type:SparseMatrixPlus
Tag	m_SparseMatrixPlus.F90	/^	integer :: Tag$/;"	k	type:SparseMatrixPlus
ThisMCTWorld	m_MCTWorld.F90	/^    type(MCTWorld) :: ThisMCTWorld /;"	v	module:m_MCTWorld
Unpermute_	m_AttrVect.F90	/^ subroutine Unpermute_(/;"	s	module:m_AttrVect
VPATH	Makefile	/^VPATH=$(SRCDIR)\/mct$/;"	m
VectorLength	m_Navigator.F90	/^      integer :: VectorLength	/;"	k	type:Navigator
VectorLength_	m_Navigator.F90	/^ integer function VectorLength_(/;"	f	module:m_Navigator
XPrimeLength	m_SparseMatrixPlus.F90	/^        integer :: XPrimeLength$/;"	k	type:SparseMatrixPlus
XToXPrime	m_SparseMatrixPlus.F90	/^        type(Rearranger) :: XToXPrime$/;"	k	type:SparseMatrixPlus
XandY	m_SparseMatrixPlus.F90	/^      character(len=*), parameter :: XandY /;"	v	module:m_SparseMatrixPlus
Xonly	m_SparseMatrixPlus.F90	/^      character(len=*), parameter :: Xonly /;"	v	module:m_SparseMatrixPlus
YPrimeLength	m_SparseMatrixPlus.F90	/^        integer :: YPrimeLength$/;"	k	type:SparseMatrixPlus
YPrimeToY	m_SparseMatrixPlus.F90	/^        type(Rearranger) :: YPrimeToY$/;"	k	type:SparseMatrixPlus
Yonly	m_SparseMatrixPlus.F90	/^      character(len=*), parameter :: Yonly /;"	v	module:m_SparseMatrixPlus
aCaCSharedAttrIndexList_	m_Accumulator.F90	/^ subroutine aCaCSharedAttrIndexList_(/;"	s	module:m_Accumulator
aVaCSharedAttrIndexList_	m_Accumulator.F90	/^ subroutine aVaCSharedAttrIndexList_(/;"	s	module:m_Accumulator
aVaVSharedAttrIndexList_	m_AttrVect.F90	/^ subroutine aVaVSharedAttrIndexList_(/;"	s	module:m_AttrVect
aVindices1	m_AttrVect.F90	/^       integer, dimension(:), pointer :: aVindices1$/;"	k	type:AVSharedIndicesOneType
aVindices2	m_AttrVect.F90	/^       integer, dimension(:), pointer :: aVindices2$/;"	k	type:AVSharedIndicesOneType
accumulate_	m_Accumulator.F90	/^ subroutine accumulate_(/;"	s	module:m_Accumulator
active_pes_	m_GlobalSegMap.F90	/^    subroutine active_pes_(/;"	s	module:m_GlobalSegMap
appendIAttr_	m_AttrVect.F90	/^ subroutine appendIAttr_(/;"	s	module:m_AttrVect
appendRAttr_	m_AttrVect.F90	/^ subroutine appendRAttr_(/;"	s	module:m_AttrVect
average_	m_Accumulator.F90	/^ subroutine average_(/;"	s	module:m_Accumulator
bcastGeneralGridHeader_	m_GeneralGridComms.F90	/^ subroutine bcastGeneralGridHeader_(/;"	s	module:m_GeneralGridComms
bcast_	m_AccumulatorComms.F90	/^ subroutine bcast_(/;"	s	module:m_AccumulatorComms
bcast_	m_AttrVectComms.F90	/^ subroutine bcast_(/;"	s	module:m_AttrVectComms
bcast_	m_GeneralGridComms.F90	/^ subroutine bcast_(/;"	s	module:m_GeneralGridComms
bcast_	m_GlobalSegMapComms.F90	/^ subroutine bcast_(/;"	s	module:m_GlobalSegMapComms
bcastp_	m_AccumulatorComms.F90	/^ subroutine bcastp_(/;"	s	module:m_AccumulatorComms
bounds_	m_GlobalMap.F90	/^ subroutine bounds_(/;"	s	module:m_GlobalMap
ceil2	m_SPMDutils.F90	/^  integer function ceil2(/;"	f	module:m_SPMDutils
cleanSharedIndicesOneType_	m_AttrVect.F90	/^ subroutine cleanSharedIndicesOneType_(/;"	s	module:m_AttrVect
cleanSharedIndices_	m_AttrVect.F90	/^ subroutine cleanSharedIndices_(/;"	s	module:m_AttrVect
clean_	m_Accumulator.F90	/^ subroutine clean_(/;"	s	module:m_Accumulator
clean_	m_AttrVect.F90	/^ subroutine clean_(/;"	s	module:m_AttrVect
clean_	m_GeneralGrid.F90	/^    subroutine clean_(/;"	s	module:m_GeneralGrid
clean_	m_GlobalMap.F90	/^ subroutine clean_(/;"	s	module:m_GlobalMap
clean_	m_GlobalSegMap.F90	/^    subroutine clean_(/;"	s	module:m_GlobalSegMap
clean_	m_MCTWorld.F90	/^    subroutine clean_(/;"	s	module:m_MCTWorld
clean_	m_Navigator.F90	/^ subroutine clean_(/;"	s	module:m_Navigator
clean_	m_Rearranger.F90	/^ subroutine clean_(/;"	s	module:m_Rearranger
clean_	m_Router.F90	/^    subroutine clean_(/;"	s	module:m_Router
clean_	m_SparseMatrix.F90	/^    subroutine clean_(/;"	s	module:m_SparseMatrix
clean_	m_SparseMatrixPlus.F90	/^ subroutine clean_(/;"	s	module:m_SparseMatrixPlus
comp1id	m_Router.F90	/^      integer :: comp1id /;"	k	type:Router
comp2id	m_Router.F90	/^      integer :: comp2id /;"	k	type:Router
comp_id	m_GlobalMap.F90	/^      integer :: comp_id /;"	k	type:GlobalMap
comp_id	m_GlobalSegMap.F90	/^      integer :: comp_id	/;"	k	type:GlobalSegMap
comp_id_	m_GlobalMap.F90	/^ integer function comp_id_(/;"	f	module:m_GlobalMap
comp_id_	m_GlobalSegMap.F90	/^ integer function comp_id_(/;"	f	module:m_GlobalSegMap
contiguous	m_AttrVect.F90	/^       logical :: contiguous /;"	k	type:AVSharedIndicesOneType
coordinate_list	m_GeneralGrid.F90	/^      type(List)                     :: coordinate_list$/;"	k	type:GeneralGrid
coordinate_sort_order	m_GeneralGrid.F90	/^      type(List)                     :: coordinate_sort_order$/;"	k	type:GeneralGrid
copy_	m_GlobalSegMap.F90	/^  subroutine copy_(/;"	s	module:m_GlobalSegMap
counts	m_GlobalMap.F90	/^      integer,dimension(:),pointer :: counts	/;"	k	type:GlobalMap
counts	m_Navigator.F90	/^      integer,pointer,dimension(:) :: counts /;"	k	type:Navigator
data	m_Accumulator.F90	/^      type(AttrVect) :: data /;"	k	type:Accumulator
data	m_GeneralGrid.F90	/^      type(AttrVect)                 :: data$/;"	k	type:GeneralGrid
data	m_SparseMatrix.F90	/^	 type(AttrVect) :: data$/;"	k	type:SparseMatrix
data_flag	m_AttrVect.F90	/^       character*7 :: data_flag /;"	k	type:AVSharedIndicesOneType
descend	m_GeneralGrid.F90	/^      logical, dimension(:), pointer :: descend$/;"	k	type:GeneralGrid
dims_	m_GeneralGrid.F90	/^ integer function dims_(/;"	f	module:m_GeneralGrid
displs	m_GlobalMap.F90	/^      integer,dimension(:),pointer :: displs	/;"	k	type:GlobalMap
displs	m_Navigator.F90	/^      integer,pointer,dimension(:) :: displs /;"	k	type:Navigator
exportGlobalColumnIndices_	m_SparseMatrix.F90	/^ subroutine exportGlobalColumnIndices_(/;"	s	module:m_SparseMatrix
exportGlobalRowIndices_	m_SparseMatrix.F90	/^ subroutine exportGlobalRowIndices_(/;"	s	module:m_SparseMatrix
exportIAttr_	m_Accumulator.F90	/^ subroutine exportIAttr_(/;"	s	module:m_Accumulator
exportIAttr_	m_AttrVect.F90	/^ subroutine exportIAttr_(/;"	s	module:m_AttrVect
exportIAttr_	m_GeneralGrid.F90	/^ subroutine exportIAttr_(/;"	s	module:m_GeneralGrid
exportIListToChar_	m_AttrVect.F90	/^ function exportIListToChar_(/;"	f	module:m_AttrVect
exportIList_	m_AttrVect.F90	/^ subroutine exportIList_(/;"	s	module:m_AttrVect
exportLocalColumnIndices_	m_SparseMatrix.F90	/^ subroutine exportLocalColumnIndices_(/;"	s	module:m_SparseMatrix
exportLocalRowIndices_	m_SparseMatrix.F90	/^ subroutine exportLocalRowIndices_(/;"	s	module:m_SparseMatrix
exportMatrixelementsDP_	m_SparseMatrix.F90	/^ subroutine exportMatrixelementsDP_(/;"	s	module:m_SparseMatrix
exportMatrixelementsSP_	m_SparseMatrix.F90	/^ subroutine exportMatrixelementsSP_(/;"	s	module:m_SparseMatrix
exportRAttrDP_	m_Accumulator.F90	/^ subroutine exportRAttrDP_(/;"	s	module:m_Accumulator
exportRAttrDP_	m_AttrVect.F90	/^ subroutine exportRAttrDP_(/;"	s	module:m_AttrVect
exportRAttrDP_	m_GeneralGrid.F90	/^ subroutine exportRAttrDP_(/;"	s	module:m_GeneralGrid
exportRAttrSP_	m_Accumulator.F90	/^ subroutine exportRAttrSP_(/;"	s	module:m_Accumulator
exportRAttrSP_	m_AttrVect.F90	/^ subroutine exportRAttrSP_(/;"	s	module:m_AttrVect
exportRAttrSP_	m_GeneralGrid.F90	/^ subroutine exportRAttrSP_(/;"	s	module:m_GeneralGrid
exportRListToChar_	m_AttrVect.F90	/^ function exportRListToChar_(/;"	f	module:m_AttrVect
exportRList_	m_AttrVect.F90	/^ subroutine exportRList_(/;"	s	module:m_AttrVect
exportStrategyToChar_	m_SparseMatrixPlus.F90	/^ function exportStrategyToChar_(/;"	f	module:m_SparseMatrixPlus
getIListToChar_	m_AttrVect.F90	/^ function getIListToChar_(/;"	f	module:m_AttrVect
getIList_	m_Accumulator.F90	/^ subroutine getIList_(/;"	s	module:m_Accumulator
getIList_	m_AttrVect.F90	/^ subroutine getIList_(/;"	s	module:m_AttrVect
getRListToChar_	m_AttrVect.F90	/^ function getRListToChar_(/;"	f	module:m_AttrVect
getRList_	m_Accumulator.F90	/^ subroutine getRList_(/;"	s	module:m_Accumulator
getRList_	m_AttrVect.F90	/^ subroutine getRList_(/;"	s	module:m_AttrVect
get_	m_Navigator.F90	/^ subroutine get_(/;"	s	module:m_Navigator
global_col_range_	m_SparseMatrix.F90	/^ subroutine global_col_range_(/;"	s	module:m_SparseMatrix
global_row_range_	m_SparseMatrix.F90	/^ subroutine global_row_range_(/;"	s	module:m_SparseMatrix
gsize	m_GlobalMap.F90	/^      integer :: gsize	/;"	k	type:GlobalMap
gsize	m_GlobalSegMap.F90	/^      integer :: gsize	/;"	k	type:GlobalSegMap
gsize_	m_GlobalMap.F90	/^ integer function gsize_(/;"	f	module:m_GlobalMap
gsize_	m_GlobalSegMap.F90	/^ integer function gsize_(/;"	f	module:m_GlobalSegMap
haloed_	m_GlobalSegMap.F90	/^    logical function haloed_(/;"	f	module:m_GlobalSegMap
iAction	m_Accumulator.F90	/^      integer, pointer, dimension(:) :: iAction /;"	k	type:Accumulator
iAttr	m_AttrVect.F90	/^      integer,dimension(:,:),pointer :: iAttr$/;"	k	type:AttrVect
iList	m_AttrVect.F90	/^      type(List) :: iList$/;"	k	type:AttrVect
idGprocid	m_MCTWorld.F90	/^      integer,dimension(:,:),pointer :: idGprocid /;"	k	type:MCTWorld
importGlobalColumnIndices_	m_SparseMatrix.F90	/^ subroutine importGlobalColumnIndices_(/;"	s	module:m_SparseMatrix
importGlobalRowIndices_	m_SparseMatrix.F90	/^ subroutine importGlobalRowIndices_(/;"	s	module:m_SparseMatrix
importIAttr_	m_Accumulator.F90	/^ subroutine importIAttr_(/;"	s	module:m_Accumulator
importIAttr_	m_AttrVect.F90	/^ subroutine importIAttr_(/;"	s	module:m_AttrVect
importIAttr_	m_GeneralGrid.F90	/^ subroutine importIAttr_(/;"	s	module:m_GeneralGrid
importLocalColumnIndices_	m_SparseMatrix.F90	/^ subroutine importLocalColumnIndices_(/;"	s	module:m_SparseMatrix
importLocalRowIndices_	m_SparseMatrix.F90	/^ subroutine importLocalRowIndices_(/;"	s	module:m_SparseMatrix
importMatrixElementsDP_	m_SparseMatrix.F90	/^ subroutine importMatrixElementsDP_(/;"	s	module:m_SparseMatrix
importMatrixElementsSP_	m_SparseMatrix.F90	/^ subroutine importMatrixElementsSP_(/;"	s	module:m_SparseMatrix
importRAttrDP_	m_Accumulator.F90	/^ subroutine importRAttrDP_(/;"	s	module:m_Accumulator
importRAttrDP_	m_AttrVect.F90	/^ subroutine importRAttrDP_(/;"	s	module:m_AttrVect
importRAttrDP_	m_GeneralGrid.F90	/^ subroutine importRAttrDP_(/;"	s	module:m_GeneralGrid
importRAttrSP_	m_Accumulator.F90	/^ subroutine importRAttrSP_(/;"	s	module:m_Accumulator
importRAttrSP_	m_AttrVect.F90	/^ subroutine importRAttrSP_(/;"	s	module:m_AttrVect
importRAttrSP_	m_GeneralGrid.F90	/^ subroutine importRAttrSP_(/;"	s	module:m_GeneralGrid
increasing_	m_GlobalSegMap.F90	/^ logical function increasing_(/;"	f	module:m_GlobalSegMap
indexIA_	m_Accumulator.F90	/^ integer function indexIA_(/;"	f	module:m_Accumulator
indexIA_	m_AttrVect.F90	/^ integer function indexIA_(/;"	f	module:m_AttrVect
indexIA_	m_GeneralGrid.F90	/^ integer function indexIA_(/;"	f	module:m_GeneralGrid
indexIA_	m_SparseMatrix.F90	/^    integer function indexIA_(/;"	f	module:m_SparseMatrix
indexRA_	m_Accumulator.F90	/^ integer function indexRA_(/;"	f	module:m_Accumulator
indexRA_	m_AttrVect.F90	/^ integer function indexRA_(/;"	f	module:m_AttrVect
indexRA_	m_GeneralGrid.F90	/^ integer function indexRA_(/;"	f	module:m_GeneralGrid
indexRA_	m_SparseMatrix.F90	/^    integer function indexRA_(/;"	f	module:m_SparseMatrix
index_list	m_GeneralGrid.F90	/^      type(List)                     :: index_list$/;"	k	type:GeneralGrid
initCartesianDP_	m_GeneralGrid.F90	/^ subroutine initCartesianDP_(/;"	s	module:m_GeneralGrid
initCartesianSP_	m_GeneralGrid.F90	/^ subroutine initCartesianSP_(/;"	s	module:m_GeneralGrid
initDistributed_	m_SparseMatrixPlus.F90	/^ subroutine initDistributed_(/;"	s	module:m_SparseMatrixPlus
initFromRoot_	m_SparseMatrixPlus.F90	/^ subroutine initFromRoot_(/;"	s	module:m_SparseMatrixPlus
initUnstructuredDP_	m_GeneralGrid.F90	/^ subroutine initUnstructuredDP_(/;"	s	module:m_GeneralGrid
initUnstructuredSP_	m_GeneralGrid.F90	/^ subroutine initUnstructuredSP_(/;"	s	module:m_GeneralGrid
init_	m_Accumulator.F90	/^ subroutine init_(/;"	s	module:m_Accumulator
init_	m_AttrVect.F90	/^ subroutine init_(/;"	s	module:m_AttrVect
init_	m_GeneralGrid.F90	/^ subroutine init_(/;"	s	module:m_GeneralGrid
init_	m_Navigator.F90	/^    subroutine init_(/;"	s	module:m_Navigator
init_	m_Rearranger.F90	/^ subroutine init_(/;"	s	module:m_Rearranger
init_	m_SparseMatrix.F90	/^ subroutine init_(/;"	s	module:m_SparseMatrix
init_index_	m_GlobalSegMap.F90	/^    subroutine init_index_(/;"	s	module:m_GlobalSegMap
init_remote_	m_GlobalMap.F90	/^ subroutine init_remote_(/;"	s	module:m_GlobalMap
initavs_	m_Accumulator.F90	/^ subroutine initavs_(/;"	s	module:m_Accumulator
initd_	m_GlobalMap.F90	/^ subroutine initd_(/;"	s	module:m_GlobalMap
initd_	m_GlobalSegMap.F90	/^ subroutine initd_(/;"	s	module:m_GlobalSegMap
initd_	m_MCTWorld.F90	/^ subroutine initd_(/;"	s	module:m_MCTWorld
initd_	m_Router.F90	/^ subroutine initd_(/;"	s	module:m_Router
initgg_	m_GeneralGrid.F90	/^ subroutine initgg_(/;"	s	module:m_GeneralGrid
initialized_	m_Accumulator.F90	/^ logical function initialized_(/;"	f	module:m_Accumulator
initialized_	m_MCTWorld.F90	/^ logical function initialized_(/;"	f	module:m_MCTWorld
initialized_	m_SparseMatrixPlus.F90	/^ logical function initialized_(/;"	f	module:m_SparseMatrixPlus
initl_	m_AttrVect.F90	/^ subroutine initl_(/;"	s	module:m_AttrVect
initl_	m_GeneralGrid.F90	/^ subroutine initl_(/;"	s	module:m_GeneralGrid
initm_	m_MCTWorld.F90	/^ subroutine initm_(/;"	s	module:m_MCTWorld
initp0_	m_GlobalSegMap.F90	/^ subroutine initp0_(/;"	s	module:m_GlobalSegMap
initp1_	m_GlobalSegMap.F90	/^ subroutine initp1_(/;"	s	module:m_GlobalSegMap
initp_	m_Accumulator.F90	/^ subroutine initp_(/;"	s	module:m_Accumulator
initp_	m_GlobalSegMap.F90	/^ subroutine initp_(/;"	s	module:m_GlobalSegMap
initp_	m_Router.F90	/^ subroutine initp_(/;"	s	module:m_Router
initr_	m_GlobalMap.F90	/^ subroutine initr_(/;"	s	module:m_GlobalMap
initr_	m_GlobalSegMap.F90	/^ subroutine initr_(/;"	s	module:m_GlobalSegMap
initr_	m_MCTWorld.F90	/^ subroutine initr_(/;"	s	module:m_MCTWorld
inits_	m_Accumulator.F90	/^ subroutine inits_(/;"	s	module:m_Accumulator
initv_	m_Accumulator.F90	/^ subroutine initv_(/;"	s	module:m_Accumulator
initv_	m_AttrVect.F90	/^ subroutine initv_(/;"	s	module:m_AttrVect
ip1	m_Router.F90	/^      type(iptr),dimension(:),pointer :: ip1 /;"	k	type:Router
iptr	m_Router.F90	/^      type :: iptr$/;"	t	module:m_Router
irecv_	m_Transfer.F90	/^ subroutine irecv_(/;"	s	module:m_Transfer
ireqs	m_Router.F90	/^      integer,dimension(:),pointer   :: ireqs,/;"	k	type:Router
isend_	m_GlobalSegMapComms.F90	/^ subroutine isend_(/;"	s	module:m_GlobalSegMapComms
isend_	m_Transfer.F90	/^ subroutine isend_(/;"	s	module:m_Transfer
istatus	m_Router.F90	/^      integer,dimension(:,:),pointer :: istatus,/;"	k	type:Router
lAvsize	m_Router.F90	/^      integer :: lAvsize /;"	k	type:Router
length	m_GlobalSegMap.F90	/^      integer,dimension(:),pointer :: length	/;"	k	type:GlobalSegMap
local_col_range_	m_SparseMatrix.F90	/^ subroutine local_col_range_(/;"	s	module:m_SparseMatrix
local_row_range_	m_SparseMatrix.F90	/^ subroutine local_row_range_(/;"	s	module:m_SparseMatrix
locsize	m_Router.F90	/^      integer,dimension(:),pointer   :: locsize /;"	k	type:Router
lsize	m_GlobalMap.F90	/^      integer :: lsize	/;"	k	type:GlobalMap
lsize_	m_Accumulator.F90	/^ integer function lsize_(/;"	f	module:m_Accumulator
lsize_	m_AttrVect.F90	/^ integer function lsize_(/;"	f	module:m_AttrVect
lsize_	m_GeneralGrid.F90	/^ integer function lsize_(/;"	f	module:m_GeneralGrid
lsize_	m_GlobalMap.F90	/^ integer function lsize_(/;"	f	module:m_GlobalMap
lsize_	m_GlobalSegMap.F90	/^ integer function lsize_(/;"	f	module:m_GlobalSegMap
lsize_	m_SparseMatrix.F90	/^    integer function lsize_(/;"	f	module:m_SparseMatrix
m_Accumulator	m_Accumulator.F90	/^ module m_Accumulator$/;"	m
m_AccumulatorComms	m_AccumulatorComms.F90	/^ module m_AccumulatorComms$/;"	m
m_AttrVect	m_AttrVect.F90	/^ module m_AttrVect$/;"	m
m_AttrVectComms	m_AttrVectComms.F90	/^ module m_AttrVectComms$/;"	m
m_AttrVectReduce	m_AttrVectReduce.F90	/^ module m_AttrVectReduce$/;"	m
m_ConvertMaps	m_ConvertMaps.F90	/^ module m_ConvertMaps$/;"	m
m_ExchangeMaps	m_ExchangeMaps.F90	/^ module m_ExchangeMaps$/;"	m
m_GeneralGrid	m_GeneralGrid.F90	/^ module m_GeneralGrid$/;"	m
m_GeneralGridComms	m_GeneralGridComms.F90	/^ module m_GeneralGridComms$/;"	m
m_GlobalMap	m_GlobalMap.F90	/^ module m_GlobalMap$/;"	m
m_GlobalSegMap	m_GlobalSegMap.F90	/^ module m_GlobalSegMap$/;"	m
m_GlobalSegMapComms	m_GlobalSegMapComms.F90	/^ module m_GlobalSegMapComms$/;"	m
m_GlobalToLocal	m_GlobalToLocal.F90	/^ module m_GlobalToLocal$/;"	m
m_MCTWorld	m_MCTWorld.F90	/^ module m_MCTWorld$/;"	m
m_MatAttrVectMul	m_MatAttrVectMul.F90	/^ module m_MatAttrVectMul$/;"	m
m_Merge	m_Merge.F90	/^ module m_Merge$/;"	m
m_Navigator	m_Navigator.F90	/^ module m_Navigator$/;"	m
m_Rearranger	m_Rearranger.F90	/^ module m_Rearranger$/;"	m
m_Router	m_Router.F90	/^ module m_Router$/;"	m
m_SPMDutils	m_SPMDutils.F90	/^ module m_SPMDutils$/;"	m
m_SparseMatrix	m_SparseMatrix.F90	/^ module m_SparseMatrix$/;"	m
m_SparseMatrixComms	m_SparseMatrixComms.F90	/^ module m_SparseMatrixComms$/;"	m
m_SparseMatrixDecomp	m_SparseMatrixDecomp.F90	/^ module m_SparseMatrixDecomp$/;"	m
m_SparseMatrixPlus	m_SparseMatrixPlus.F90	/^ module m_SparseMatrixPlus$/;"	m
m_SparseMatrixToMaps	m_SparseMatrixToMaps.F90	/^ module m_SparseMatrixToMaps$/;"	m
m_SpatialIntegral	m_SpatialIntegral.F90	/^ module m_SpatialIntegral$/;"	m
m_SpatialIntegralV	m_SpatialIntegralV.F90	/^ module m_SpatialIntegralV$/;"	m
m_Transfer	m_Transfer.F90	/^ module m_Transfer$/;"	m
m_swapm_FP	m_SPMDutils.F90	/^   subroutine m_swapm_FP /;"	s	module:m_SPMDutils
m_swapm_int	m_SPMDutils.F90	/^   subroutine m_swapm_int /;"	s	module:m_SPMDutils
max_nlseg_	m_GlobalSegMap.F90	/^        integer function max_nlseg_(/;"	f	module:m_GlobalSegMap
max_nprocs	m_Rearranger.F90	/^      integer :: max_nprocs /;"	v	module:m_Rearranger
maxsize	m_Router.F90	/^      integer :: maxsize /;"	k	type:Router
msize_	m_Navigator.F90	/^ integer function msize_(/;"	f	module:m_Navigator
mygrank	m_MCTWorld.F90	/^      integer :: mygrank /;"	k	type:MCTWorld
myname	m_Accumulator.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_Accumulator
myname	m_AccumulatorComms.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_AccumulatorComms
myname	m_AttrVect.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_AttrVect
myname	m_AttrVectComms.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_AttrVectComms
myname	m_AttrVectReduce.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_AttrVectReduce
myname	m_ConvertMaps.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_ConvertMaps
myname	m_ExchangeMaps.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_ExchangeMaps
myname	m_GeneralGrid.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_GeneralGrid
myname	m_GeneralGridComms.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_GeneralGridComms
myname	m_GlobalMap.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_GlobalMap
myname	m_GlobalSegMap.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_GlobalSegMap
myname	m_GlobalSegMapComms.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_GlobalSegMapComms
myname	m_GlobalToLocal.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_GlobalToLocal
myname	m_MCTWorld.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_MCTWorld
myname	m_MatAttrVectMul.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_MatAttrVectMul
myname	m_Merge.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_Merge
myname	m_Navigator.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_Navigator
myname	m_Rearranger.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_Rearranger
myname	m_Router.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_Router
myname	m_SPMDutils.F90	/^  character(len=*), parameter :: myname=/;"	v	module:m_SPMDutils
myname	m_SparseMatrix.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_SparseMatrix
myname	m_SparseMatrixComms.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_SparseMatrixComms
myname	m_SparseMatrixDecomp.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_SparseMatrixDecomp
myname	m_SparseMatrixPlus.F90	/^      character(len=*), parameter :: myname /;"	v	module:m_SparseMatrixPlus
myname	m_SparseMatrixToMaps.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_SparseMatrixToMaps
myname	m_SpatialIntegral.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_SpatialIntegral
myname	m_SpatialIntegralV.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_SpatialIntegralV
myname	m_Transfer.F90	/^  character(len=*),parameter :: myname=/;"	v	module:m_Transfer
nCols_	m_SparseMatrix.F90	/^    integer function nCols_(/;"	f	module:m_SparseMatrix
nIAttr_	m_Accumulator.F90	/^ integer function nIAttr_(/;"	f	module:m_Accumulator
nIAttr_	m_AttrVect.F90	/^ integer function nIAttr_(/;"	f	module:m_AttrVect
nRAttr_	m_Accumulator.F90	/^ integer function nRAttr_(/;"	f	module:m_Accumulator
nRAttr_	m_AttrVect.F90	/^ integer function nRAttr_(/;"	f	module:m_AttrVect
nRows_	m_SparseMatrix.F90	/^    integer function nRows_(/;"	f	module:m_SparseMatrix
ncols	m_SparseMatrix.F90	/^	 integer :: ncols$/;"	k	type:SparseMatrix
ncomps	m_MCTWorld.F90	/^      integer :: ncomps	/;"	k	type:MCTWorld
ngseg	m_GlobalSegMap.F90	/^      integer :: ngseg	/;"	k	type:GlobalSegMap
ngseg_	m_GlobalSegMap.F90	/^ integer function ngseg_(/;"	f	module:m_GlobalSegMap
nlseg_	m_GlobalSegMap.F90	/^ integer function nlseg_(/;"	f	module:m_GlobalSegMap
nprocs	m_Router.F90	/^      integer :: nprocs	/;"	k	type:Router
nprocspid	m_MCTWorld.F90	/^      integer,dimension(:),pointer :: nprocspid /;"	k	type:MCTWorld
nrows	m_SparseMatrix.F90	/^     integer :: nrows$/;"	k	type:SparseMatrix
num_indices	m_AttrVect.F90	/^       integer :: num_indices /;"	k	type:AVSharedIndicesOneType
num_segs	m_Router.F90	/^      integer,dimension(:),pointer   :: num_segs /;"	k	type:Router
num_steps	m_Accumulator.F90	/^      integer :: num_steps /;"	k	type:Accumulator
numiatt	m_Router.F90	/^      integer :: numiatt /;"	k	type:Router
numratt	m_Router.F90	/^      integer :: numratt /;"	k	type:Router
other_list	m_GeneralGrid.F90	/^      type(List)                     :: other_list$/;"	k	type:GeneralGrid
pair	m_SPMDutils.F90	/^   integer function pair(/;"	f	module:m_SPMDutils
peLocs_	m_GlobalSegMap.F90	/^ subroutine peLocs_(/;"	s	module:m_GlobalSegMap
pe_list	m_Router.F90	/^      integer,dimension(:),pointer   :: pe_list /;"	k	type:Router
pe_loc	m_GlobalSegMap.F90	/^      integer,dimension(:),pointer :: pe_loc	/;"	k	type:GlobalSegMap
permarr	m_Router.F90	/^      integer,dimension(:),pointer   :: permarr /;"	k	type:Router
pi	m_Router.F90	/^        integer,dimension(:),pointer :: pi$/;"	k	type:iptr
pr	m_Router.F90	/^        real(FP),dimension(:),pointer :: pr$/;"	k	type:rptr
printFromRootnp_	m_GlobalSegMap.F90	/^    subroutine printFromRootnp_(/;"	s	module:m_GlobalSegMap
print_	m_GlobalSegMap.F90	/^    subroutine print_(/;"	s	module:m_GlobalSegMap
print_	m_Rearranger.F90	/^    subroutine print_(/;"	s	module:m_Rearranger
print_	m_Router.F90	/^    subroutine print_(/;"	s	module:m_Router
printnp_	m_MCTWorld.F90	/^    subroutine printnp_(/;"	s	module:m_MCTWorld
ptr_counts_	m_Navigator.F90	/^ function ptr_counts_(/;"	f	module:m_Navigator
ptr_displs_	m_Navigator.F90	/^ function ptr_displs_(/;"	f	module:m_Navigator
rAction	m_Accumulator.F90	/^      integer, pointer, dimension(:) :: rAction /;"	k	type:Accumulator
rAttr	m_AttrVect.F90	/^      real(FP) ,dimension(:,:),pointer :: rAttr$/;"	k	type:AttrVect
rList	m_AttrVect.F90	/^      type(List) :: rList$/;"	k	type:AttrVect
rank1_	m_GlobalSegMap.F90	/^    subroutine rank1_(/;"	s	module:m_GlobalSegMap
rank_	m_GlobalMap.F90	/^ subroutine rank_(/;"	s	module:m_GlobalMap
rankm_	m_GlobalSegMap.F90	/^    subroutine rankm_(/;"	s	module:m_GlobalSegMap
rearrange_	m_Rearranger.F90	/^ subroutine rearrange_(/;"	s	module:m_Rearranger
recv_	m_AttrVectComms.F90	/^ subroutine recv_(/;"	s	module:m_AttrVectComms
recv_	m_GeneralGridComms.F90	/^ subroutine recv_(/;"	s	module:m_GeneralGridComms
recv_	m_GlobalSegMapComms.F90	/^ subroutine recv_(/;"	s	module:m_GlobalSegMapComms
recv_	m_Transfer.F90	/^ subroutine recv_(/;"	s	module:m_Transfer
resize_	m_Navigator.F90	/^ subroutine resize_(/;"	s	module:m_Navigator
row_e	m_SparseMatrix.F90	/^         integer,dimension(:),pointer :: row_s, row_e$/;"	k	type:SparseMatrix
row_max	m_SparseMatrix.F90	/^         integer :: row_max,/;"	k	type:SparseMatrix
row_min	m_SparseMatrix.F90	/^         integer :: row_max, row_min$/;"	k	type:SparseMatrix
row_s	m_SparseMatrix.F90	/^         integer,dimension(:),pointer :: row_s,/;"	k	type:SparseMatrix
row_sumDP_	m_SparseMatrix.F90	/^ subroutine row_sumDP_(/;"	s	module:m_SparseMatrix
row_sumSP_	m_SparseMatrix.F90	/^ subroutine row_sumSP_(/;"	s	module:m_SparseMatrix
row_sum_checkDP_	m_SparseMatrix.F90	/^ subroutine row_sum_checkDP_(/;"	s	module:m_SparseMatrix
row_sum_checkSP_	m_SparseMatrix.F90	/^ subroutine row_sum_checkSP_(/;"	s	module:m_SparseMatrix
rp1	m_Router.F90	/^      type(rptr),dimension(:),pointer :: rp1 /;"	k	type:Router
rptr	m_Router.F90	/^      type :: rptr$/;"	t	module:m_Router
rreqs	m_Router.F90	/^      integer,dimension(:),pointer   :: ireqs,rreqs /;"	k	type:Router
rstatus	m_Router.F90	/^      integer,dimension(:,:),pointer :: istatus,rstatus /;"	k	type:Router
sMatAvMult_DataLocal_	m_MatAttrVectMul.F90	/^ subroutine sMatAvMult_DataLocal_(/;"	s	module:m_MatAttrVectMul
sMatAvMult_SMPlus_	m_MatAttrVectMul.F90	/^ subroutine sMatAvMult_SMPlus_(/;"	s	module:m_MatAttrVectMul
seg_lengths	m_Router.F90	/^      integer,dimension(:,:),pointer :: seg_lengths!/;"	k	type:Router
seg_starts	m_Router.F90	/^      integer,dimension(:,:),pointer :: seg_starts /;"	k	type:Router
send_	m_AttrVectComms.F90	/^ subroutine send_(/;"	s	module:m_AttrVectComms
send_	m_GeneralGridComms.F90	/^ subroutine send_(/;"	s	module:m_GeneralGridComms
send_	m_GlobalSegMapComms.F90	/^ subroutine send_(/;"	s	module:m_GlobalSegMapComms
send_	m_Transfer.F90	/^ subroutine send_(/;"	s	module:m_Transfer
shared_integer	m_AttrVect.F90	/^       type(AVSharedIndicesOneType) :: shared_integer /;"	k	type:AVSharedIndices
shared_real	m_AttrVect.F90	/^       type(AVSharedIndicesOneType) :: shared_real /;"	k	type:AVSharedIndices
start	m_GlobalSegMap.F90	/^      integer,dimension(:),pointer :: start	/;"	k	type:GlobalSegMap
steps_done	m_Accumulator.F90	/^      integer :: steps_done /;"	k	type:Accumulator
tbl_end	m_SparseMatrix.F90	/^         integer :: tbl_end$/;"	k	type:SparseMatrix
tcol	m_SparseMatrix.F90	/^         integer, dimension(:,:), pointer :: tcol$/;"	k	type:SparseMatrix
twgt	m_SparseMatrix.F90	/^         real(FP), dimension(:,:), pointer :: twgt$/;"	k	type:SparseMatrix
vecinit	m_SparseMatrix.F90	/^         logical :: vecinit /;"	k	type:SparseMatrix
vecinit_	m_SparseMatrix.F90	/^ subroutine vecinit_(/;"	s	module:m_SparseMatrix
vecinit_	m_SparseMatrixPlus.F90	/^ subroutine vecinit_(/;"	s	module:m_SparseMatrixPlus
waitrecv_	m_Transfer.F90	/^ subroutine waitrecv_(/;"	s	module:m_Transfer
waitsend_	m_Transfer.F90	/^ subroutine waitsend_(/;"	s	module:m_Transfer
weight_list	m_GeneralGrid.F90	/^      type(List)                     :: weight_list$/;"	k	type:GeneralGrid
zero_	m_Accumulator.F90	/^ subroutine zero_(/;"	s	module:m_Accumulator
zero_	m_AttrVect.F90	/^ subroutine zero_(/;"	s	module:m_AttrVect
zero_	m_GeneralGrid.F90	/^ subroutine zero_(/;"	s	module:m_GeneralGrid
